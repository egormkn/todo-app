name: CI Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
  pull_request:
    branches: [ main ]

jobs:
  test-client:
    name: Test client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test -- --no-watch --no-progress --code-coverage --browsers=ChromeHeadlessCI
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: ${{ matrix.node-version == '16.x' }}
      with:
        name: client-coverage
        path: client/coverage/

  test-server:
    name: Test server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test -- --coverage
    - name: Run E2E tests
      run: npm run test:e2e
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: ${{ matrix.node-version == '16.x' }}
      with:
        name: server-coverage
        path: server/coverage/

  test-e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: e2e
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: e2e/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests with Cypress
      if: always()
      run: npm run test:cypress
    - name: Run tests with Playwright
      if: always()
      run: npx playwright install-deps && npx playwright install && npm run test:playwright

  deploy:
    name: Deploy to Github Pages
    runs-on: ubuntu-latest
    needs: [test-client, test-server]
    steps:
      - name: Download artifacts (client coverage)
        uses: actions/download-artifact@v2
        with:
          name: client-coverage
          path: coverage/client
      - name: Download artifacts (client coverage)
        uses: actions/download-artifact@v2
        with:
          name: server-coverage
          path: coverage/server
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./