var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.229,1,0.859]],["body/components/AppComponent.html",[0,0.364,1,1.46,2,1.456,3,0.17,4,0.149,5,1.129,6,1.129,7,0.149,8,3.291,9,1.456,10,2.101,11,1.076,12,2.044,13,1.853,14,2.161,15,1.527,16,0.386,17,1.091,18,2.251,19,0.658,20,3.829,21,6.772,22,0.987,23,3.829,24,0.591,25,0.019,26,0.83,27,0.36,28,0.73,29,3.829,30,0.767,31,0.847,32,0.26,33,0.214,34,2.461,35,2.461,36,0.17,37,0.237,38,1.441,39,3.829,40,3.829,41,3.829,42,2.673,43,3.829,44,5.18,45,3.829,46,2.673,47,3.829,48,3.829,49,2.461,50,2.937,51,3.291,52,1.129,53,1.527,54,1.527,55,0.933,56,1.854,57,1.129,58,1.129,59,0.889,60,1.129,61,0.889,62,0.978,63,0.978,64,1.854,65,0.933,66,1.129,67,0.933,68,1.129,69,0.889,70,0.73,71,1.129,72,0.889,73,1.129,74,0.889,75,0.978,76,0.889,77,0.806,78,0.889,79,1.129,80,0.889,81,1.129,82,0.889,83,0.978,84,0.933,85,1.129,86,0.933,87,1.129,88,1.026,89,1.236,90,1.527,91,0.933,92,1.129,93,0.933,94,0.933,95,0.889,96,1.129,97,0.889,98,1.026,99,1.076,100,0.889,101,1.076,102,1.129,103,0.013,104,0.013]],["title/modules/AppModule.html",[105,1.629,106,2.38]],["body/modules/AppModule.html",[1,1.71,3,0.174,4,0.152,7,0.152,13,0.956,25,0.019,32,0.369,33,0.22,34,2.524,35,2.524,36,0.234,37,0.243,65,1.662,67,1.662,72,1.584,103,0.013,104,0.013,106,4.811,107,1.477,108,2.595,109,3.374,110,3.374,111,3.374,112,3.374,113,4.385,114,2.937,115,2.189,116,1.826,117,2.74,118,3.386,119,2.318,120,2.928,121,4.041,122,1.727,123,2.318,124,3.926,125,4.528,126,3.926,127,2.189,128,2.189,129,3.386,130,1.214,131,1.214,132,4.041,133,2.086,134,2.343,135,2.937,136,1.934,137,2.189,138,2.524,139,3.374,140,3.926,141,3.926,142,3.374,143,3.011,144,3.374,145,2.189,146,1.274,147,3.926,148,3.926,149,3.926,150,1.554,151,1.003,152,4.041,153,3.011,154,3.374,155,2.74,156,3.374,157,3.374,158,3.374,159,2.74,160,3.011,161,3.374,162,3.926,163,3.926,164,3.926,165,3.926,166,3.374]],["title/modules/AppRoutingModule.html",[105,1.629,113,2.38]],["body/modules/AppRoutingModule.html",[0,0.277,3,0.199,4,0.174,7,0.174,25,0.019,32,0.335,33,0.25,36,0.199,37,0.277,72,1.332,98,1.199,103,0.014,104,0.014,107,1.684,113,3.689,119,1.969,123,2.526,142,3.846,151,1.766,167,3.432,168,2.495,169,5.739,170,3.689,171,4.073,172,1.684,173,3.782,174,4.474,175,3.2,176,3.846,177,3.846,178,3.2,179,3.846,180,3.846,181,3.2,182,3.846,183,3.846,184,3.2,185,3.846,186,2.495,187,3.846,188,3.846,189,4.443,190,3.846,191,3.846,192,3.432,193,6.685,194,3.689,195,2.341,196,4.474,197,4.474,198,6.337,199,4.474,200,4.474,201,4.474,202,2.876]],["title/modules/AppServerModule.html",[105,1.629,203,2.584]],["body/modules/AppServerModule.html",[1,1.713,3,0.223,4,0.195,7,0.195,25,0.019,32,0.359,33,0.282,34,3.235,36,0.223,37,0.312,103,0.015,104,0.015,106,4.684,107,1.894,108,3.044,114,3.445,115,2.806,116,2.34,119,2.719,120,3.044,123,2.719,133,1.993,136,2.479,139,4.326,203,5.151,204,4.326,205,5.032,206,5.032,207,5.032,208,6.179,209,3.512,210,6.179,211,4.326,212,5.032]],["title/components/AuthComponent.html",[0,0.229,59,0.859]],["body/components/AuthComponent.html",[0,0.386,1,1.004,2,1.578,3,0.192,4,0.168,5,1.275,6,1.275,7,0.168,11,1.215,12,2.065,13,1.873,15,1.655,25,0.018,26,0.764,32,0.217,33,0.242,36,0.192,37,0.268,52,1.275,53,1.655,54,1.655,55,1.053,56,1.946,57,1.275,58,1.275,59,1.532,60,1.275,61,1.004,62,1.105,63,1.105,64,1.946,65,1.053,66,1.275,67,1.053,68,1.275,69,1.004,70,0.824,71,1.275,72,1.004,73,1.275,74,1.004,75,1.105,76,1.004,77,0.91,78,1.004,79,1.275,80,1.004,81,1.275,82,1.004,83,1.105,84,1.053,85,1.275,86,1.053,87,1.275,88,1.159,89,1.313,90,1.655,91,1.053,92,1.275,93,1.053,94,1.053,95,1.004,96,1.275,97,1.004,98,1.159,99,1.215,100,1.004,101,1.215,102,1.275,103,0.014,104,0.014,192,4.306,213,3.716]],["title/guards/AuthGuard.html",[173,2.21,214,2.84]],["body/guards/AuthGuard.html",[3,0.195,4,0.17,7,0.17,9,1.235,14,1.832,16,0.443,17,1.194,19,0.755,22,1.197,24,0.97,25,0.019,26,0.77,27,0.59,28,1.197,30,1.137,32,0.315,33,0.246,36,0.195,37,0.272,38,1.653,103,0.014,104,0.014,146,2.039,150,1.739,151,1.123,172,1.653,173,3.386,194,4.268,215,3.37,216,3.776,217,5.707,218,3.37,219,3.924,220,2.441,221,4.393,222,5.672,223,6.156,224,6.156,225,6.156,226,4.393,227,3.386,228,2.638,229,4.876,230,4.393,231,1.449,232,2.449,233,1.933,234,1.235,235,3.386,236,4.393,237,1.832,238,4.393,239,4.393,240,4.393,241,3.776]],["title/interceptors/AuthInterceptor.html",[242,3.182,243,2.84]],["body/interceptors/AuthInterceptor.html",[3,0.217,4,0.189,7,0.189,9,1.373,16,0.493,17,1.277,22,0.931,24,0.755,25,0.019,26,0.599,27,0.459,28,0.931,30,0.979,32,0.331,33,0.273,36,0.217,37,0.303,103,0.015,104,0.015,122,2.15,146,1.97,151,1.55,159,4.606,231,1.55,243,4.654,244,4.886,245,4.199,246,6.067,247,6.067,248,6.902,249,6.902,250,4.886,251,4.199,252,3.452,253,4.886,254,6.067,255,2.15,256,6.599,257,4.886,258,4.886,259,4.886,260,4.886,261,4.886,262,4.886,263,4.886,264,4.886]],["title/modules/AuthModule.html",[105,1.629,175,2.064]],["body/modules/AuthModule.html",[3,0.182,4,0.159,7,0.159,25,0.019,32,0.374,33,0.23,36,0.182,37,0.254,59,1.604,61,1.604,62,1.049,63,1.386,74,1.604,75,1.049,76,1.604,77,0.864,82,1.604,83,1.049,84,1.683,103,0.013,104,0.013,107,1.544,108,2.672,114,3.025,115,2.288,116,1.908,118,3.487,119,2.387,120,2.021,121,4.161,122,1.806,123,2.387,129,3.487,130,1.269,131,1.269,132,4.161,133,1.625,134,2.449,138,2.638,175,4.238,192,3.147,265,3.527,266,3.527,267,3.527,268,4.441,269,4.103,270,3.786,271,2.449,272,2.864,273,5.558,274,2.864,275,4.103,276,4.663,277,2.449,278,3.527,279,2.864,280,2.864]],["title/interfaces/AuthResponse.html",[281,1.262,282,2.064]],["body/interfaces/AuthResponse.html",[3,0.146,4,0.128,7,0.128,14,1.375,16,0.332,19,0.567,24,0.509,25,0.019,26,0.572,27,0.31,31,1.032,32,0.34,33,0.184,36,0.276,37,0.204,70,0.628,77,0.694,103,0.011,104,0.011,122,1.45,127,1.838,128,1.838,133,1.305,135,1.838,136,1.624,137,1.838,145,1.838,146,2.204,151,1.735,220,1.123,228,2.171,231,1.193,233,1.45,234,1.817,235,2.787,252,2.836,255,1.45,281,2.01,282,2.603,283,1.724,284,1.967,285,1.193,286,3.791,287,2.126,288,2.603,289,2.119,290,1.967,291,1.838,292,2.119,293,2.386,294,1.967,295,3.001,296,2.119,297,1.838,298,1.838,299,3.023,300,2.603,301,1.838,302,2.603,303,1.967,304,1.838,305,1.838,306,2.119,307,1.948,308,2.119,309,2.119,310,2.119,311,2.119,312,1.533,313,2.119,314,2.119,315,2.119,316,3.001,317,2.119,318,2.119,319,2.443,320,3.001,321,2.119,322,2.119,323,2.119,324,2.119,325,2.119,326,3.085,327,2.119,328,3.001,329,3.001,330,3.485,331,2.787,332,3.001,333,2.787,334,3.236,335,2.119,336,1.453,337,3.485,338,3.485,339,2.119,340,2.119,341,2.119,342,1.624,343,2.119,344,3.001,345,2.119,346,2.119,347,2.119,348,2.119,349,1.838,350,2.787,351,2.119,352,2.119,353,1.967,354,2.119,355,2.119,356,2.119,357,1.967,358,2.119,359,3.001,360,3.001,361,2.119,362,2.119,363,2.119]],["title/modules/AuthRoutingModule.html",[105,1.629,268,2.38]],["body/modules/AuthRoutingModule.html",[0,0.434,3,0.191,4,0.167,7,0.167,25,0.019,27,0.526,32,0.366,33,0.241,36,0.191,37,0.267,59,1.3,61,1.444,62,1.1,63,1.431,74,1.3,75,1.59,76,1.3,77,1.179,82,1.3,83,1.431,103,0.014,104,0.014,107,1.62,119,1.895,123,2.464,151,1.1,168,2.401,170,3.599,171,4,172,1.62,173,3.342,189,4.582,190,3.701,191,3.701,194,4.39,202,2.768,268,3.599,272,3.006,273,5.663,274,3.006,278,3.701,279,3.006,280,3.006,364,4.306,365,5.599,366,4.767,367,3.701,368,3.599,369,4.295,370,3.908,371,3.303,372,3.006]],["title/injectables/AuthService.html",[220,1.262,231,0.946]],["body/injectables/AuthService.html",[3,0.117,4,0.102,7,0.102,14,1.099,16,0.266,17,0.835,19,0.681,22,1.318,24,1.008,25,0.019,26,0.782,27,0.599,28,1.138,30,1.332,31,1.172,32,0.32,33,0.147,36,0.252,37,0.163,62,1.013,70,0.908,75,1.013,77,1.116,83,1.013,103,0.01,104,0.01,122,1.159,127,1.469,128,1.469,133,1.043,135,1.469,136,1.298,137,1.469,145,2.657,146,2.07,151,1.63,220,1.351,228,2.466,231,1.013,233,1.159,234,1.793,235,3.394,252,2.974,255,1.159,281,1.807,282,1.469,284,1.572,285,1.013,286,1.693,287,2.131,288,2.956,289,1.693,290,1.572,291,1.469,292,1.693,293,2.727,294,1.572,295,3.408,296,1.693,297,1.469,298,1.469,299,3.17,300,2.21,301,1.469,302,2.956,303,1.572,304,1.469,305,1.469,306,3.063,307,1.988,308,2.548,309,3.063,310,2.548,311,1.693,312,1.843,313,1.693,314,3.063,315,3.063,316,2.548,317,1.693,318,2.548,319,2.774,320,3.063,321,1.693,322,1.693,323,1.693,324,1.693,325,2.548,326,2.774,327,1.693,328,2.548,329,2.548,330,3.063,331,2.366,332,2.548,333,2.366,334,2.844,335,1.693,336,1.524,337,3.063,338,3.063,339,2.548,340,1.693,341,1.693,342,1.298,343,2.548,344,2.548,345,1.693,346,1.693,347,1.693,348,2.548,349,2.657,350,2.366,351,1.693,352,1.693,353,1.572,354,1.693,355,1.693,356,1.693,357,3.164,358,3.408,359,2.548,360,2.548,361,1.693,362,3.408,363,1.693,369,3.04,373,1.378,374,3.964,375,3.964,376,2.634,377,3.964,378,2.634,379,2.634,380,2.634,381,2.634,382,2.634,383,2.634,384,2.634,385,2.634,386,2.634,387,2.634,388,1.419,389,2.634]],["title/components/ConnectAccountFormComponent.html",[0,0.229,61,0.859]],["body/components/ConnectAccountFormComponent.html",[0,0.325,1,0.721,2,1.259,3,0.138,4,0.121,5,0.916,6,0.916,7,0.121,9,1.259,10,1.879,11,0.874,12,2.002,13,1.813,15,0.916,16,0.313,17,0.943,18,2.056,19,0.77,22,1.094,24,0.48,25,0.019,26,0.704,27,0.493,28,0.592,30,0.623,31,0.99,32,0.305,33,0.174,36,0.138,37,0.193,52,0.916,53,1.32,54,1.32,55,0.757,56,1.693,57,0.916,58,0.916,59,0.721,60,0.916,61,1.333,62,1.709,63,1.88,64,1.693,65,0.757,66,0.916,67,0.757,68,0.916,69,0.721,70,0.592,71,0.916,72,0.721,73,0.916,74,0.721,75,0.794,76,0.721,77,0.654,78,0.721,79,0.916,80,0.721,81,0.916,82,0.721,83,0.794,84,0.757,85,0.916,86,0.757,87,0.916,88,0.833,89,1.105,90,1.32,91,0.757,92,0.916,93,0.757,94,0.757,95,0.721,96,0.916,97,0.721,98,0.833,99,0.874,100,0.721,101,0.874,102,0.916,103,0.011,104,0.011,130,0.961,131,0.961,150,1.773,151,1.341,172,1.17,218,2.384,219,3.534,220,2.226,227,3.132,232,1.733,234,1.475,280,4.248,285,1.144,287,0.916,336,1.2,350,1.855,388,1.603,390,1.113,391,5.231,392,1.998,393,3.125,394,1.603,395,4.025,396,1.603,397,3.434,398,3.418,399,3.373,400,4.008,401,2.189,402,2.395,403,3.848,404,3.108,405,3.108,406,1.998,407,1.17,408,1.296,409,1.009,410,1.17,411,2.671,412,3.108,413,3.108,414,3.108,415,3.108,416,3.108,417,3.108,418,3.108,419,2.671,420,3.108,421,2.384,422,2.384,423,3.108,424,3.108]],["title/injectables/FakeTasksService.html",[231,0.946,425,2.584]],["body/injectables/FakeTasksService.html",[3,0.094,4,0.082,7,0.082,9,0.595,16,0.213,17,0.704,19,0.364,22,1.131,24,0.794,25,0.019,26,0.749,27,0.538,28,0.98,30,1.03,32,0.274,33,0.118,36,0.094,37,0.131,38,0.796,49,4.61,89,1.479,94,1.779,103,0.008,104,0.008,136,1.042,146,1.669,150,2.479,195,3.492,231,0.855,234,1.537,237,2.28,252,2.995,255,0.931,285,0.855,293,2.405,312,0.984,336,0.897,373,1.106,388,1.198,425,2.335,426,5.254,427,1.818,428,3.184,429,4.719,430,3.346,431,3.346,432,3.346,433,2.115,434,2.115,435,2.115,436,3.346,437,2.86,438,2.115,439,2.478,440,3.346,441,6.26,442,2.115,443,5.466,444,5.254,445,3.346,446,2.115,447,3.346,448,2.115,449,5.046,450,3.065,451,3.181,452,3.346,453,3.346,454,3.984,455,3.346,456,3.346,457,5.103,458,7.624,459,3.62,460,6.496,461,3.346,462,3.346,463,6.496,464,3.346,465,3.346,466,2.115,467,5.859,468,5.859,469,3.346,470,3.346,471,4.193,472,5.466,473,4.719,474,4.719,475,4.056,476,2.115,477,3.346,478,1.476,479,2.115,480,1.818,481,1.36,482,1.36,483,1.476,484,2.115,485,2.115,486,2.115,487,2.115,488,1.818,489,4.151,490,4.151]],["title/components/FooterComponent.html",[0,0.229,65,0.902]],["body/components/FooterComponent.html",[0,0.361,1,0.875,2,1.441,3,0.167,4,0.146,5,1.112,6,1.112,7,0.146,11,1.06,12,2.041,13,1.85,15,1.112,16,0.38,19,0.648,22,1.11,24,0.582,25,0.019,26,0.766,27,0.354,28,0.718,32,0.313,33,0.211,36,0.167,37,0.234,52,1.112,53,1.511,54,1.511,55,0.918,56,1.843,57,1.112,58,1.112,59,0.875,60,1.112,61,0.875,62,0.963,63,0.963,64,1.843,65,1.522,66,1.112,67,0.918,68,1.112,69,0.875,70,0.718,71,1.112,72,0.875,73,1.112,74,0.875,75,0.963,76,0.875,77,0.794,78,0.875,79,1.112,80,0.875,81,1.112,82,0.875,83,0.963,84,0.918,85,1.112,86,0.918,87,1.112,88,1.01,89,1.226,90,1.511,91,0.918,92,1.112,93,0.918,94,0.918,95,0.875,96,1.112,97,0.875,98,1.01,99,1.06,100,0.875,101,1.06,102,1.112,103,0.012,104,0.012,130,1.166,131,1.585,285,1.31,336,1.374,388,1.835,390,1.349,394,1.835,396,1.835,401,1.572,402,2.606,407,1.419,409,1.664,410,1.419,491,3.24,492,4.405,493,5.823,494,5.125,495,6.741,496,5.29,497,5.125,498,5.125,499,3.769,500,2.891,501,2.891,502,3.769,503,5.125]],["title/components/HeaderComponent.html",[0,0.229,67,0.902]],["body/components/HeaderComponent.html",[0,0.317,1,0.691,2,1.22,3,0.132,4,0.115,5,0.878,6,0.878,7,0.115,9,1.22,10,1.833,11,0.837,12,1.992,13,1.804,15,0.878,16,0.3,17,0.914,18,2.014,19,0.512,22,1.259,24,0.67,25,0.019,26,0.839,27,0.529,28,1.19,30,1.026,31,1.244,32,0.3,33,0.167,36,0.132,37,0.184,38,1.12,50,3.328,52,0.878,53,1.279,54,1.279,55,0.725,56,1.659,57,0.878,58,0.878,59,0.691,60,0.878,61,0.691,62,0.761,63,0.761,64,1.659,65,0.725,66,0.878,67,1.371,68,0.878,69,0.691,70,0.567,71,0.878,72,0.691,73,0.878,74,0.691,75,0.761,76,0.691,77,0.627,78,0.691,79,0.878,80,0.691,81,0.878,82,0.691,83,0.761,84,0.725,85,0.878,86,0.725,87,0.878,88,0.798,89,1.078,90,1.279,91,0.725,92,0.878,93,0.725,94,0.725,95,0.691,96,0.878,97,0.691,98,0.798,99,0.837,100,0.691,101,0.837,102,0.878,103,0.011,104,0.011,116,2.018,130,0.921,131,0.921,150,1.718,220,2.128,228,2.381,237,1.81,255,1.31,285,1.109,287,1.279,336,1.163,342,2.137,388,1.553,390,1.065,394,1.553,396,1.553,401,2.136,402,2.347,407,1.12,408,1.241,409,0.966,410,1.12,444,2.558,450,1.384,504,2.558,505,3.928,506,5.142,507,5.12,508,4.339,509,4.401,510,5.12,511,5.542,512,4.316,513,3.73,514,2.077,515,4.339,516,2.976,517,2.976,518,3.73,519,2.976,520,5.368,521,2.976,522,2.976,523,2.976,524,2.558,525,4.339,526,4.339,527,2.077,528,3.328,529,3.73,530,2.077,531,2.976,532,2.558,533,2.558,534,2.976,535,2.558,536,2.558,537,4.339,538,2.976,539,2.976,540,2.558,541,4.339,542,3.73,543,3.617,544,3.328,545,2.976,546,2.976,547,3.328,548,2.283,549,2.976]],["title/components/HttpStatusComponent.html",[0,0.229,69,0.859]],["body/components/HttpStatusComponent.html",[0,0.301,1,0.633,2,1.143,3,0.121,4,0.106,5,0.804,6,0.804,7,0.106,9,1.143,10,1.742,11,0.767,12,1.972,13,1.785,15,0.804,16,0.275,17,0.856,18,1.931,19,0.699,22,1.195,24,0.421,25,0.019,26,0.661,27,0.507,28,0.52,30,0.815,31,1.076,32,0.314,33,0.153,36,0.121,37,0.169,49,3.709,52,0.804,53,1.199,54,1.199,55,0.664,56,1.59,57,0.804,58,0.804,59,0.633,60,0.804,61,0.633,62,0.697,63,0.697,64,1.59,65,0.664,66,0.804,67,0.664,68,0.804,69,1.252,70,1.255,71,0.804,72,0.633,73,0.804,74,0.633,75,0.697,76,0.633,77,0.574,78,0.633,79,0.804,80,0.633,81,0.804,82,0.633,83,0.697,84,0.664,85,0.804,86,0.664,87,0.804,88,0.731,89,1.024,90,1.199,91,0.664,92,0.804,93,0.664,94,0.664,95,0.633,96,0.804,97,0.633,98,0.731,99,0.767,100,0.633,101,0.767,102,0.804,103,0.01,104,0.01,130,0.843,131,0.843,151,0.697,160,2.091,172,1.026,186,3.593,209,3.765,227,2.904,234,1.368,237,1.697,251,3.496,271,1.627,285,1.039,287,1.199,336,1.446,388,1.931,390,0.976,394,1.456,396,1.456,398,3.166,400,3.765,401,2.029,402,2.25,407,1.026,408,1.137,409,0.885,410,1.026,439,1.627,471,2.091,550,4.142,551,2.344,552,3.12,553,4.865,554,4.067,555,4.224,556,4.865,557,4.959,558,5.394,559,2.727,560,3.765,561,6.27,562,4.067,563,4.067,564,2.727,565,2.727,566,5.394,567,2.727,568,2.727,569,5.394,570,2.727,571,2.344,572,4.067,573,2.727,574,2.727,575,4.067,576,2.727,577,4.067,578,2.727,579,4.067,580,2.727,581,2.727,582,4.067,583,2.727,584,2.727,585,2.344,586,2.727,587,2.727,588,3.496,589,4.067,590,2.344,591,2.344,592,2.727,593,3.496,594,2.091,595,2.091,596,2.727,597,2.727,598,2.727,599,2.344,600,2.727]],["title/modules/HttpStatusModule.html",[105,1.629,184,2.064]],["body/modules/HttpStatusModule.html",[3,0.214,4,0.187,7,0.187,25,0.019,32,0.354,33,0.27,36,0.214,37,0.299,69,1.674,70,1.147,103,0.015,104,0.015,107,1.814,108,2.964,114,3.355,115,2.688,116,2.242,118,3.868,119,2.648,123,2.648,129,3.868,130,1.491,131,1.491,138,3.099,157,5.172,158,5.172,159,4.2,160,4.615,161,5.172,184,4.122,186,2.688,270,4.2,271,2.877,550,3.099,552,3.698,601,4.144,602,4.144,603,4.144,604,4.634,605,4.821,606,4.144]],["title/modules/HttpStatusRoutingModule.html",[105,1.629,604,2.38]],["body/modules/HttpStatusRoutingModule.html",[0,0.325,3,0.233,4,0.204,7,0.204,25,0.019,32,0.341,33,0.294,36,0.233,37,0.325,69,1.472,70,1.001,103,0.015,104,0.015,107,1.976,119,2.311,123,2.79,151,1.342,168,2.928,170,4.076,171,4.379,172,1.976,186,2.928,189,3.375,202,3.375,369,4.028,372,3.665,550,3.375,552,4.028,555,3.665,557,4.513,604,4.076,606,4.513,607,5.251,608,5.251]],["title/injectables/HttpStatusService.html",[231,0.946,560,2.584]],["body/injectables/HttpStatusService.html",[3,0.216,4,0.189,7,0.189,14,2.029,16,0.49,17,1.274,19,0.836,22,1.153,24,0.934,25,0.019,26,0.741,27,0.568,28,1.255,30,0.975,31,1.338,32,0.33,33,0.272,36,0.216,37,0.301,103,0.015,104,0.015,186,3.672,231,1.546,233,2.14,234,1.367,290,2.903,333,4.231,373,2.544,439,3.931,550,4.234,555,3.395,560,4.223,585,5.201,609,4.181,610,5.052,611,6.05,612,4.864,613,4.864,614,6.05,615,4.864,616,4.181,617,4.864,618,4.181,619,4.864,620,4.864,621,4.864,622,4.864]],["title/components/IndexComponent.html",[0,0.229,72,0.859]],["body/components/IndexComponent.html",[0,0.308,1,0.658,2,1.176,3,0.126,4,0.227,5,0.835,6,0.835,7,0.11,9,1.176,10,1.781,11,0.796,12,1.981,13,1.793,15,0.835,16,0.502,17,0.881,18,1.967,19,0.719,22,1.169,24,0.646,25,0.019,26,0.718,27,0.467,28,1.047,30,0.997,31,1.215,32,0.308,33,0.159,34,1.821,35,1.821,36,0.126,37,0.175,42,2.921,51,4.724,52,0.835,53,1.234,54,1.234,55,0.69,56,1.621,57,0.835,58,0.835,59,0.658,60,0.835,61,0.658,62,0.724,63,0.724,64,1.621,65,0.69,66,0.835,67,0.69,68,0.835,69,0.658,70,0.54,71,0.835,72,1.276,73,0.835,74,0.658,75,0.724,76,0.658,77,0.596,78,0.658,79,0.835,80,0.658,81,0.835,82,0.658,83,0.724,84,0.69,85,0.835,86,0.69,87,0.835,88,0.759,89,1.048,90,1.234,91,0.69,92,0.835,93,0.69,94,1.212,95,0.658,96,0.835,97,0.658,98,0.759,99,0.796,100,0.658,101,0.796,102,0.835,103,0.01,104,0.01,116,1.946,130,0.876,131,0.876,150,1.657,195,2.189,220,2.091,228,2.314,234,1.176,255,1.247,285,1.069,312,2.854,336,0.759,342,2.707,388,1.014,390,1.014,394,1.498,396,1.498,401,2.076,402,2.292,407,1.066,408,1.182,409,0.92,410,1.066,451,2.418,478,2.921,501,3.21,505,3.817,509,4.277,511,5.04,512,4.215,513,3.597,514,1.977,518,3.597,520,4.277,524,2.435,532,2.435,533,2.435,535,2.435,536,2.435,540,2.435,543,2.69,544,3.21,623,2.435,624,4.976,625,4.185,626,4.976,627,4.185,628,2.833,629,2.833,630,2.833,631,2.833,632,4.185,633,2.833,634,4.185,635,2.833,636,2.833,637,4.185,638,5.496,639,4.185,640,4.185,641,4.185,642,4.185,643,4.185,644,3.597,645,4.185,646,4.185,647,4.185,648,4.185,649,4.185,650,3.21,651,4.185,652,4.185,653,4.185,654,4.185,655,4.185,656,4.185,657,3.597,658,3.597,659,4.185,660,4.185,661,3.597,662,5.496,663,4.185,664,4.185,665,4.185,666,2.69,667,4.185]],["title/interfaces/JwtPayload.html",[281,1.262,305,2.064]],["body/interfaces/JwtPayload.html",[3,0.145,4,0.126,7,0.126,14,1.36,16,0.329,19,0.561,24,0.504,25,0.019,26,0.76,27,0.435,31,1.025,32,0.339,33,0.183,36,0.275,37,0.202,70,0.621,77,0.687,103,0.011,104,0.011,122,1.435,127,1.818,128,1.818,133,1.291,135,1.818,136,1.606,137,1.818,145,1.818,146,2.198,151,1.731,220,1.112,228,2.155,231,1.184,233,1.435,234,1.811,235,2.766,252,2.82,255,1.435,281,2,282,1.818,283,1.706,284,1.947,285,1.184,286,2.097,287,2.151,288,2.584,289,2.097,290,1.947,291,1.818,292,2.097,293,2.372,294,1.947,295,2.979,296,2.097,297,1.818,298,1.818,299,3.006,300,3.457,301,1.818,302,2.584,303,1.947,304,1.818,305,2.584,306,2.097,307,1.933,308,2.097,309,2.097,310,2.097,311,2.097,312,1.517,313,2.097,314,2.097,315,2.097,316,2.979,317,2.097,318,2.097,319,2.424,320,2.979,321,2.097,322,2.097,323,2.097,324,2.097,325,2.097,326,3.071,327,2.097,328,2.979,329,2.979,330,3.465,331,2.766,332,2.979,333,2.766,334,3.218,335,2.097,336,1.445,337,3.465,338,3.465,339,2.097,340,2.097,341,2.097,342,1.606,343,2.097,344,2.979,345,2.097,346,2.097,347,2.097,348,2.097,349,1.818,350,2.766,351,2.097,352,2.097,353,1.947,354,2.097,355,2.097,356,2.097,357,1.947,358,2.097,359,2.979,360,2.979,361,2.097,362,2.097,363,2.097]],["title/interfaces/LogInDto.html",[281,1.262,299,2.064]],["body/interfaces/LogInDto.html",[3,0.145,4,0.126,7,0.126,14,1.36,16,0.329,19,0.561,24,0.504,25,0.019,26,0.568,27,0.435,31,1.025,32,0.339,33,0.183,36,0.275,37,0.202,70,0.621,77,0.687,103,0.011,104,0.011,122,1.435,127,1.818,128,1.818,133,1.291,135,1.818,136,1.606,137,1.818,145,1.818,146,2.198,151,1.731,220,1.112,228,2.155,231,1.184,233,1.435,234,1.811,235,2.766,252,2.82,255,1.435,281,2,282,1.818,283,1.706,284,1.947,285,1.184,286,2.097,287,2.151,288,2.584,289,2.097,290,1.947,291,1.818,292,2.097,293,2.372,294,1.947,295,2.979,296,2.097,297,1.818,298,1.818,299,3.273,300,3.457,301,3.273,302,2.584,303,1.947,304,1.818,305,1.818,306,2.097,307,1.933,308,2.097,309,2.097,310,2.097,311,2.097,312,1.517,313,2.097,314,2.097,315,2.097,316,2.979,317,2.097,318,2.097,319,2.424,320,2.979,321,2.097,322,2.097,323,2.097,324,2.097,325,2.097,326,3.071,327,2.097,328,2.979,329,2.979,330,3.465,331,2.766,332,2.979,333,2.766,334,3.218,335,2.097,336,1.445,337,3.465,338,3.465,339,2.097,340,2.097,341,2.097,342,1.606,343,2.097,344,2.979,345,2.097,346,2.097,347,2.097,348,2.097,349,1.818,350,2.766,351,2.097,352,2.097,353,1.947,354,2.097,355,2.097,356,2.097,357,1.947,358,2.097,359,2.979,360,2.979,361,2.097,362,2.097,363,2.097]],["title/injectables/Logger.html",[231,0.946,293,1.629]],["body/injectables/Logger.html",[3,0.221,4,0.193,7,0.193,14,2.08,16,0.503,17,1.294,22,1.269,24,1.029,25,0.019,26,0.816,27,0.626,28,1.269,30,1.334,31,1.473,32,0.25,33,0.279,36,0.221,37,0.309,103,0.015,104,0.015,231,1.57,233,2.194,293,2.704,373,2.609,398,3.214,543,3.95,668,4.286,669,6.144,670,6.144,671,4.986,672,6.66,673,6.144,674,4.986,675,6.144,676,4.986,677,4.986,678,4.986,679,4.986]],["title/components/LoginFormComponent.html",[0,0.229,74,0.859]],["body/components/LoginFormComponent.html",[0,0.271,1,0.532,2,1.001,3,0.102,4,0.089,5,0.675,6,0.675,7,0.089,9,1.001,10,1.564,11,0.644,12,1.927,13,1.742,15,0.675,16,0.359,17,0.75,18,1.765,19,0.612,22,1.163,24,0.354,25,0.019,26,0.604,27,0.502,28,1.017,30,0.714,31,0.966,32,0.296,33,0.128,36,0.102,37,0.142,42,2.486,46,3.946,52,0.675,53,1.05,54,1.05,55,0.558,56,1.454,57,0.675,58,0.675,59,0.532,60,0.675,61,0.532,62,0.585,63,1.117,64,1.454,65,0.558,66,0.675,67,0.558,68,0.675,69,0.532,70,0.436,71,0.675,72,0.532,73,0.675,74,1.144,75,1.559,76,0.532,77,0.482,78,0.532,79,0.675,80,0.532,81,0.675,82,0.532,83,0.585,84,0.558,85,0.675,86,0.558,87,0.675,88,0.614,89,0.92,90,1.05,91,0.558,92,0.675,93,0.558,94,0.558,95,0.532,96,0.675,97,0.532,98,0.614,99,0.644,100,0.532,101,0.644,102,0.675,103,0.009,104,0.009,130,0.709,131,0.709,146,0.744,150,1.73,172,0.862,219,3.29,220,2.011,227,2.609,232,1.277,234,1.501,237,1.823,272,4.374,277,1.367,285,0.91,287,1.454,293,2.597,294,1.367,300,3.152,301,3.402,304,1.986,336,0.955,349,1.277,371,3.352,388,1.275,390,0.82,392,1.473,393,4.258,394,1.275,395,3.352,396,1.275,397,2.732,398,2.286,399,2.809,400,3.441,401,1.823,402,2.056,403,1.969,406,2.29,407,0.862,408,0.956,409,0.744,410,0.862,421,1.757,450,2.032,454,1.367,459,2.732,527,1.599,528,2.732,530,1.599,543,3.432,547,3.352,548,3.352,680,5.386,681,3.352,682,4.37,683,3.781,684,2.732,685,3.352,686,1.757,687,3.781,688,3.562,689,2.732,690,1.969,691,1.969,692,2.291,693,2.732,694,3.781,695,3.062,696,2.291,697,1.757,698,1.969,699,1.757,700,1.757,701,1.969,702,1.969,703,1.969,704,3.441,705,2.291,706,2.291,707,2.291,708,2.291,709,2.291,710,1.969,711,2.291,712,1.969,713,3.062,714,1.969,715,1.969,716,2.732,717,2.732,718,2.732,719,2.732,720,3.781,721,2.732,722,2.732,723,3.562,724,1.969,725,1.969,726,1.969,727,1.969,728,1.969,729,1.969,730,1.969,731,1.969,732,3.062,733,3.062,734,3.062,735,1.969,736,3.062,737,1.969,738,1.969,739,1.969,740,1.599,741,1.969,742,3.757,743,4.807,744,4.59,745,4.237,746,1.757,747,3.757,748,4.237,749,1.969,750,3.757]],["title/components/LogoutFormComponent.html",[0,0.229,76,0.859]],["body/components/LogoutFormComponent.html",[0,0.365,1,0.895,2,1.463,3,0.171,4,0.15,5,1.137,6,1.137,7,0.15,9,1.463,10,2.109,11,1.084,12,2.045,13,1.854,15,1.137,16,0.389,17,1.096,18,2.258,19,0.663,22,0.992,24,0.596,25,0.018,26,0.773,27,0.362,28,0.735,30,0.773,31,1.151,32,0.295,33,0.216,36,0.171,37,0.239,38,1.451,52,1.137,53,1.535,54,1.535,55,0.939,56,1.86,57,1.137,58,1.137,59,0.895,60,1.137,61,0.895,62,0.985,63,0.985,64,1.86,65,0.939,66,1.137,67,0.939,68,1.137,69,0.895,70,0.735,71,1.137,72,0.895,73,1.137,74,0.895,75,0.985,76,1.464,77,1.24,78,0.895,79,1.137,80,0.895,81,1.137,82,0.895,83,0.985,84,0.939,85,1.137,86,0.939,87,1.137,88,1.034,89,1.24,90,1.535,91,0.939,92,1.137,93,0.939,94,0.939,95,0.895,96,1.137,97,0.895,98,1.034,99,1.084,100,0.895,101,1.084,102,1.137,103,0.013,104,0.013,172,1.451,219,3.868,220,2.313,232,2.15,234,1.084,279,4.112,392,2.479,393,3.633,419,3.315,514,2.692,751,5.064,752,3.856,753,3.856,754,3.856]],["title/components/ModalComponent.html",[0,0.229,78,0.859]],["body/components/ModalComponent.html",[0,0.344,1,0.508,2,0.966,3,0.097,4,0.085,5,0.645,6,0.645,7,0.085,9,0.966,10,1.721,11,0.615,12,1.914,13,1.73,15,0.645,16,0.221,17,0.723,18,1.721,19,0.591,22,1.248,24,0.742,25,0.019,26,0.711,27,0.655,28,0.916,30,1.047,31,1.328,32,0.241,33,0.122,36,0.097,37,0.135,52,0.645,53,1.013,54,1.013,55,0.533,56,1.418,57,0.645,58,0.645,59,0.508,60,0.645,61,0.508,62,0.559,63,0.559,64,1.418,65,0.533,66,0.645,67,0.533,68,0.645,69,0.508,70,0.417,71,0.645,72,0.508,73,0.645,74,0.508,75,0.559,76,0.508,77,0.461,78,1.116,79,0.645,80,0.508,81,0.645,82,0.508,83,0.559,84,0.533,85,0.645,86,0.533,87,0.645,88,0.586,89,0.893,90,1.013,91,0.533,92,0.645,93,0.533,94,0.533,95,0.508,96,0.645,97,0.508,98,0.586,99,0.615,100,1.116,101,1.559,102,0.645,103,0.008,104,0.008,120,1.077,133,0.866,134,1.306,143,2.635,151,1.482,234,1.63,237,1.433,285,0.878,287,1.418,307,2.005,331,2.051,336,1.486,349,1.915,388,1.519,390,0.783,394,1.23,396,1.23,398,1.797,422,1.678,450,1.017,451,2.643,478,1.527,505,3.687,512,3.687,610,3.254,755,1.678,756,4.243,757,3.435,758,4.807,759,3.435,760,3.435,761,4.243,762,3.773,763,4.985,764,4.192,765,2.187,766,5.224,767,5.8,768,3.435,769,2.187,770,4.449,771,2.187,772,4.449,773,2.187,774,2.187,775,3.435,776,5.31,777,4.985,778,2.187,779,3.435,780,3.435,781,4.985,782,2.187,783,2.187,784,2.187,785,2.187,786,2.187,787,2.187,788,2.187,789,3.435,790,3.435,791,3.435,792,3.355,793,3.728,794,2.187,795,2.187,796,2.187,797,2.187,798,2.187,799,3.435,800,2.187,801,2.187,802,2.187,803,2.187,804,2.187,805,3.647,806,2.187,807,2.187,808,3.435,809,4.243,810,4.243,811,2.187,812,1.88,813,2.187,814,2.187,815,2.187,816,2.187,817,3.435,818,2.187,819,2.187,820,2.187,821,2.187,822,3.435,823,3.435,824,3.435,825,2.187,826,2.187,827,5.545,828,3.435,829,4.807,830,3.435,831,2.187,832,4.807,833,2.187,834,4.243,835,3.647,836,3.435,837,3.435,838,3.435,839,2.187,840,2.187,841,2.187,842,4.243,843,2.635,844,2.187,845,3.435,846,2.187,847,2.187,848,2.187,849,2.187]],["title/directives/ModalDirective.html",[55,0.902,100,0.859]],["body/directives/ModalDirective.html",[3,0.235,4,0.205,7,0.205,11,1.487,12,1.707,16,0.533,19,0.909,22,1.214,24,0.817,25,0.018,26,0.648,27,0.598,28,1.008,32,0.265,33,0.296,36,0.235,37,0.328,55,1.551,99,1.487,100,1.478,101,1.79,103,0.015,104,0.015,285,1.627,610,4.885,812,6.508,850,4.546,851,5.289,852,5.289,853,5.289,854,5.289]],["title/injectables/ModalService.html",[231,0.946,855,1.937]],["body/injectables/ModalService.html",[3,0.183,4,0.16,7,0.16,16,0.416,17,1.147,19,0.709,22,1.161,24,0.941,25,0.019,26,0.667,27,0.681,28,1.038,30,1.091,31,0.912,32,0.305,33,0.231,36,0.271,37,0.256,38,1.553,78,0.958,103,0.013,104,0.013,120,2.033,133,1.634,134,2.463,146,1.34,151,1.054,231,1.391,237,2.271,287,1.987,303,3.25,336,1.106,373,2.159,388,1.477,451,2.682,658,5.239,762,3.868,763,5.571,764,4.523,770,4.971,772,4.971,776,5.239,792,4.254,835,4.681,855,2.849,856,3.165,857,6.481,858,4.127,859,6.481,860,4.127,861,5.445,862,4.127,863,4.127,864,4.127,865,4.127,866,5.445,867,6.094,868,5.445,869,4.127,870,4.127,871,5.445,872,4.127,873,4.127,874,4.127,875,4.127,876,4.127,877,4.127]],["title/guards/NoAuthGuard.html",[214,2.84,366,2.584]],["body/guards/NoAuthGuard.html",[3,0.199,4,0.174,7,0.174,9,1.26,14,1.87,16,0.452,17,1.21,19,0.771,22,1.209,24,0.98,25,0.019,26,0.777,27,0.596,28,1.209,30,1.152,32,0.318,33,0.251,36,0.199,37,0.278,38,1.687,103,0.014,104,0.014,146,1.866,151,1.146,172,1.687,194,4.3,215,3.439,217,5.75,218,3.439,219,3.946,220,2.452,223,6.185,224,5.75,225,6.185,227,2.676,229,4.94,231,1.469,232,2.5,233,1.973,234,1.26,241,3.854,357,3.43,366,4.011,878,5.75,879,3.854,880,4.483,881,5.747,882,6.343,883,4.483,884,4.483,885,4.483,886,4.483]],["title/components/ProfileComponent.html",[0,0.229,80,0.859]],["body/components/ProfileComponent.html",[0,0.351,1,0.83,2,1.39,3,0.159,4,0.139,5,1.055,6,1.055,7,0.139,9,1.39,10,2.028,11,1.006,12,2.031,13,1.841,15,1.055,16,0.361,17,1.041,18,2.188,19,0.615,22,1.08,24,0.553,25,0.019,26,0.749,27,0.465,28,0.682,30,0.717,31,1.093,32,0.306,33,0.2,36,0.159,37,0.222,38,1.346,52,1.055,53,1.458,54,1.458,55,0.871,56,1.802,57,1.055,58,1.055,59,0.83,60,1.055,61,0.83,62,0.914,63,0.914,64,1.802,65,0.871,66,1.055,67,0.871,68,1.055,69,0.83,70,0.682,71,1.055,72,0.83,73,1.055,74,0.83,75,0.914,76,0.83,77,0.753,78,0.83,79,1.055,80,1.419,81,1.055,82,0.83,83,0.914,84,0.871,85,1.055,86,0.871,87,1.055,88,0.959,89,1.193,90,1.458,91,0.871,92,1.055,93,0.871,94,0.871,95,0.83,96,1.055,97,0.83,98,0.959,99,1.006,100,0.83,101,1.006,102,1.055,103,0.012,104,0.012,130,1.107,131,1.107,285,1.264,390,1.281,394,1.77,396,1.77,401,2.364,402,2.55,406,3.178,407,1.346,408,1.492,409,1.161,410,1.346,527,2.497,528,3.793,530,2.497,542,4.25,887,3.075,888,5.666,889,4.945,890,6.635,891,3.578,892,4.631,893,4.945,894,3.578,895,3.578,896,3.578,897,3.578,898,4.945,899,4.945]],["title/interfaces/SignUpDto.html",[281,1.262,302,2.064]],["body/interfaces/SignUpDto.html",[3,0.144,4,0.126,7,0.126,14,1.356,16,0.328,19,0.559,24,0.502,25,0.019,26,0.759,27,0.434,31,1.023,32,0.339,33,0.182,36,0.275,37,0.201,70,0.62,77,0.685,103,0.011,104,0.011,122,1.431,127,1.813,128,1.813,133,1.288,135,1.813,136,1.602,137,1.813,145,1.813,146,2.197,151,1.729,220,1.108,228,2.151,231,1.182,233,1.431,234,1.809,235,2.76,252,2.815,255,1.431,281,1.998,282,1.813,283,1.701,284,1.941,285,1.182,286,2.09,287,2.15,288,2.578,289,2.09,290,1.941,291,1.813,292,2.09,293,2.368,294,1.941,295,2.973,296,2.09,297,1.813,298,1.813,299,3.268,300,2.578,301,1.813,302,3.001,303,2.76,304,3.268,305,1.813,306,2.09,307,1.929,308,2.09,309,2.09,310,2.09,311,2.09,312,1.512,313,2.09,314,2.09,315,2.09,316,2.973,317,2.09,318,2.09,319,2.419,320,2.973,321,2.09,322,2.09,323,2.09,324,2.09,325,2.09,326,3.066,327,2.09,328,2.973,329,2.973,330,3.459,331,2.76,332,2.973,333,2.76,334,3.212,335,2.09,336,1.442,337,3.459,338,3.459,339,2.09,340,2.09,341,2.09,342,1.602,343,2.09,344,2.973,345,2.09,346,2.09,347,2.09,348,2.09,349,1.813,350,2.76,351,2.09,352,2.09,353,1.941,354,2.09,355,2.09,356,2.09,357,1.941,358,2.09,359,2.973,360,2.973,361,2.09,362,2.09,363,2.09]],["title/components/SignUpFormComponent.html",[0,0.229,82,0.859]],["body/components/SignUpFormComponent.html",[0,0.264,1,0.512,2,0.973,3,0.098,4,0.086,5,0.651,6,0.651,7,0.086,9,0.973,10,1.528,11,0.62,12,1.916,13,1.733,15,0.651,16,0.349,17,0.729,18,1.73,19,0.595,22,1.148,24,0.341,25,0.019,26,0.777,27,0.493,28,1,30,0.693,31,0.944,32,0.279,33,0.124,36,0.098,37,0.137,42,2.415,46,3.885,52,0.651,53,1.02,54,1.02,55,0.538,56,1.425,57,0.651,58,0.651,59,0.512,60,0.651,61,0.512,62,0.564,63,1.09,64,1.425,65,0.538,66,0.651,67,0.538,68,0.651,69,0.512,70,0.421,71,0.651,72,0.512,73,0.651,74,0.512,75,0.564,76,0.512,77,0.465,78,0.512,79,0.651,80,0.512,81,0.651,82,1.121,83,1.54,84,0.538,85,0.651,86,0.538,87,0.651,88,0.592,89,0.899,90,1.02,91,0.538,92,0.651,93,0.538,94,0.538,95,0.512,96,0.651,97,0.512,98,0.592,99,0.62,100,0.512,101,0.62,102,0.651,103,0.008,104,0.008,130,0.683,131,0.683,146,0.716,150,1.69,153,2.654,172,0.831,219,3.245,220,1.983,227,2.547,232,1.231,234,1.358,237,1.78,274,4.324,277,1.317,285,0.884,287,1.547,300,3.104,301,3.359,304,3.359,336,0.927,342,2.742,371,3.273,388,1.239,390,0.79,392,1.419,393,4.205,394,1.239,395,3.273,396,1.239,397,2.654,398,2.233,399,2.743,400,3.372,401,1.78,402,2.015,407,0.831,408,0.921,409,0.716,410,0.831,421,1.693,450,1.985,454,1.317,459,2.654,527,1.541,529,2.974,530,1.541,543,2.224,544,4.025,547,3.273,548,3.273,681,3.273,683,3.706,684,2.654,685,3.273,686,1.693,687,3.706,689,2.654,690,1.897,691,1.897,693,2.654,694,4.622,695,2.974,697,1.693,698,1.897,699,2.654,700,1.693,701,1.897,702,1.897,703,1.897,704,3.372,710,1.897,712,1.897,713,2.974,714,1.897,715,1.897,716,2.654,717,2.654,718,2.654,719,2.654,720,4.622,721,2.654,722,2.654,724,1.897,725,1.897,726,1.897,727,1.897,728,1.897,729,1.897,730,1.897,731,1.897,732,2.974,733,2.974,734,2.974,735,1.897,736,2.974,737,1.897,738,1.897,739,1.897,740,1.541,741,1.897,742,3.668,743,4.752,744,4.51,745,4.153,746,1.693,747,3.668,748,4.153,749,1.897,750,3.668,900,5.325,901,4.267,902,3.46,903,2.207,904,2.207,905,3.46,906,2.207,907,1.897,908,2.207,909,2.207,910,2.207,911,2.207,912,2.207,913,1.897,914,5.567,915,2.974,916,3.46,917,3.46]],["title/components/SocialComponent.html",[0,0.229,84,0.902]],["body/components/SocialComponent.html",[0,0.304,1,0.641,2,1.154,3,0.123,4,0.107,5,0.814,6,0.814,7,0.107,11,0.776,12,1.975,13,1.788,15,0.814,16,0.278,17,0.864,19,0.475,22,0.934,24,0.634,25,0.019,26,0.711,27,0.46,28,0.782,30,0.553,31,0.611,32,0.272,33,0.155,36,0.123,37,0.171,38,1.039,50,2.118,52,0.814,53,1.211,54,1.211,55,0.673,56,1.6,57,0.814,58,0.814,59,0.641,60,0.814,61,0.641,62,0.706,63,0.706,64,1.6,65,0.673,66,0.814,67,0.673,68,0.814,69,0.641,70,0.526,71,0.814,72,0.641,73,0.814,74,0.641,75,1.252,76,0.641,77,0.581,78,0.641,79,0.814,80,0.641,81,0.814,82,0.641,83,0.706,84,1.322,85,0.814,86,0.673,87,0.814,88,0.74,89,1.032,90,1.211,91,0.673,92,0.814,93,0.673,94,0.673,95,0.641,96,0.814,97,0.641,98,0.74,99,0.776,100,0.641,101,0.776,102,0.814,103,0.01,104,0.01,172,1.039,219,3.51,220,2.072,232,1.539,234,0.776,285,1.049,336,0.74,368,1.775,388,0.988,390,0.988,394,1.47,396,1.47,514,1.927,594,5.63,595,5.873,661,2.373,666,3.908,743,5.63,918,2.373,919,4.106,920,4.901,921,4.106,922,4.106,923,4.106,924,4.163,925,2.761,926,2.761,927,2.761,928,2.761,929,4.106,930,2.761,931,2.761,932,2.118,933,2.761,934,4.106,935,2.761,936,4.106,937,1.927,938,4.106,939,2.761,940,4.106,941,2.761,942,4.106,943,2.761,944,4.106,945,4.106,946,2.761,947,4.106,948,2.761,949,4.106,950,2.761,951,4.106,952,4.106,953,2.761,954,4.106,955,2.761,956,4.106,957,2.761,958,4.106,959,2.761,960,4.106,961,2.761,962,4.106,963,2.761,964,4.106,965,2.761,966,4.106,967,2.761,968,4.106,969,2.761,970,4.106,971,2.761,972,4.106]],["title/interfaces/SocialService.html",[281,1.262,973,2.584]],["body/interfaces/SocialService.html",[3,0.207,4,0.181,7,0.181,16,0.47,25,0.019,27,0.71,32,0.234,36,0.287,103,0.014,104,0.014,150,2.334,151,1.192,228,3.005,237,1.946,281,1.59,283,2.441,285,1.506,287,1.906,368,4.154,370,4.51,407,1.756,409,1.515,410,1.756,451,3.195,500,3.579,666,2.999,924,5.208,937,4.51,973,4.51,974,3.257,975,6.241,976,6.241,977,5.835,978,5.067,979,5.067,980,5.067]],["title/interfaces/Task.html",[89,0.78,281,1.262]],["body/interfaces/Task.html",[3,0.231,4,0.202,7,0.202,16,0.524,25,0.018,27,0.679,36,0.231,49,4.534,89,1.327,103,0.015,104,0.015,228,3.155,281,1.772,283,2.721,285,1.611,287,2.165,439,4.383,449,4.923,451,3.103,467,6.062,468,6.062,981,4.47]],["title/components/TaskComponent.html",[0,0.229,86,0.902]],["body/components/TaskComponent.html",[0,0.329,1,0.735,2,1.276,3,0.141,4,0.123,5,0.934,6,0.934,7,0.123,9,1.276,10,1.898,11,0.89,12,2.006,13,1.817,15,0.934,16,0.319,17,0.955,18,2.073,19,0.544,22,1.168,24,0.819,25,0.019,26,0.782,27,0.544,28,1.011,30,1.063,31,1.281,32,0.32,33,0.177,36,0.141,37,0.196,38,1.192,52,0.934,53,1.338,54,1.338,55,0.771,56,1.708,57,0.934,58,0.934,59,0.735,60,0.934,61,0.735,62,0.809,63,0.809,64,1.708,65,0.771,66,0.934,67,0.771,68,0.934,69,0.735,70,0.603,71,0.934,72,0.735,73,0.934,74,0.735,75,0.809,76,0.735,77,0.667,78,0.735,79,0.934,80,0.735,81,0.934,82,0.735,83,0.809,84,0.771,85,0.934,86,1.411,87,0.934,88,1.552,89,1.588,90,1.338,91,0.771,92,0.934,93,0.771,94,0.771,95,0.735,96,0.934,97,0.735,98,0.849,99,0.89,100,0.735,101,0.89,102,0.934,103,0.011,104,0.011,130,0.98,131,0.98,390,1.134,394,1.624,396,1.624,401,2.212,402,2.416,407,1.192,408,1.321,409,1.028,410,1.192,450,1.473,454,1.89,483,2.21,740,3.701,762,2.709,793,2.917,855,3.337,982,2.722,983,5.303,984,4.538,985,4.538,986,4.538,987,2.722,988,4.538,989,4.538,990,3.167,991,4.538,992,3.167,993,3.167,994,2.722,995,3.9,996,2.21,997,1.766,998,2.21,999,2.722,1000,3.167,1001,3.167,1002,4.538,1003,3.9,1004,4.558,1005,2.722,1006,3.9,1007,3.9,1008,3.9,1009,3.9,1010,2.722,1011,2.722,1012,2.429]],["title/components/TaskEditorComponent.html",[0,0.229,88,0.992]],["body/components/TaskEditorComponent.html",[0,0.357,1,0.856,2,1.419,3,0.164,4,0.143,5,1.087,6,1.087,7,0.143,9,1.419,10,2.061,11,1.036,12,2.037,13,1.846,15,1.087,16,0.372,17,1.063,18,2.216,19,0.99,22,1.097,25,0.018,26,0.705,27,0.346,30,0.739,31,1.116,32,0.253,33,0.206,36,0.164,37,0.228,49,3.245,52,1.087,53,1.488,54,1.488,55,0.898,56,1.825,57,1.087,58,1.087,59,0.856,60,1.087,61,0.856,62,0.942,63,0.942,64,1.825,65,0.898,66,1.087,67,0.898,68,1.087,69,0.856,70,0.702,71,1.087,72,0.856,73,1.087,74,0.856,75,0.942,76,0.856,77,0.776,78,0.856,79,1.087,80,0.856,81,1.087,82,0.856,83,0.942,84,0.898,85,1.087,86,0.898,87,1.087,88,1.659,89,1.57,90,1.488,91,0.898,92,1.087,93,0.898,94,0.898,95,0.856,96,1.087,97,0.856,98,0.988,99,1.036,100,0.856,101,1.036,102,1.087,103,0.012,104,0.012,342,2.486,390,1.32,394,1.807,396,1.807,451,2.221,483,2.573,650,3.872,721,3.872,762,3.013,793,3.245,915,4.339,997,3.452,1013,4.321,1014,2.828,1015,4.339,1016,4.948,1017,4.339,1018,5.048,1019,3.687,1020,5.048,1021,5.048,1022,4.339]],["title/interfaces/TaskList.html",[281,1.262,437,1.937]],["body/interfaces/TaskList.html",[3,0.238,4,0.208,7,0.208,16,0.54,25,0.018,27,0.645,32,0.268,36,0.238,89,1.5,103,0.016,104,0.016,195,3.726,281,1.825,283,2.801,285,1.639,287,2.026,437,3.356,439,4.101,449,4.971,451,3.134,1023,4.602,1024,4.602,1025,5.354]],["title/components/TaskListComponent.html",[0,0.229,91,0.902]],["body/components/TaskListComponent.html",[0,0.29,1,0.594,2,1.091,3,0.114,4,0.099,5,0.755,6,0.755,7,0.099,9,1.091,10,1.677,11,0.72,12,1.956,13,1.77,15,0.755,16,0.258,17,0.817,18,1.871,19,0.44,22,1.234,24,0.913,25,0.019,26,0.793,27,0.594,28,1.126,30,1.184,31,1.357,32,0.308,33,0.143,36,0.114,37,0.159,38,0.963,52,0.755,53,1.144,54,1.144,55,0.624,56,1.541,57,0.755,58,0.755,59,0.594,60,0.755,61,0.594,62,0.654,63,0.654,64,1.541,65,0.624,66,0.755,67,0.624,68,0.755,69,0.594,70,0.488,71,0.755,72,0.594,73,0.755,74,0.594,75,0.654,76,0.594,77,0.539,78,0.594,79,0.755,80,0.594,81,0.755,82,0.594,83,0.654,84,0.624,85,0.755,86,0.624,87,0.755,88,0.686,89,1.498,90,1.144,91,1.273,92,0.755,93,1.273,94,1.577,95,0.594,96,0.755,97,0.594,98,0.686,99,0.72,100,0.594,101,0.72,102,0.755,103,0.009,104,0.009,130,0.792,131,0.792,195,2.029,307,1.068,390,0.916,394,1.389,396,1.389,401,1.954,402,2.18,407,0.963,408,1.068,409,0.831,410,0.963,437,3.926,450,2.178,454,1.528,471,1.964,481,1.646,482,1.646,492,2.2,506,3.334,590,2.2,591,2.2,593,2.2,594,1.964,595,1.964,740,3.269,762,2.315,764,2.708,792,3.269,793,2.494,843,2.976,855,3.091,987,2.2,994,2.2,995,3.334,996,1.787,997,1.427,998,1.787,999,2.2,1003,3.334,1004,4.026,1005,2.2,1006,3.334,1007,3.334,1008,3.334,1009,3.334,1010,2.2,1011,2.2,1012,1.964,1013,4.606,1026,5.062,1027,2.2,1028,4.683,1029,3.879,1030,3.879,1031,3.879,1032,3.879,1033,3.334,1034,3.879,1035,4.683,1036,3.879,1037,2.56,1038,3.879,1039,2.56,1040,3.879,1041,2.56,1042,3.879,1043,2.56,1044,2.56,1045,3.334,1046,2.56,1047,3.879,1048,2.56,1049,3.334,1050,3.334,1051,2.56,1052,2.976,1053,2.56,1054,2.56,1055,2.2,1056,3.334,1057,2.56,1058,2.56,1059,2.56,1060,2.56,1061,3.879,1062,3.879,1063,2.976,1064,4.683]],["title/components/TaskListEditorComponent.html",[0,0.229,93,0.902]],["body/components/TaskListEditorComponent.html",[0,0.285,1,0.578,2,1.068,3,0.111,4,0.097,5,0.734,6,0.734,7,0.097,9,1.068,10,1.648,11,0.7,12,1.949,13,1.763,15,0.734,16,0.251,17,0.8,18,1.844,19,0.428,22,1.224,24,0.385,25,0.019,26,0.631,27,0.484,28,0.877,30,0.761,31,1.139,32,0.293,33,0.139,36,0.111,37,0.154,38,0.937,52,0.734,53,1.12,54,1.12,55,0.606,56,1.519,57,0.734,58,0.734,59,0.578,60,0.734,61,0.578,62,0.636,63,0.636,64,1.519,65,0.606,66,0.734,67,0.606,68,0.734,69,0.578,70,0.474,71,0.734,72,0.578,73,0.734,74,0.578,75,0.636,76,0.578,77,0.524,78,0.578,79,0.734,80,0.578,81,0.734,82,0.578,83,0.636,84,0.606,85,0.734,86,0.606,87,0.734,88,0.667,89,1.423,90,1.12,91,0.606,92,0.734,93,1.255,94,1.83,95,0.578,96,0.734,97,0.578,98,0.667,99,0.7,100,0.578,101,0.7,102,0.734,103,0.009,104,0.009,130,0.77,131,0.77,146,1.233,150,1.823,151,1.177,159,1.738,234,0.7,237,1.921,277,1.486,285,0.97,287,1.358,307,1.039,319,2.409,336,1.234,388,1.36,390,0.891,394,1.36,396,1.36,398,2.902,399,2.96,401,1.921,402,2.149,406,2.441,407,0.937,408,1.039,409,0.808,410,0.937,437,3.18,450,1.766,451,2.883,481,1.6,482,1.6,681,3.532,683,3.951,684,2.913,685,3.532,686,1.91,687,3.951,689,2.913,693,2.913,694,2.913,697,1.91,699,2.913,700,1.91,704,3.595,716,2.913,717,2.913,718,2.913,719,2.913,720,2.913,722,2.913,762,2.267,764,2.651,792,3.214,793,2.441,843,2.913,907,2.14,997,3.653,1013,4.573,1014,1.91,1015,3.265,1016,3.958,1017,3.265,1022,3.958,1052,3.532,1055,3.958,1065,4.604,1066,3.39,1067,3.798,1068,2.49,1069,2.49,1070,2.49,1071,2.49,1072,2.49,1073,2.49,1074,2.49,1075,2.49,1076,1.91,1077,2.49,1078,2.49,1079,2.49,1080,2.49,1081,3.798,1082,2.49,1083,2.49,1084,2.49,1085,2.49,1086,2.49,1087,2.49,1088,2.49,1089,2.49,1090,2.49,1091,2.49,1092,2.49,1093,2.49]],["title/components/TasksComponent.html",[0,0.229,95,0.859]],["body/components/TasksComponent.html",[0,0.305,1,0.647,2,1.162,3,0.124,4,0.108,5,0.821,6,0.821,7,0.108,9,1.162,10,1.764,11,0.783,12,1.977,13,1.79,15,0.821,16,0.281,17,0.87,18,1.951,19,0.71,22,1.236,24,0.761,25,0.019,26,0.747,27,0.512,28,0.939,30,1.167,31,1.434,32,0.325,33,0.156,36,0.124,37,0.173,52,0.821,53,1.219,54,1.219,55,0.679,56,1.607,57,0.821,58,0.821,59,0.647,60,0.821,61,0.647,62,0.712,63,0.712,64,1.607,65,0.679,66,0.821,67,0.679,68,0.821,69,0.647,70,0.531,71,0.821,72,0.647,73,0.821,74,0.647,75,0.712,76,0.647,77,0.587,78,0.647,79,0.821,80,0.647,81,0.821,82,0.647,83,0.712,84,0.679,85,0.821,86,0.679,87,0.821,88,0.747,89,1.395,90,1.219,91,0.679,92,0.821,93,1.2,94,1.58,95,1.265,96,0.821,97,0.647,98,0.747,99,0.783,100,0.647,101,0.783,102,0.821,103,0.01,104,0.01,130,0.862,131,0.862,150,1.951,195,2.162,234,1.162,237,1.724,285,1.056,307,1.162,319,1.457,336,1.108,388,1.48,390,0.997,394,1.48,396,1.48,398,1.457,399,3.167,401,2.055,402,2.274,406,1.791,407,1.048,408,1.162,409,0.904,410,1.048,411,2.395,428,3.17,437,3.722,450,1.922,481,1.791,482,1.791,571,3.553,588,3.553,704,3.439,855,3.303,913,2.395,996,1.944,997,1.553,998,1.944,1033,3.553,1045,3.553,1049,3.553,1050,2.395,1052,2.137,1056,2.395,1063,3.779,1066,3.401,1076,2.137,1094,2.395,1095,4.927,1096,4.133,1097,5.822,1098,4.685,1099,4.685,1100,4.133,1101,2.786,1102,4.133,1103,2.786,1104,2.786,1105,2.786,1106,4.133,1107,2.786,1108,2.786,1109,2.786,1110,4.133,1111,2.786,1112,2.786,1113,2.786,1114,4.133,1115,2.786,1116,2.786,1117,2.786,1118,2.786,1119,2.786,1120,2.786,1121,4.133]],["title/modules/TasksModule.html",[105,1.629,181,2.064]],["body/modules/TasksModule.html",[3,0.169,4,0.147,7,0.147,25,0.019,32,0.374,33,0.213,36,0.169,37,0.236,78,1.569,86,1.646,89,1.085,91,1.646,93,1.646,94,1.256,95,1.569,100,1.569,103,0.012,104,0.012,107,1.431,108,2.539,114,2.874,115,2.12,116,1.768,118,3.314,119,2.269,120,1.873,121,2.917,122,1.673,123,2.269,129,3.314,130,1.176,131,1.176,132,3.954,133,1.506,134,2.27,138,2.444,150,1.506,166,4.431,181,4.249,195,1.989,270,3.598,271,2.27,276,4.431,277,2.27,425,2.654,855,3.536,996,2.654,997,2.12,998,2.654,1012,2.917,1026,2.917,1066,3.768,1076,2.917,1122,3.268,1123,3.268,1124,3.268,1125,3.268,1126,4.344,1127,3.802,1128,3.268,1129,3.802,1130,3.802,1131,3.802,1132,3.802,1133,3.802,1134,3.802,1135,3.802,1136,3.802,1137,3.802]],["title/modules/TasksRoutingModule.html",[105,1.629,1126,2.38]],["body/modules/TasksRoutingModule.html",[0,0.335,3,0.24,4,0.21,7,0.21,25,0.019,32,0.346,33,0.303,36,0.24,37,0.335,95,1.498,103,0.016,104,0.016,107,2.035,119,2.379,123,2.84,151,1.382,168,3.015,170,4.149,171,4.435,172,2.035,189,3.476,202,3.476,372,3.774,1126,4.149,1128,4.648,1138,5.407]],["title/injectables/TasksService.html",[231,0.946,1066,2.064]],["body/injectables/TasksService.html",[3,0.16,4,0.14,7,0.14,16,0.364,17,1.047,19,0.62,22,1.226,24,0.947,25,0.019,26,0.752,27,0.576,28,1.169,30,1.229,32,0.342,33,0.202,36,0.221,37,0.223,38,1.357,70,0.948,89,1.401,94,1.386,103,0.012,104,0.012,122,1.587,146,1.991,151,1.742,195,2.602,231,1.271,234,1.014,252,3.687,255,1.587,287,1.678,288,3.42,293,2.999,297,2.011,298,2.011,312,1.678,326,3.209,353,2.968,373,1.887,428,2.767,437,3.801,439,3.397,449,4.281,451,2.188,480,3.101,481,2.319,482,2.319,483,2.518,488,4.892,1066,2.773,1098,4.274,1099,5.273,1139,2.767,1140,4.973,1141,4.973,1142,3.101,1143,3.607,1144,4.973,1145,3.607,1146,4.973,1147,3.607,1148,3.607,1149,4.973,1150,3.607,1151,2.518,1152,4.973,1153,4.973,1154,3.607,1155,5.691,1156,3.607,1157,5.691,1158,4.274,1159,3.607,1160,4.973,1161,3.607,1162,4.973,1163,3.607,1164,3.607,1165,3.607,1166,3.607,1167,3.607]],["title/components/UsersComponent.html",[0,0.229,97,0.859]],["body/components/UsersComponent.html",[0,0.386,1,1.004,2,1.578,3,0.192,4,0.168,5,1.275,6,1.275,7,0.168,11,1.215,12,2.065,13,1.873,15,1.655,25,0.018,26,0.764,32,0.217,33,0.242,36,0.192,37,0.268,52,1.275,53,1.655,54,1.655,55,1.053,56,1.946,57,1.275,58,1.275,59,1.004,60,1.275,61,1.004,62,1.105,63,1.105,64,1.946,65,1.053,66,1.275,67,1.053,68,1.275,69,1.004,70,0.824,71,1.275,72,1.004,73,1.275,74,1.004,75,1.105,76,1.004,77,0.91,78,1.004,79,1.275,80,1.004,81,1.275,82,1.004,83,1.105,84,1.053,85,1.275,86,1.053,87,1.275,88,1.159,89,1.313,90,1.655,91,1.053,92,1.275,93,1.053,94,1.053,95,1.004,96,1.275,97,1.532,98,1.671,99,1.215,100,1.004,101,1.215,102,1.275,103,0.014,104,0.014,1168,3.716]],["title/modules/UsersModule.html",[105,1.629,178,2.064]],["body/modules/UsersModule.html",[3,0.217,4,0.19,7,0.19,25,0.019,32,0.363,33,0.274,36,0.217,37,0.303,80,1.68,97,1.68,98,1.312,103,0.015,104,0.015,107,1.843,108,2.993,114,3.387,115,2.73,116,2.277,118,3.906,119,2.674,123,2.674,129,3.906,130,1.515,131,1.515,138,3.148,178,4.196,270,4.241,271,2.923,1169,4.209,1170,4.209,1171,4.209,1172,4.652,1173,4.897,1174,4.209,1175,4.209]],["title/modules/UsersRoutingModule.html",[105,1.629,1172,2.38]],["body/modules/UsersRoutingModule.html",[0,0.388,3,0.229,4,0.2,7,0.2,25,0.019,32,0.361,33,0.288,36,0.229,37,0.319,80,1.455,97,1.455,103,0.015,104,0.015,107,1.939,119,2.267,123,2.758,151,1.316,168,2.872,170,4.029,171,4.343,172,1.939,173,3.741,189,4.029,194,3.311,202,3.311,367,4.428,372,3.596,1172,4.029,1174,4.428,1175,4.428,1176,5.151,1177,5.151]],["title/injectables/UsersService.html",[231,0.946,892,2.584]],["body/injectables/UsersService.html",[3,0.221,4,0.193,7,0.193,14,2.08,16,0.503,17,1.294,19,0.857,22,1.171,24,0.77,25,0.019,26,0.611,27,0.468,28,0.95,30,0.999,32,0.334,33,0.279,36,0.273,37,0.309,38,1.876,70,1.171,103,0.015,104,0.015,122,2.194,146,1.619,151,1.57,231,1.57,233,2.194,288,3.876,297,2.78,298,2.78,312,2.319,326,2.609,334,2.976,336,1.336,373,2.609,892,4.289,1142,4.286,1151,3.48,1158,4.286,1178,3.825,1179,6.951,1180,4.986,1181,4.986,1182,4.986,1183,4.986]],["title/coverage.html",[1184,4.352]],["body/coverage.html",[0,0.452,1,0.655,7,0.109,8,2.426,13,0.687,25,0.019,27,0.265,55,0.687,59,0.655,61,0.655,63,1.066,65,0.687,67,0.687,69,0.655,72,0.655,74,0.655,76,0.655,78,0.655,80,0.655,82,0.655,84,0.687,86,0.687,88,0.756,89,0.594,91,0.687,93,0.687,94,1.016,95,0.655,97,0.655,100,0.655,103,0.01,104,0.01,117,2.912,120,1.39,143,4.993,152,2.165,155,1.97,167,4.208,168,3.058,173,1.684,175,1.573,178,1.573,181,1.573,184,1.573,186,2.326,213,2.426,214,3.201,216,2.426,220,0.962,231,1.62,242,2.426,243,2.165,245,2.426,272,1.97,274,1.97,279,1.97,280,1.97,281,2.161,282,1.573,284,3.494,291,1.573,293,1.242,299,1.573,302,1.573,305,1.573,307,1.177,366,1.97,391,2.426,392,3.526,409,0.916,425,1.97,426,2.426,427,2.426,437,1.476,450,3.615,491,2.426,496,2.165,504,2.426,550,2.682,551,2.426,560,1.97,609,2.426,623,2.426,657,2.426,666,1.814,668,2.426,680,2.426,751,2.426,755,2.165,850,2.426,855,1.476,856,2.165,878,2.426,879,2.426,887,2.426,892,1.97,900,2.426,918,2.426,973,1.97,974,2.912,981,2.426,982,2.426,997,2.326,1013,3.465,1014,3.201,1023,2.426,1024,2.426,1026,2.165,1027,2.426,1066,1.573,1094,2.426,1139,3.201,1151,2.912,1168,2.426,1178,3.201,1184,2.426,1185,2.822,1186,2.822,1187,4.7,1188,7.493,1189,2.426,1190,2.165,1191,7.223,1192,2.426,1193,2.426,1194,2.426,1195,2.426,1196,6.509,1197,6.647,1198,4.173,1199,2.822,1200,4.173,1201,4.965,1202,2.426,1203,2.426,1204,5.485,1205,2.822,1206,2.822,1207,4.965,1208,2.822,1209,2.426,1210,3.587,1211,2.426,1212,2.426,1213,3.587,1214,2.426,1215,2.426,1216,4.267,1217,2.426,1218,2.426,1219,2.426,1220,2.822,1221,2.822]],["title/dependencies.html",[108,2.195,1222,2.654]],["body/dependencies.html",[25,0.019,33,0.27,34,4.217,35,3.868,103,0.015,104,0.015,108,2.375,120,2.964,127,2.688,128,2.688,130,1.491,131,1.491,133,2.597,134,2.877,136,2.964,137,2.688,172,1.814,209,3.365,211,4.144,255,2.121,271,2.877,277,2.877,407,2.264,408,2.011,409,2.129,410,2.264,500,3.698,616,4.144,618,4.144,805,4.144,1223,4.821,1224,7.456,1225,4.821,1226,4.821,1227,4.821,1228,4.821,1229,4.821,1230,4.821,1231,6.017,1232,4.821,1233,4.821,1234,4.821,1235,4.821,1236,4.821,1237,4.821,1238,4.821,1239,4.821,1240,4.821,1241,4.821,1242,4.821,1243,4.821,1244,4.821]],["title/miscellaneous/functions.html",[932,3.418,1245,1.843]],["body/miscellaneous/functions.html",[12,1.622,13,1.604,16,0.49,24,1.064,25,0.018,26,0.885,27,0.619,28,1.313,30,1.212,31,1.076,103,0.015,104,0.015,117,3.395,120,3.244,144,4.181,145,3.672,155,4.223,287,2.131,336,1.622,932,3.731,1187,5.286,1189,5.661,1190,5.052,1212,4.181,1216,4.181,1217,5.201,1218,5.201,1219,5.201,1245,2.903,1246,4.864,1247,6.586,1248,4.181,1249,4.864,1250,4.864,1251,6.891,1252,6.05,1253,4.864,1254,4.864,1255,6.05,1256,4.864]],["title/index.html",[16,0.311,644,2.654,1257,3.087]],["body/index.html",[0,0.402,4,0.183,9,1.326,13,1.149,25,0.014,26,0.578,103,0.014,104,0.014,116,2.193,133,2.882,209,4.142,307,1.967,478,4.533,555,3.292,650,4.982,746,3.618,1063,3.618,1190,5.388,1222,4.054,1258,4.716,1259,5.935,1260,4.716,1261,6.494,1262,4.716,1263,4.716,1264,4.716,1265,4.716,1266,4.716,1267,4.716,1268,4.716,1269,4.716,1270,4.716,1271,4.716,1272,4.716,1273,4.716,1274,6.494,1275,4.716,1276,6.815,1277,4.716,1278,4.716,1279,4.716,1280,4.716,1281,5.935,1282,5.935,1283,6.815,1284,4.716,1285,5.935,1286,5.935,1287,4.716,1288,7.17,1289,4.716,1290,4.716,1291,4.716,1292,5.935,1293,4.716,1294,4.716,1295,4.716,1296,4.716,1297,6.494,1298,4.716,1299,4.716,1300,4.716,1301,3.618,1302,4.716,1303,4.716]],["title/modules.html",[107,1.905]],["body/modules.html",[25,0.015,35,4.742,103,0.015,104,0.015,106,3.408,107,1.995,113,3.408,175,2.956,178,2.956,181,2.956,184,2.956,203,3.701,268,3.408,409,2.395,604,3.408,1126,3.408,1172,3.408,1304,7.376,1305,7.648,1306,7.263,1307,7.263]],["title/overview.html",[1301,3.883]],["body/overview.html",[1,1.651,2,1.058,25,0.019,55,0.917,59,1.35,61,1.35,65,1.417,67,1.417,69,1.35,72,1.35,74,1.35,76,1.35,78,1.35,80,1.35,82,1.35,84,1.417,86,1.417,91,1.417,93,1.417,95,1.35,97,1.35,100,1.35,103,0.012,104,0.012,106,4.761,107,1.416,108,2.521,109,3.235,110,3.235,111,3.235,112,3.235,113,3.74,114,2.854,115,2.098,116,1.75,175,4.168,178,3.911,181,4.224,184,3.757,203,4.559,204,3.235,215,2.886,265,3.235,266,3.235,267,3.235,268,3.74,283,1.969,373,1.969,454,2.246,457,3.235,475,4.4,601,3.235,602,3.235,603,3.235,604,3.74,855,3.044,1066,3.244,1122,3.235,1123,3.235,1124,3.235,1125,3.235,1126,3.74,1169,3.235,1170,3.235,1171,3.235,1172,3.74,1301,2.886,1308,3.763,1309,3.763]],["title/miscellaneous/typealiases.html",[1245,1.843,1310,4.455]],["body/miscellaneous/typealiases.html",[16,0.568,25,0.018,27,0.529,103,0.016,104,0.016,368,3.62,370,3.93,755,4.319,770,5.071,772,5.071,777,5.682,781,5.682,856,4.319,924,5.071,937,3.93,974,3.93,1245,3.361,1311,5.631,1312,6.61,1313,4.84,1314,6.61]],["title/miscellaneous/variables.html",[1245,1.843,1315,3.83]],["body/miscellaneous/variables.html",[14,1.062,16,0.257,25,0.019,27,0.645,46,1.776,103,0.009,104,0.009,117,1.776,125,2.188,135,1.419,146,0.826,150,1.848,152,2.962,153,1.952,154,2.188,155,1.776,156,2.188,167,1.952,168,3.123,175,2.153,176,2.188,177,2.188,178,2.153,179,2.188,180,2.188,181,2.153,182,2.188,183,2.188,184,2.153,185,2.188,186,1.419,187,2.188,188,2.188,233,1.12,237,1.947,287,1.376,291,2.153,307,1.062,312,2.605,319,1.331,326,1.331,336,1.877,368,2.482,370,2.696,388,2.507,409,1.254,422,1.952,451,2.054,496,2.962,501,1.952,599,2.188,666,2.482,937,2.696,973,1.776,974,1.776,975,4.478,976,4.011,977,2.188,978,2.188,979,2.188,980,2.188,1139,1.952,1151,4.115,1178,1.952,1187,3.996,1192,3.32,1193,4.011,1194,3.32,1195,2.188,1202,2.188,1203,3.32,1209,2.188,1210,4.478,1211,2.188,1213,2.188,1214,3.32,1215,3.32,1245,1.519,1248,2.188,1313,2.188,1315,2.188,1316,2.545,1317,2.545,1318,2.545,1319,5.21,1320,3.862,1321,2.545,1322,2.545,1323,2.545,1324,2.545,1325,2.545,1326,2.545,1327,2.545,1328,2.545,1329,2.545,1330,2.545,1331,2.545,1332,2.545,1333,4.667,1334,3.862,1335,2.545,1336,2.545,1337,2.545,1338,3.862,1339,3.862,1340,2.545,1341,2.545,1342,2.545,1343,2.545,1344,2.545,1345,2.545,1346,2.545,1347,2.545,1348,2.545,1349,2.545,1350,2.545,1351,2.545,1352,2.545,1353,2.545,1354,2.545,1355,2.545,1356,2.545,1357,2.545,1358,2.545,1359,2.545,1360,2.545,1361,2.545,1362,2.545,1363,2.545,1364,2.545,1365,2.545,1366,2.545,1367,2.545,1368,2.545,1369,2.545,1370,2.545,1371,2.545,1372,2.545,1373,2.545,1374,2.545,1375,3.862,1376,2.545,1377,2.545,1378,2.545,1379,2.545,1380,2.545,1381,2.545,1382,2.545,1383,2.545,1384,2.545,1385,2.545,1386,2.545,1387,2.545,1388,2.545,1389,2.545,1390,2.545,1391,2.545,1392,2.545,1393,2.545,1394,2.545,1395,2.545,1396,2.545,1397,2.545,1398,2.545,1399,2.545,1400,2.545,1401,2.545,1402,2.545,1403,2.545,1404,2.545,1405,2.545,1406,2.545,1407,2.545,1408,2.545,1409,2.545,1410,2.545,1411,2.545,1412,2.545,1413,2.545,1414,2.545,1415,2.545,1416,2.545,1417,2.545,1418,2.545,1419,2.545,1420,2.545,1421,2.545,1422,2.545,1423,2.545,1424,2.545,1425,2.545,1426,2.545,1427,2.545,1428,2.545,1429,2.545,1430,2.545,1431,2.545,1432,2.545,1433,2.545,1434,2.545,1435,2.545,1436,2.545,1437,3.862,1438,2.545,1439,2.545,1440,2.545,1441,2.545,1442,2.545,1443,2.545,1444,2.545,1445,2.545,1446,2.545,1447,2.545,1448,2.545,1449,2.545,1450,2.545,1451,2.545,1452,2.545,1453,2.545,1454,2.545,1455,2.545,1456,2.545,1457,2.545,1458,2.545,1459,2.545,1460,2.545,1461,2.545,1462,2.545,1463,2.545,1464,2.545,1465,2.545,1466,2.545,1467,2.545,1468,2.545,1469,2.545,1470,2.545,1471,2.545,1472,2.545,1473,2.545,1474,2.545,1475,2.545,1476,2.545,1477,2.545,1478,2.545,1479,2.545,1480,2.545,1481,2.545,1482,2.545,1483,2.545,1484,2.545,1485,2.545,1486,2.545,1487,2.545,1488,2.545,1489,2.545,1490,2.545,1491,2.545,1492,2.545,1493,2.545,1494,2.545,1495,2.545,1496,2.545,1497,2.545,1498,2.545,1499,2.545,1500,2.545,1501,2.545,1502,2.545,1503,2.545,1504,2.545,1505,2.545,1506,2.545,1507,2.545,1508,2.545,1509,2.545,1510,2.545,1511,2.545,1512,2.545,1513,2.545,1514,2.545,1515,2.545,1516,2.545,1517,2.545,1518,2.545,1519,2.545,1520,2.545,1521,2.545,1522,2.545,1523,2.545,1524,2.545,1525,2.545,1526,2.545,1527,2.545,1528,2.545,1529,2.545,1530,2.545,1531,2.545,1532,2.545,1533,2.545,1534,2.545,1535,2.545,1536,2.545,1537,2.545,1538,2.545,1539,2.545,1540,2.545,1541,2.545,1542,2.545,1543,2.545,1544,2.545,1545,2.545,1546,2.545,1547,2.545,1548,2.545,1549,2.545,1550,2.545,1551,2.545,1552,2.545,1553,2.545,1554,2.545,1555,2.545,1556,2.545,1557,2.545,1558,2.545,1559,2.545,1560,2.545,1561,2.545,1562,2.545,1563,2.545,1564,2.545]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":450,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["0.1754",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3332",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.33s",{"_index":1009,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["0.6852",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.719c",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.754",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.85",{"_index":741,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["0.9",{"_index":600,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["0.9.0",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["0.9988",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["00acee",{"_index":934,"title":{},"body":{"components/SocialComponent.html":{}}}],["00aff0",{"_index":956,"title":{},"body":{"components/SocialComponent.html":{}}}],["08b2f5",{"_index":936,"title":{},"body":{"components/SocialComponent.html":{}}}],["0e76a8",{"_index":949,"title":{},"body":{"components/SocialComponent.html":{}}}],["0s",{"_index":1007,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["1",{"_index":454,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"overview.html":{}}}],["1.006",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.12.0",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["1.12.1",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["1.2.35",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.287",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.416",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.43",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.939",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.09",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.16",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.31",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.56",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.74",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":472,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["1000",{"_index":1137,"title":{},"body":{"modules/TasksModule.html":{}}}],["101.9",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["102.1",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10rem",{"_index":598,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["11",{"_index":1308,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["11.05",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.13",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.17",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.45",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.56",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.68",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.82",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112.4",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["114.3",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["118",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["119.4",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":656,"title":{},"body":{"components/IndexComponent.html":{}}}],["12.1.1",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["12.15",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["12.2.10",{"_index":1263,"title":{},"body":{"index.html":{}}}],["12.27",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.31",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.36",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.53",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.65",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.72",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.84",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["121.8",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124.1",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12e",{"_index":806,"title":{},"body":{"components/ModalComponent.html":{}}}],["13.05",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.66",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.94",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["131.2",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138.8",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.09",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.28",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.87",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["148.9",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.05",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.14",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.15",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.42",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.46",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.63",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.46",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.94",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.06",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.41",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.54",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.79",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["171515",{"_index":952,"title":{},"body":{"components/SocialComponent.html":{}}}],["18.03",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.22",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.27",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.28",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.45",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.49",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.81",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.92",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["181.5",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":1309,"title":{},"body":{"overview.html":{}}}],["19.01",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.24",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.33",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.39",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.46",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.47",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.74",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.79",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":457,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["2.139",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.235",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["2.519",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.552",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.561",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.931",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.28",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.75",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.83",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":471,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["200px",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["21.13",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.44",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.62",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.18",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.35",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.48",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.63",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.83",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.49",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.18",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.7",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.37",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.53",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.68",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.75",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1020,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["25a0ca",{"_index":960,"title":{},"body":{"components/SocialComponent.html":{}}}],["26.13",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.14",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.42",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.71",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.23",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.7",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.75",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.04",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.36",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.58",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.8",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":745,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["3",{"_index":460,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["3.334",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.345",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.394",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.495",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.74",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.865",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.937zm36.82",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.982",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.1",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.13",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.46",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.92",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":470,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["31.15",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.26",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.38",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.54z",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.73",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.15",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.29",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.32",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.65",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350px",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["37.7",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.96",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.36",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b5998",{"_index":938,"title":{},"body":{"components/SocialComponent.html":{}}}],["3d9ae8",{"_index":958,"title":{},"body":{"components/SocialComponent.html":{}}}],["3f729b",{"_index":966,"title":{},"body":{"components/SocialComponent.html":{}}}],["3px",{"_index":748,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["4",{"_index":463,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["4.085",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.086",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.15.2",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["4.435",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.617",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.725",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.38",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.65",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.67",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.86",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.9",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4000",{"_index":469,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["404",{"_index":607,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["41.57",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.67",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.38",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.43",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.49",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.63",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.85",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.34",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.53",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.69",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44.54",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["448",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.79",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.82",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.45",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.85",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.41",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.39",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.64",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.85",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.88",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.94",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.77",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4966a5",{"_index":940,"title":{},"body":{"components/SocialComponent.html":{}}}],["4d7198",{"_index":942,"title":{},"body":{"components/SocialComponent.html":{}}}],["5",{"_index":473,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["5.0.2",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["5.15.3",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["5.288",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.656",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.863",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":566,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["51",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.71",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.33",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53.08",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.73",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.99",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.36",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.67",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["577ea7",{"_index":944,"title":{},"body":{"components/SocialComponent.html":{}}}],["6",{"_index":474,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["6.202",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.288",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.539",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["6.692",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6c2.612",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.832",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.42",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.63",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.08",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.21",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67.36",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":475,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["7.03",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.155",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.207",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.383",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.91",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.939",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.16",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73.29",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.04",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.45",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.35",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.66",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["8.13",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.823",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.849",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.93",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.69",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.077",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.903",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.918",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.929",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.62",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.79",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.25",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.06",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.61",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__non_webpack_require__",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["__non_webpack_require__.main",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_route",{"_index":884,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["_state",{"_index":882,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["a4c639",{"_index":954,"title":{},"body":{"components/SocialComponent.html":{}}}],["abstractcontrol",{"_index":699,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["access_token",{"_index":286,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["accessors",{"_index":684,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["account",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":400,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["activemodal",{"_index":758,"title":{},"body":{"components/ModalComponent.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":1063,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["address",{"_index":914,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["addtask",{"_index":1030,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtask(tasklist",{"_index":1038,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtasklist",{"_index":1098,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["addtasklist(title",{"_index":1144,"title":{},"body":{"injectables/TasksService.html":{}}}],["again",{"_index":424,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["aliases",{"_index":1311,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alpha",{"_index":541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["anchorscrolling",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["android",{"_index":953,"title":{},"body":{"components/SocialComponent.html":{}}}],["angular",{"_index":478,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"index.html":{}}}],["angular/advance",{"_index":804,"title":{},"body":{"components/ModalComponent.html":{}}}],["angular/animations",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":312,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["api/auth/${type",{"_index":928,"title":{},"body":{"components/SocialComponent.html":{}}}],["api_prefix",{"_index":291,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibase",{"_index":1134,"title":{},"body":{"modules/TasksModule.html":{}}}],["apiprefix",{"_index":1151,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiprefix}/tasks/list",{"_index":1152,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${id",{"_index":1163,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${tasklist.id",{"_index":1165,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/users/@me",{"_index":1182,"title":{},"body":{"injectables/UsersService.html":{}}}],["apis/common",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["apis/universal",{"_index":211,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.module",{"_index":212,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/api",{"_index":292,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["app/auth/auth.guard",{"_index":1177,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["app/auth/auth.service",{"_index":524,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["app/logger/logger",{"_index":294,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["apple",{"_index":961,"title":{},"body":{"components/SocialComponent.html":{}}}],["application",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/IndexComponent.html":{}}}],["applications",{"_index":665,"title":{},"body":{"components/IndexComponent.html":{}}}],["appmodule",{"_index":106,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":113,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":203,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":672,"title":{},"body":{"injectables/Logger.html":{}}}],["array.isarray(error?.message",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["artifacts",{"_index":1277,"title":{},"body":{"index.html":{}}}],["auth",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{}}}],["auth'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.guard",{"_index":365,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.guard.ts",{"_index":879,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":880,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":883,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:20",{"_index":885,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.service",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["auth/auth.guard",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth0/angular",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["authcomponent",{"_index":59,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":173,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":243,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authmodule",{"_index":175,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authresponse",{"_index":282,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["authroutingmodule",{"_index":268,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"coverage.html":{}}}],["authstatus",{"_index":309,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authstatussource",{"_index":306,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authsubscription",{"_index":509,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["auto",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["automatically",{"_index":1269,"title":{},"body":{"index.html":{}}}],["available",{"_index":1307,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":664,"title":{},"body":{"components/IndexComponent.html":{}}}],["back",{"_index":588,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["background",{"_index":594,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["bearer",{"_index":262,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":296,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["behaviorsubject(false",{"_index":308,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["beta.2",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["bg",{"_index":592,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["bindinputs",{"_index":759,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindinputs(componentinstance",{"_index":775,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs",{"_index":760,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs(componentinstance",{"_index":780,"title":{},"body":{"components/ModalComponent.html":{}}}],["block",{"_index":738,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["boolean",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{}}}],["bootstrap",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap/ng",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["bootstrap/scss/functions",{"_index":590,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["bootstrap/scss/variables",{"_index":591,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["border",{"_index":743,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["bottom",{"_index":750,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["brands",{"_index":500,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/SocialService.html":{},"dependencies.html":{}}}],["browse",{"_index":1305,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":824,"title":{},"body":{"components/ModalComponent.html":{}}}],["build",{"_index":1276,"title":{},"body":{"index.html":{}}}],["button",{"_index":1003,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["c4302b",{"_index":951,"title":{},"body":{"components/SocialComponent.html":{}}}],["c8232c",{"_index":968,"title":{},"body":{"components/SocialComponent.html":{}}}],["calmness",{"_index":643,"title":{},"body":{"components/IndexComponent.html":{}}}],["canactivate",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"modules/UsersRoutingModule.html":{}}}],["canactivate(_route",{"_index":881,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["canactivate(route",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivatechild",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["canactivatechild(route",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["capabilities",{"_index":1295,"title":{},"body":{"index.html":{}}}],["card",{"_index":1064,"title":{},"body":{"components/TaskListComponent.html":{}}}],["catcherror(error",{"_index":1162,"title":{},"body":{"injectables/TasksService.html":{}}}],["cdcdcd",{"_index":962,"title":{},"body":{"components/SocialComponent.html":{}}}],["centered",{"_index":873,"title":{},"body":{"injectables/ModalService.html":{}}}],["change",{"_index":1271,"title":{},"body":{"index.html":{}}}],["characters",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["charset",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["check",{"_index":1300,"title":{},"body":{"index.html":{}}}],["children",{"_index":367,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["choice",{"_index":1291,"title":{},"body":{"index.html":{}}}],["clarity",{"_index":642,"title":{},"body":{"components/IndexComponent.html":{}}}],["class",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["class=\"text",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cli",{"_index":1261,"title":{},"body":{"index.html":{}}}],["client",{"_index":1258,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":258,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["closeall",{"_index":857,"title":{},"body":{"injectables/ModalService.html":{}}}],["closed)=\"errors",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cluster_appmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":204,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":206,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":205,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule",{"_index":601,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_declarations",{"_index":603,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_imports",{"_index":602,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1122,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":1125,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1123,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":1124,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1169,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1171,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1170,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":555,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"index.html":{}}}],["collapsed",{"_index":510,"title":{},"body":{"components/HeaderComponent.html":{}}}],["color",{"_index":595,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["command",{"_index":1292,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["compiler",{"_index":823,"title":{},"body":{"components/ModalComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["componentfactory",{"_index":791,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.inputs",{"_index":819,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.outputs",{"_index":821,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['inputs",{"_index":797,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['outputs",{"_index":798,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactoryresolver",{"_index":767,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfixture",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componentinputs",{"_index":777,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentinputs.foreach",{"_index":831,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinputs.some",{"_index":826,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance",{"_index":779,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance[propname",{"_index":834,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs",{"_index":781,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentoutputs.foreach",{"_index":836,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs.some",{"_index":841,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentref",{"_index":815,"title":{},"body":{"components/ModalComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":763,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["connect",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["connect(type",{"_index":348,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["connectaccountformcomponent",{"_index":61,"title":{"components/ConnectAccountFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["console.debug(usersservice.name",{"_index":1183,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error('adding",{"_index":1118,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.error('failed",{"_index":1090,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error('saved",{"_index":1089,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error(...args",{"_index":679,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log('add",{"_index":531,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('adding",{"_index":1116,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log('deleted",{"_index":1059,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('edited",{"_index":1054,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('modal",{"_index":799,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log('remove",{"_index":539,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('saved",{"_index":1087,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.log('update",{"_index":534,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('user",{"_index":911,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["console.log(...args",{"_index":677,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log(`binding",{"_index":817,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log(error",{"_index":913,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TasksComponent.html":{}}}],["console.warn(...args",{"_index":678,"title":{},"body":{"injectables/Logger.html":{}}}],["const",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(@optional",{"_index":619,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(activemodal",{"_index":765,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(api",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":514,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LogoutFormComponent.html":{},"components/SocialComponent.html":{}}}],["constructor(fb",{"_index":686,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["constructor(http",{"_index":1142,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(httpstatus",{"_index":559,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["constructor(library",{"_index":497,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(logger",{"_index":433,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["constructor(meta",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(modalservice",{"_index":987,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["constructor(ngbmodalservice",{"_index":858,"title":{},"body":{"injectables/ModalService.html":{}}}],["constructor(private",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LogoutFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":854,"title":{},"body":{"directives/ModalDirective.html":{}}}],["constructor(res",{"_index":612,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(router",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"guards/NoAuthGuard.html":{}}}],["constructor(tasksservice",{"_index":1101,"title":{},"body":{"components/TasksComponent.html":{}}}],["constructor(usersservice",{"_index":891,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(viewcontainerref",{"_index":851,"title":{},"body":{"directives/ModalDirective.html":{}}}],["content",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":1214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":742,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["control.value",{"_index":1081,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["control:focus",{"_index":737,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["core",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1184,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["createdb",{"_index":429,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["createddate",{"_index":468,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["data",{"_index":369,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["data).pipe",{"_index":329,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["data.code",{"_index":578,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["data.message",{"_index":580,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["dataencapsulation",{"_index":1136,"title":{},"body":{"modules/TasksModule.html":{}}}],["db4a39",{"_index":945,"title":{},"body":{"components/SocialComponent.html":{}}}],["declarations",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["decorators",{"_index":788,"title":{},"body":{"components/ModalComponent.html":{}}}],["default",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["delay",{"_index":1012,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["delete",{"_index":1057,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetask",{"_index":985,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetask(task",{"_index":989,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetasklist",{"_index":1031,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetasklist(tasklist",{"_index":1040,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dependencies",{"_index":108,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{}}}],["dev",{"_index":1266,"title":{},"body":{"index.html":{}}}],["develop",{"_index":663,"title":{},"body":{"components/IndexComponent.html":{}}}],["developed",{"_index":654,"title":{},"body":{"components/IndexComponent.html":{}}}],["development",{"_index":1264,"title":{},"body":{"index.html":{}}}],["device",{"_index":649,"title":{},"body":{"components/IndexComponent.html":{}}}],["directive",{"_index":55,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1275,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1280,"title":{},"body":{"index.html":{}}}],["disable",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["display",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["dist",{"_index":1279,"title":{},"body":{"index.html":{}}}],["document.referrer",{"_index":583,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["documentation",{"_index":657,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["dribbble",{"_index":963,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropbox",{"_index":957,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropdown",{"_index":545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dynamic",{"_index":805,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["e",{"_index":870,"title":{},"body":{"injectables/ModalService.html":{}}}],["e2e",{"_index":1289,"title":{},"body":{"index.html":{}}}],["e95343",{"_index":947,"title":{},"body":{"components/SocialComponent.html":{}}}],["ea4c89",{"_index":964,"title":{},"body":{"components/SocialComponent.html":{}}}],["edit",{"_index":1051,"title":{},"body":{"components/TaskListComponent.html":{}}}],["editor",{"_index":1015,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["editor.component",{"_index":998,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["editor.component.html",{"_index":1017,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.scss",{"_index":1016,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.ts",{"_index":1014,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:10",{"_index":1018,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1019,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":1068,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":1069,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1073,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1072,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1067,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":1070,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":1074,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1071,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor/task",{"_index":997,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["edittask",{"_index":986,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittask(task",{"_index":991,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittasklist",{"_index":1032,"title":{},"body":{"components/TaskListComponent.html":{}}}],["edittasklist(tasklist",{"_index":1042,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ef8236",{"_index":970,"title":{},"body":{"components/SocialComponent.html":{}}}],["element",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":304,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["enabled",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1288,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":617,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["environment",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiprefix",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":398,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["error(...args",{"_index":670,"title":{},"body":{"injectables/Logger.html":{}}}],["error(`output",{"_index":838,"title":{},"body":{"components/ModalComponent.html":{}}}],["error.message",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["error?.message",{"_index":421,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["errors",{"_index":681,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["eslint",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["event",{"_index":869,"title":{},"body":{"injectables/ModalService.html":{}}}],["eventemitter",{"_index":792,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["events",{"_index":347,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["execute",{"_index":1285,"title":{},"body":{"index.html":{}}}],["existing",{"_index":917,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["express",{"_index":618,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["express.express",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":303,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{}}}],["f",{"_index":685,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["faangular",{"_index":495,"title":{},"body":{"components/FooterComponent.html":{}}}],["faarrowleft",{"_index":571,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["fac",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facebook",{"_index":937,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facebook:hover",{"_index":939,"title":{},"body":{"components/SocialComponent.html":{}}}],["facheck",{"_index":525,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facodebranch",{"_index":632,"title":{},"body":{"components/IndexComponent.html":{}}}],["factory",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facubes",{"_index":633,"title":{},"body":{"components/IndexComponent.html":{}}}],["fafacebookf",{"_index":978,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fagoogle",{"_index":979,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fahome",{"_index":572,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["faiconlibrary",{"_index":402,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["failed",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faketasksservice",{"_index":425,"title":{"injectables/FakeTasksService.html":{}},"body":{"injectables/FakeTasksService.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["false",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["fanestjs",{"_index":496,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fapencilalt",{"_index":994,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["faplus",{"_index":1049,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["fasave",{"_index":1075,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["fasigninalt",{"_index":526,"title":{},"body":{"components/HeaderComponent.html":{}}}],["faspinner",{"_index":406,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["fasquare",{"_index":527,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faterminal",{"_index":634,"title":{},"body":{"components/IndexComponent.html":{}}}],["fatrash",{"_index":995,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["fauser",{"_index":528,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{}}}],["fauserplus",{"_index":529,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignUpFormComponent.html":{}}}],["favk",{"_index":980,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":689,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["ff0084",{"_index":972,"title":{},"body":{"components/SocialComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1272,"title":{},"body":{"index.html":{}}}],["fillinput",{"_index":1217,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fillinput(fixture",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":746,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"index.html":{}}}],["fixme",{"_index":331,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["fixture",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flickr",{"_index":971,"title":{},"body":{"components/SocialComponent.html":{}}}],["floating",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["focus",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["font",{"_index":596,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["fontawesome",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["footer",{"_index":492,"title":{},"body":{"components/FooterComponent.html":{},"components/TaskListComponent.html":{}}}],["footer'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":494,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":493,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":65,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":393,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["form.component",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["form.component.html",{"_index":397,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.scss",{"_index":395,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts",{"_index":392,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":753,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form.component.ts:13",{"_index":405,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:14",{"_index":906,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:15",{"_index":403,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":696,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":904,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:22",{"_index":692,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":903,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:24",{"_index":688,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:25",{"_index":902,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:26",{"_index":404,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:37",{"_index":690,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:44",{"_index":698,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:48",{"_index":691,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:9",{"_index":752,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form/connect",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["form/login",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/logout",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["form/signup",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":687,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["fortawesome/angular",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":407,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["found",{"_index":608,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["foursquare",{"_index":959,"title":{},"body":{"components/SocialComponent.html":{}}}],["free",{"_index":638,"title":{},"body":{"components/IndexComponent.html":{}}}],["full",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["function",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["functions",{"_index":932,"title":{"miscellaneous/functions.html":{}},"body":{"components/SocialComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1296,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1274,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1260,"title":{},"body":{"index.html":{}}}],["genid",{"_index":430,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["genid(tasks",{"_index":436,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["get(request",{"_index":440,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["getauthurl",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthurl(type",{"_index":343,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getelement",{"_index":1218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getelement(fixture",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getengine",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getf",{"_index":697,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["getname",{"_index":362,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getprofile",{"_index":1179,"title":{},"body":{"injectables/UsersService.html":{}}}],["getpropertydescriptor",{"_index":1219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpropertydescriptor(spyobj",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettasklist",{"_index":1140,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklist(id",{"_index":1146,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklists",{"_index":1099,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["getting",{"_index":644,"title":{"index.html":{}},"body":{"components/IndexComponent.html":{}}}],["getusername",{"_index":358,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["github",{"_index":661,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{}}}],["go",{"_index":1299,"title":{},"body":{"index.html":{}}}],["goback",{"_index":558,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["google",{"_index":368,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["google:hover",{"_index":946,"title":{},"body":{"components/SocialComponent.html":{}}}],["graph",{"_index":1306,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":593,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["guard",{"_index":214,"title":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{},"overview.html":{}}}],["handler",{"_index":845,"title":{},"body":{"components/ModalComponent.html":{}}}],["handler(event",{"_index":849,"title":{},"body":{"components/ModalComponent.html":{}}}],["head",{"_index":646,"title":{},"body":{"components/IndexComponent.html":{}}}],["header",{"_index":506,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskListComponent.html":{}}}],["header'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.html",{"_index":508,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":507,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":67,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":260,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["height",{"_index":599,"title":{},"body":{"components/HttpStatusComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1297,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1005,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["homepage",{"_index":589,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["hosted",{"_index":660,"title":{},"body":{"components/IndexComponent.html":{}}}],["hover",{"_index":1010,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["html",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":1268,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":288,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["httpclientinmemorywebapimodule.forfeature",{"_index":1133,"title":{},"body":{"modules/TasksModule.html":{}}}],["httpclientmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["httpevent",{"_index":253,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":249,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":254,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpparams",{"_index":289,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httpparams().appendall(parameters",{"_index":351,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httprequest",{"_index":248,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://dev.to/this",{"_index":803,"title":{},"body":{"components/ModalComponent.html":{}}}],["httpstatus",{"_index":563,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["httpstatuscomponent",{"_index":69,"title":{"components/HttpStatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["httpstatusmodule",{"_index":184,"title":{"modules/HttpStatusModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HttpStatusModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["httpstatusroutingmodule",{"_index":604,"title":{"modules/HttpStatusRoutingModule.html":{}},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["httpstatusservice",{"_index":560,"title":{"injectables/HttpStatusService.html":{}},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["icon",{"_index":975,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":977,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconprefix",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icons",{"_index":410,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["id",{"_index":449,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":256,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implements",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["import('./auth/auth.module').then((m",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./http",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./tasks/tasks.module').then((m",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./users/users.module').then((m",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":736,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["index.component.html",{"_index":625,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.scss",{"_index":624,"title":{},"body":{"components/IndexComponent.html":{}}}],["index/index.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["indexcomponent",{"_index":72,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["inherit",{"_index":1011,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["initial",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["initialize",{"_index":761,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialize(title",{"_index":783,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialnavigation",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["inject",{"_index":290,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(api_prefix",{"_index":311,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(local_storage",{"_index":313,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(response",{"_index":620,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["injectable",{"_index":231,"title":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken('prefix",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inmemorydbservice",{"_index":477,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["input",{"_index":793,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["inputs",{"_index":762,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["instagram",{"_index":965,"title":{},"body":{"components/SocialComponent.html":{}}}],["instance",{"_index":839,"title":{},"body":{"components/ModalComponent.html":{}}}],["instanceof",{"_index":837,"title":{},"body":{"components/ModalComponent.html":{}}}],["intercept",{"_index":246,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":247,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":242,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":244,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":281,"title":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"coverage.html":{}}}],["interfaces",{"_index":283,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"overview.html":{}}}],["internal",{"_index":569,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["invalid",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["isauthorized",{"_index":511,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["isbackavailable",{"_index":556,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isdone",{"_index":467,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["isenabled",{"_index":976,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["isloggedout",{"_index":357,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{}}}],["isplatformbrowser(this.platformid",{"_index":581,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":584,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isready",{"_index":399,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["jwt",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwthelperservice",{"_index":295,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["jwtmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtoptionsfactory",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsfactory(storage",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsprovider",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":305,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["jwtservice",{"_index":315,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["karma",{"_index":1287,"title":{},"body":{"index.html":{}}}],["key",{"_index":907,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["keyof",{"_index":835,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["l",{"_index":1120,"title":{},"body":{"components/TasksComponent.html":{}}}],["label",{"_index":739,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["last",{"_index":749,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["launch",{"_index":651,"title":{},"body":{"components/IndexComponent.html":{}}}],["layout",{"_index":1111,"title":{},"body":{"components/TasksComponent.html":{}}}],["left",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["legend",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["library",{"_index":401,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(faangular",{"_index":502,"title":{},"body":{"components/FooterComponent.html":{}}}],["library.addicons(faarrowleft",{"_index":574,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["library.addicons(facubes",{"_index":635,"title":{},"body":{"components/IndexComponent.html":{}}}],["library.addicons(fapencilalt",{"_index":999,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["library.addicons(fasave",{"_index":1077,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["library.addicons(faspinner",{"_index":411,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(fasquare",{"_index":530,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["ligatures",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{}}}],["linear",{"_index":1008,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["linkedin",{"_index":948,"title":{},"body":{"components/SocialComponent.html":{}}}],["list",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["list.component",{"_index":1129,"title":{},"body":{"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1029,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1028,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1027,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":1037,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:16",{"_index":1036,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:22",{"_index":1044,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:24",{"_index":1043,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:35",{"_index":1048,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:41",{"_index":1041,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:54",{"_index":1046,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:60",{"_index":1039,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.id",{"_index":488,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["list.model",{"_index":482,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["list.model.ts",{"_index":1024,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["list.title",{"_index":1157,"title":{},"body":{"injectables/TasksService.html":{}}}],["list/task",{"_index":1026,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["lists",{"_index":428,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["lists.length",{"_index":1161,"title":{},"body":{"injectables/TasksService.html":{}}}],["literal",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["local_storage",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":314,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["localstorage.getitem('id_token",{"_index":257,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["location",{"_index":561,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["log",{"_index":543,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["log(...args",{"_index":673,"title":{},"body":{"injectables/Logger.html":{}}}],["logged",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logger",{"_index":293,"title":{"injectables/Logger.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["logger/logger",{"_index":480,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["login",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":325,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["login(type",{"_index":923,"title":{},"body":{"components/SocialComponent.html":{}}}],["logindto",{"_index":299,"title":{"interfaces/LogInDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["loginform",{"_index":682,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":74,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["logoutformcomponent",{"_index":76,"title":{"components/LogoutFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":459,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["m.authmodule",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.httpstatusmodule",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.tasksmodule",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.usersmodule",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m263.7",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":503,"title":{},"body":{"components/FooterComponent.html":{}}}],["mainmodule",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainmodule.filename",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masonry",{"_index":1110,"title":{},"body":{"components/TasksComponent.html":{}}}],["matching",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...tasks.map((list",{"_index":487,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["matter",{"_index":648,"title":{},"body":{"components/IndexComponent.html":{}}}],["max",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["memory",{"_index":479,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["mental",{"_index":639,"title":{},"body":{"components/IndexComponent.html":{}}}],["menu",{"_index":546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":557,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["meta",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["miscellaneous",{"_index":1245,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal.component",{"_index":865,"title":{},"body":{"injectables/ModalService.html":{}}}],["modal.component.html",{"_index":757,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":756,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.directive",{"_index":795,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.service",{"_index":796,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":1131,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.directive",{"_index":1132,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.service",{"_index":996,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["modalcomponent",{"_index":78,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalcomponent).initialize",{"_index":876,"title":{},"body":{"injectables/ModalService.html":{}}}],["modaldirective",{"_index":100,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalref",{"_index":871,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalref.componentinstance",{"_index":875,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":855,"title":{"injectables/ModalService.html":{}},"body":{"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["modern",{"_index":652,"title":{},"body":{"components/IndexComponent.html":{}}}],["module",{"_index":105,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}},"body":{}}],["modulefilename",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":107,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1298,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1267,"title":{},"body":{"index.html":{}}}],["need",{"_index":1293,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":501,"title":{},"body":{"components/FooterComponent.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["nestjs.ts",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":868,"title":{},"body":{"injectables/ModalService.html":{}}}],["new",{"_index":307,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/HttpStatusModule.html":{},"components/TaskListEditorComponent.html":{}}}],["next.handle(cloned",{"_index":263,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":264,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbactivemodal",{"_index":766,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodal",{"_index":859,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodalservice",{"_index":861,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["ngifelse]=\"nolists",{"_index":1121,"title":{},"body":{"components/TasksComponent.html":{}}}],["ngifelse]=\"notasks",{"_index":1062,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["ngondestroy",{"_index":512,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["ngoninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["nguniversal/express",{"_index":616,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["noauthguard",{"_index":366,"title":{"guards/NoAuthGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["noderequire",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["null",{"_index":319,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":439,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["object",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(userinputs).foreach((userinputkey",{"_index":825,"title":{},"body":{"components/ModalComponent.html":{}}}],["object.keys(useroutputs).foreach((useroutputkey",{"_index":840,"title":{},"body":{"components/ModalComponent.html":{}}}],["observable",{"_index":252,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["observe",{"_index":346,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["observer",{"_index":1086,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["of(null",{"_index":1164,"title":{},"body":{"injectables/TasksService.html":{}}}],["onaddtasklist",{"_index":1100,"title":{},"body":{"components/TasksComponent.html":{}}}],["onaddtasklist(tasklist",{"_index":1106,"title":{},"body":{"components/TasksComponent.html":{}}}],["ondelete",{"_index":1035,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ondeletetasklist",{"_index":1033,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondeletetasklist(tasklist",{"_index":1045,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondestroy",{"_index":505,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["onedittasklist",{"_index":1034,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedittasklist(tasklist",{"_index":1047,"title":{},"body":{"components/TaskListComponent.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsave",{"_index":1052,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsubmit",{"_index":683,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["onto",{"_index":647,"title":{},"body":{"components/IndexComponent.html":{}}}],["opacity",{"_index":740,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["open",{"_index":658,"title":{},"body":{"components/IndexComponent.html":{},"injectables/ModalService.html":{}}}],["open(title",{"_index":863,"title":{},"body":{"injectables/ModalService.html":{}}}],["optional",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":637,"title":{},"body":{"components/IndexComponent.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":843,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["outputs",{"_index":764,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["overview",{"_index":1301,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":866,"title":{},"body":{"injectables/ModalService.html":{}}}],["package",{"_index":1222,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1303,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":350,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["params).subscribe",{"_index":418,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params.code",{"_index":416,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params['to",{"_index":703,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["password",{"_index":301,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["patch(url",{"_index":1166,"title":{},"body":{"injectables/TasksService.html":{}}}],["path",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["pathmatch",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["payload",{"_index":359,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.name",{"_index":363,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.username",{"_index":361,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["pinterest",{"_index":967,"title":{},"body":{"components/SocialComponent.html":{}}}],["pipe",{"_index":353,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["pipe(takeuntil(this.subscription",{"_index":847,"title":{},"body":{"components/ModalComponent.html":{}}}],["platform",{"_index":1290,"title":{},"body":{"index.html":{}}}],["please",{"_index":915,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["post",{"_index":431,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(request",{"_index":445,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(url",{"_index":1154,"title":{},"body":{"injectables/TasksService.html":{}}}],["prefix",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preloadallmodules",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prettier/prettier",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["private",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":542,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":889,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":888,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1175,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["profilecomponent",{"_index":80,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1259,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":285,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["propname",{"_index":832,"title":{},"body":{"components/ModalComponent.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["public",{"_index":610,"title":{},"body":{"injectables/HttpStatusService.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["put",{"_index":432,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["put(request",{"_index":447,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["queryparams",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":744,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reactiveformsmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["record",{"_index":349,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["redirectto",{"_index":371,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reference",{"_index":1302,"title":{},"body":{"index.html":{}}}],["regain",{"_index":641,"title":{},"body":{"components/IndexComponent.html":{}}}],["reload",{"_index":1270,"title":{},"body":{"index.html":{}}}],["req",{"_index":251,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HttpStatusComponent.html":{}}}],["req.clone",{"_index":259,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.referrer",{"_index":586,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["req.headers.set('authorization",{"_index":261,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":443,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["request.url",{"_index":490,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["requestinfo",{"_index":441,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["require",{"_index":1215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["res",{"_index":585,"title":{},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":333,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["rest",{"_index":662,"title":{},"body":{"components/IndexComponent.html":{}}}],["results",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":332,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["retry(2",{"_index":330,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["return",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rewrite",{"_index":930,"title":{},"body":{"components/SocialComponent.html":{}}}],["right",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{}}}],["router",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["routermodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":372,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["routes",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routesnapshot",{"_index":412,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.data.type",{"_index":414,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.queryparams",{"_index":415,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routing.module",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1281,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":298,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["samevalue",{"_index":1082,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["save",{"_index":1022,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["scaffolding",{"_index":1273,"title":{},"body":{"index.html":{}}}],["scale=1",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["scrollable",{"_index":874,"title":{},"body":{"injectables/ModalService.html":{}}}],["scrollpositionrestoration",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scss",{"_index":931,"title":{},"body":{"components/SocialComponent.html":{}}}],["see",{"_index":802,"title":{},"body":{"components/ModalComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["serve",{"_index":1265,"title":{},"body":{"index.html":{}}}],["server",{"_index":209,"title":{},"body":{"modules/AppServerModule.html":{},"components/HttpStatusComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["serverapp",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":208,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service.title",{"_index":929,"title":{},"body":{"components/SocialComponent.html":{}}}],["services",{"_index":666,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setstatus",{"_index":611,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["setstatus(code",{"_index":614,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["settoken",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":318,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["shared/task",{"_index":481,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["shared/task.model",{"_index":483,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"injectables/TasksService.html":{}}}],["sharereplay",{"_index":338,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["sign",{"_index":544,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/SignUpFormComponent.html":{}}}],["signed",{"_index":912,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signup",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["signup(data",{"_index":339,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["signupdto",{"_index":302,"title":{"interfaces/SignUpDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["signupform",{"_index":901,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signupformcomponent",{"_index":82,"title":{"components/SignUpFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":597,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["skipwhenexpired",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["skype",{"_index":955,"title":{},"body":{"components/SocialComponent.html":{}}}],["social",{"_index":919,"title":{},"body":{"components/SocialComponent.html":{}}}],["social'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["social.component.html",{"_index":921,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.component.scss",{"_index":920,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.model",{"_index":926,"title":{},"body":{"components/SocialComponent.html":{}}}],["social/social.component",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{}}}],["socialcomponent",{"_index":84,"title":{"components/SocialComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["socialservice",{"_index":973,"title":{"interfaces/SocialService.html":{}},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["socialservicetype",{"_index":924,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":659,"title":{},"body":{"components/IndexComponent.html":{}}}],["solid",{"_index":408,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["space",{"_index":640,"title":{},"body":{"components/IndexComponent.html":{}}}],["spec\\.ts",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":667,"title":{},"body":{"components/IndexComponent.html":{}}}],["spyobj",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../api.ts",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fontawesome",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modal.component.ts",{"_index":1312,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../modal.service.ts",{"_index":1314,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../social.model.ts",{"_index":1313,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tasks.service.ts",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utilities.ts",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/api.ts",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.server.module.ts",{"_index":207,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/auth/auth",{"_index":364,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":213,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:25",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":245,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:7",{"_index":250,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":284,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:102",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:106",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:110",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:31",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:56",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:68",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:80",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:85",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:98",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/connect",{"_index":391,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/login",{"_index":680,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/logout",{"_index":751,"title":{},"body":{"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/no",{"_index":878,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/signup",{"_index":900,"title":{},"body":{"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts",{"_index":918,"title":{},"body":{"components/SocialComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts:12",{"_index":922,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.component.ts:16",{"_index":925,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.model.ts",{"_index":974,"title":{},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/fontawesome",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/footer.component.ts",{"_index":491,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":499,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:13",{"_index":498,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":504,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:19",{"_index":521,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:21",{"_index":522,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":523,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:31",{"_index":517,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":519,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:48",{"_index":516,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/http",{"_index":550,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts",{"_index":623,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts:14",{"_index":631,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:16",{"_index":627,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:26",{"_index":629,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:33",{"_index":630,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:37",{"_index":628,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/logger/logger.ts",{"_index":668,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["src/app/logger/logger.ts:13",{"_index":671,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:5",{"_index":674,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:9",{"_index":676,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/tasks/fake",{"_index":426,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.component.ts",{"_index":755,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.component.ts:25",{"_index":774,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:26",{"_index":769,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:27",{"_index":771,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:28",{"_index":773,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:30",{"_index":768,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:33",{"_index":787,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:37",{"_index":786,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:41",{"_index":785,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:49",{"_index":784,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:72",{"_index":778,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:91",{"_index":782,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.directive.ts",{"_index":850,"title":{},"body":{"directives/ModalDirective.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.directive.ts:6",{"_index":852,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.directive.ts:7",{"_index":853,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.service.ts",{"_index":856,"title":{},"body":{"injectables/ModalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.service.ts:14",{"_index":860,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:17",{"_index":864,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:36",{"_index":862,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/shared/task",{"_index":1023,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["src/app/tasks/shared/task.model.ts",{"_index":981,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/tasks/task",{"_index":1013,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts",{"_index":982,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts:14",{"_index":988,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:20",{"_index":993,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:22",{"_index":992,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:26",{"_index":990,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/tasks",{"_index":1138,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/app/tasks/tasks.component.ts",{"_index":1094,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.ts:16",{"_index":1109,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:18",{"_index":1102,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:28",{"_index":1105,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:32",{"_index":1104,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:46",{"_index":1103,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:59",{"_index":1107,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:69",{"_index":1108,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":1127,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.service.ts",{"_index":1139,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/tasks/tasks.service.ts:12",{"_index":1143,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:15",{"_index":1145,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:28",{"_index":1148,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:36",{"_index":1147,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:46",{"_index":1150,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/users/profile/profile.component.ts",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/users/profile/profile.component.ts:12",{"_index":893,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/profile/profile.component.ts:18",{"_index":894,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/users",{"_index":1176,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["src/app/users/users.component.ts",{"_index":1168,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/users/users.module.ts",{"_index":1173,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/users/users.service.ts",{"_index":1178,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.service.ts:11",{"_index":1181,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users/users.service.ts:8",{"_index":1180,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test.ts",{"_index":1213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utilities.ts",{"_index":1216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackexchange",{"_index":969,"title":{},"body":{"components/SocialComponent.html":{}}}],["start",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["started",{"_index":1257,"title":{"index.html":{}},"body":{}}],["state",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["state.url",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":790,"title":{},"body":{"components/ModalComponent.html":{}}}],["status",{"_index":552,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["status.component",{"_index":606,"title":{},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status.component.html",{"_index":554,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.scss",{"_index":553,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts",{"_index":551,"title":{},"body":{"components/HttpStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:14",{"_index":567,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:15",{"_index":570,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:16",{"_index":568,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:17",{"_index":562,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:28",{"_index":565,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:45",{"_index":564,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.module').then((m",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["status.module.ts",{"_index":605,"title":{},"body":{"modules/HttpStatusModule.html":{}}}],["status.service",{"_index":573,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.service.ts",{"_index":609,"title":{},"body":{"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["status.service.ts:6",{"_index":613,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status.service.ts:9",{"_index":615,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status/http",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/functions.html":{}}}],["storage.getitem('access_token",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["stored",{"_index":1278,"title":{},"body":{"index.html":{}}}],["string",{"_index":287,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":390,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["styleurls",{"_index":394,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe((event",{"_index":848,"title":{},"body":{"components/ModalComponent.html":{}}}],["subscribe(observer",{"_index":1092,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["subscription",{"_index":520,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["support",{"_index":1304,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":409,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["svgpathdata",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":776,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["t[p",{"_index":867,"title":{},"body":{"injectables/ModalService.html":{}}}],["table",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":297,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tap((list",{"_index":1155,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((lists",{"_index":1159,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((value",{"_index":334,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{}}}],["task",{"_index":89,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["task.component.html",{"_index":984,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":983,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.description",{"_index":1021,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["task.model",{"_index":1025,"title":{},"body":{"interfaces/TaskList.html":{}}}],["task.title",{"_index":1002,"title":{},"body":{"components/TaskComponent.html":{}}}],["task/task.component",{"_index":1130,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskcomponent",{"_index":86,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskeditorcomponent",{"_index":88,"title":{"components/TaskEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tasklist",{"_index":437,"title":{"interfaces/TaskList.html":{}},"body":{"injectables/FakeTasksService.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasklist.title",{"_index":1061,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasklistcomponent",{"_index":91,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklisteditorcomponent",{"_index":93,"title":{"components/TaskListEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistform",{"_index":1065,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["tasklists",{"_index":1097,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["tasks.component",{"_index":1128,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks.component.html",{"_index":1096,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1095,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.length",{"_index":486,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service",{"_index":1076,"title":{},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["tasks.service.ts",{"_index":427,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["tasks.service.ts:10",{"_index":476,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:105",{"_index":434,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:109",{"_index":435,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:113",{"_index":438,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:117",{"_index":442,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:122",{"_index":446,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:127",{"_index":448,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:78",{"_index":466,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasksapiurl",{"_index":1135,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskscomponent",{"_index":95,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmodule",{"_index":181,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tasksroutingmodule",{"_index":1126,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1066,"title":{"injectables/TasksService.html":{}},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["technologies",{"_index":653,"title":{},"body":{"components/IndexComponent.html":{}}}],["template",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["templatename",{"_index":827,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":396,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["test",{"_index":1284,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1294,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1283,"title":{},"body":{"index.html":{}}}],["this.api}/auth/${type",{"_index":344,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/login",{"_index":327,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/signup",{"_index":340,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authservice.authstatus$.subscribe((isauthorized",{"_index":533,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authservice.connect(type",{"_index":417,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.authservice.getname",{"_index":538,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.isloggedin",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isloggedout",{"_index":886,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["this.authservice.login(this.loginform.value).subscribe",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.logout",{"_index":754,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["this.authservice.signup(this.signupform.value).subscribe",{"_index":910,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.authstatussource.asobservable",{"_index":310,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(false",{"_index":322,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(isloggedin",{"_index":317,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(true",{"_index":324,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authsubscription",{"_index":532,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authsubscription?.unsubscribe",{"_index":540,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.bindinputs(componentref.instance",{"_index":818,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bindoutputs(componentref.instance",{"_index":820,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.canactivate(route",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["this.code",{"_index":577,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory",{"_index":811,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype",{"_index":808,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype?.name",{"_index":830,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.error",{"_index":420,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.errors",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.fb.group",{"_index":693,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.gettasklists",{"_index":1112,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":1153,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.http.get(url",{"_index":352,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.get(url).pipe",{"_index":1158,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["this.http.head(url",{"_index":345,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.post(url",{"_index":328,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.httpstatus.setstatus(this.code",{"_index":575,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.inputs",{"_index":809,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.isauthorized",{"_index":536,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.isbackavailable",{"_index":582,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.isloggedin",{"_index":316,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.isready",{"_index":704,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["this.jwtservice.decodetoken",{"_index":360,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.jwtservice.istokenexpired",{"_index":356,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.lists",{"_index":485,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.localstorage.removeitem('access_token",{"_index":321,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.localstorage.setitem('access_token",{"_index":323,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.location.back",{"_index":587,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.logger.log('user",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.logger.log(`${request.method.touppercase",{"_index":489,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.logger.log(`added",{"_index":1156,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`connected",{"_index":354,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`fetched",{"_index":1160,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`logging",{"_index":335,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`signed",{"_index":341,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`updated",{"_index":1167,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(error",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.controls",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.message",{"_index":579,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.meta.addtags",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modal.viewcontainerref",{"_index":813,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.closeall",{"_index":1056,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open",{"_index":1050,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open('delete",{"_index":1001,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.modalservice.open('edit",{"_index":1000,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.name",{"_index":537,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ngbmodalservice.dismissall",{"_index":877,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.ngbmodalservice.open(modalcomponent",{"_index":872,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.onaddtasklist(tasklist",{"_index":1115,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.ondelete.emit",{"_index":1060,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist",{"_index":1053,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist(tasklist",{"_index":1058,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onsave.emit(list",{"_index":1088,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.outputs",{"_index":810,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.redirectto",{"_index":702,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.res",{"_index":621,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.res.status(code",{"_index":622,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.route.data.subscribe((data",{"_index":576,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":701,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.route.snapshot",{"_index":413,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":419,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LogoutFormComponent.html":{}}}],["this.router.navigatebyurl(this.redirectto",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.settoken(null",{"_index":355,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.settoken(value['access_token",{"_index":337,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.signupform.controls",{"_index":908,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.signupform.valid",{"_index":909,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.subscription.complete",{"_index":801,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.subscription.next(void",{"_index":800,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.tasklist",{"_index":1055,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.tasklist.title",{"_index":1078,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls",{"_index":1083,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.addvalidators((control",{"_index":1080,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.setvalue(title",{"_index":1079,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.value",{"_index":1085,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.valid",{"_index":1084,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklists",{"_index":1114,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.filter((l",{"_index":1119,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.push(tasklist",{"_index":1117,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks",{"_index":484,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[0",{"_index":452,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[1",{"_index":453,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[2",{"_index":455,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[3",{"_index":456,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[4",{"_index":461,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[5",{"_index":462,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[6",{"_index":464,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[7",{"_index":465,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasksservice.addtasklist(title).subscribe(observer",{"_index":1093,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasksservice.gettasklists().subscribe",{"_index":1113,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasksservice.updatetasklist",{"_index":1091,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.title",{"_index":807,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.titleservice.settitle('todo",{"_index":636,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.updateauthstatus(isauthorized",{"_index":535,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.user",{"_index":897,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.usersservice.getprofile().subscribe((user",{"_index":896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["those",{"_index":645,"title":{},"body":{"components/IndexComponent.html":{}}}],["throw",{"_index":829,"title":{},"body":{"components/ModalComponent.html":{}}}],["title",{"_index":451,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["titleservice",{"_index":626,"title":{},"body":{"components/IndexComponent.html":{}}}],["todo",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SocialComponent.html":{}}}],["token",{"_index":320,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["tokengetter",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltip",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["top",{"_index":747,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["transition",{"_index":1006,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":423,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["tslib",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":933,"title":{},"body":{"components/SocialComponent.html":{}}}],["twitter:hover",{"_index":935,"title":{},"body":{"components/SocialComponent.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"danger",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["typealiases",{"_index":1310,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":822,"title":{},"body":{"components/ModalComponent.html":{}}}],["undefined",{"_index":444,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{}}}],["unicode",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1282,"title":{},"body":{"index.html":{}}}],["universalmodule",{"_index":210,"title":{},"body":{"modules/AppServerModule.html":{}}}],["unknown",{"_index":422,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/ModalComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":342,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["updateauthstatus",{"_index":513,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updateauthstatus(isauthorized",{"_index":518,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updatetasklist",{"_index":1141,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklist(tasklist",{"_index":1149,"title":{},"body":{"injectables/TasksService.html":{}}}],["url",{"_index":326,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":650,"title":{},"body":{"components/IndexComponent.html":{},"components/TaskEditorComponent.html":{},"index.html":{}}}],["usefactory",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":890,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.id",{"_index":898,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.name",{"_index":899,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userinputkey",{"_index":828,"title":{},"body":{"components/ModalComponent.html":{}}}],["userinputs",{"_index":770,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["userinputs[templatename",{"_index":833,"title":{},"body":{"components/ModalComponent.html":{}}}],["username",{"_index":300,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["useroutputkey",{"_index":842,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs",{"_index":772,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["useroutputs[templatename",{"_index":846,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs[useroutputkey",{"_index":844,"title":{},"body":{"components/ModalComponent.html":{}}}],["users",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["users.component",{"_index":1174,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["users.service",{"_index":895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userscomponent",{"_index":97,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":178,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersroutingmodule",{"_index":1172,"title":{"modules/UsersRoutingModule.html":{}},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":892,"title":{"injectables/UsersService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["using",{"_index":655,"title":{},"body":{"components/IndexComponent.html":{}}}],["utf",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["valid",{"_index":916,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators",{"_index":700,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["validators.email",{"_index":905,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators.minlength(8",{"_index":695,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["validators.required",{"_index":694,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["value",{"_index":336,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1315,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1262,"title":{},"body":{"index.html":{}}}],["very",{"_index":458,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["via",{"_index":1286,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":794,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild(modaldirective",{"_index":789,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref",{"_index":812,"title":{},"body":{"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["viewcontainerref.clear",{"_index":814,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":816,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewport",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":1004,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["vk",{"_index":941,"title":{},"body":{"components/SocialComponent.html":{}}}],["vk:hover",{"_index":943,"title":{},"body":{"components/SocialComponent.html":{}}}],["vkontakte",{"_index":370,"title":{},"body":{"modules/AuthRoutingModule.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":669,"title":{},"body":{"injectables/Logger.html":{}}}],["warn(...args",{"_index":675,"title":{},"body":{"injectables/Logger.html":{}}}],["web",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["width",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["width=device",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.href",{"_index":927,"title":{},"body":{"components/SocialComponent.html":{}}}],["within",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["youtube",{"_index":950,"title":{},"body":{"components/SocialComponent.html":{}}}],["z",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["zone.js",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: Meta)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    \n      \n    \n    \n  `,\n})\nexport class AppComponent implements OnInit {\n  constructor(private meta: Meta) {}\n\n  ngOnInit() {\n    this.meta.addTags([\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { name: 'description', content: 'ToDo Application' },\n    ]);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            IndexComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { IndexComponent } from './index/index.component';\n\nexport function jwtOptionsFactory(storage: Storage) {\n  return {\n    tokenGetter: () => storage.getItem('access_token'),\n    skipWhenExpired: false,\n  };\n}\n\nconst jwtOptionsProvider = {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n};\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    IndexComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    HttpClientModule,\n    JwtModule.forRoot({ jwtOptionsProvider }),\n    FontAwesomeModule,\n    NgbModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { IndexComponent } from './index/index.component';\n\nconst authModule = () => import('./auth/auth.module').then((m) => m.AuthModule);\nconst usersModule = () => import('./users/users.module').then((m) => m.UsersModule);\nconst tasksModule = () => import('./tasks/tasks.module').then((m) => m.TasksModule);\nconst httpStatusModule = () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule);\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent, pathMatch: 'full' },\n  { path: 'auth', loadChildren: authModule },\n  { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n  { path: 'tasks', loadChildren: tasksModule, canActivate: [AuthGuard] },\n  { path: '**', loadChildren: httpStatusModule },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      initialNavigation: 'enabled',\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { UniversalModule } from '@ng-web-apis/universal';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n  imports: [AppModule, ServerModule, UniversalModule],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  template: `\n    \n      \n    \n  `,\n})\nexport class AuthComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isLoggedIn = this.authService.isLoggedIn();\n    if (isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], { queryParams: { to: state.url } });\n    return false;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const idToken = localStorage.getItem('id_token');\n\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + idToken),\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ConnectAccountFormComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            LogoutFormComponent\n                        \n                        \n                            SignUpFormComponent\n                        \n                        \n                            SocialComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SocialComponent } from './social/social.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthComponent } from './auth.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n    SignUpFormComponent,\n    SocialComponent,\n    AuthComponent,\n    LogoutFormComponent,\n    ConnectAccountFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    NgbModule,\n    AuthRoutingModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { AuthGuard } from './auth.guard';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NoAuthGuard } from './no-auth.guard';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      { path: 'login', component: LoginFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'signup', component: SignUpFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'logout', component: LogoutFormComponent, canActivate: [AuthGuard] },\n      {\n        path: 'google',\n        component: ConnectAccountFormComponent,\n        data: { type: 'google' },\n        canActivate: [NoAuthGuard],\n      },\n      {\n        path: 'vkontakte',\n        component: ConnectAccountFormComponent,\n        data: { type: 'vkontakte' },\n        canActivate: [NoAuthGuard],\n      },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authStatus$\n                            \n                            \n                                    Private\n                                authStatusSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                getAuthUrl\n                            \n                            \n                                getName\n                            \n                            \n                                getUsername\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                setToken\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: string, localStorage: Storage, jwtService: JwtHelperService, logger: Logger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(type: string, parameters: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthUrl\n                        \n                    \n                \n            \n            \n                \ngetAuthUrl(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut\n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(data: LogInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LogInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(data: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectAccountFormComponent.html":{"url":"components/ConnectAccountFormComponent.html","title":"component - ConnectAccountFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectAccountFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/connect-account-form/connect-account-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-account-form\n            \n\n            \n                styleUrls\n                ./connect-account-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-account-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-connect-account-form',\n  templateUrl: './connect-account-form.component.html',\n  styleUrls: ['./connect-account-form.component.scss'],\n})\nexport class ConnectAccountFormComponent implements OnInit {\n  isReady = false;\n\n  error = '';\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner);\n  }\n\n  ngOnInit(): void {\n    const routeSnapshot = this.route.snapshot;\n    const type = routeSnapshot.data.type;\n    const params = routeSnapshot.queryParams;\n    if (params.code) {\n      this.authService.connect(type, params).subscribe(\n        () => {\n          this.router.navigateByUrl('/');\n        },\n        ({ error }) => {\n          this.error = error?.message ?? 'Unknown error. Try again.';\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    {{ error }}\n  \n\n\n    \n\n    \n                \n                    ./connect-account-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ error }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConnectAccountFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeTasksService.html":{"url":"injectables/FakeTasksService.html","title":"injectable - FakeTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FakeTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/fake-tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                            \n                                genId\n                            \n                            \n                                get\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/fake-tasks.service.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDb\n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { task: {}; list: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genId\n                        \n                    \n                \n            \n            \n                \ngenId(tasks: TaskList[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                            TaskList[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\nimport { Observable } from 'rxjs';\nimport { Logger } from '../logger/logger';\nimport { TaskList } from './shared/task-list.model';\nimport { Task } from './shared/task.model';\n\n@Injectable()\nexport class FakeTasksService implements InMemoryDbService {\n  private tasks: (Task & { list: number })[] = [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ];\n\n  private lists: TaskList[] = [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ];\n\n  constructor(private logger: Logger) {}\n\n  createDb() {\n    return { task: this.tasks, list: this.lists };\n  }\n\n  genId(tasks: TaskList[]): number {\n    return tasks.length > 0 ? Math.max(...tasks.map((list) => list.id)) + 1 : 1;\n  }\n\n  get(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  post(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  put(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngular\n                            \n                            \n                                faNestJs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngular\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngular\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faNestJs\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faAngular } from '@fortawesome/free-brands-svg-icons';\nimport { faNestJs } from './fontawesome-svg-nestjs';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  faAngular = faAngular;\n  faNestJs = faNestJs;\n\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faAngular, faNestJs);\n  }\n}\n\n    \n\n    \n        \n  \n    Made with\n    \n      \n    \n    and\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Made with                  and                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                collapsed\n                            \n                            \n                                isAuthorized\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport {\n  faCheck,\n  faSignInAlt,\n  faSquare,\n  faUser,\n  faUserPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  collapsed = true;\n\n  isAuthorized = false;\n\n  name?: string;\n\n  constructor(private authService: AuthService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faCheck, faUser, faUserPlus, faSignInAlt);\n  }\n\n  ngOnInit(): void {\n    console.log('Add header subscription');\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      console.log('Update header subscription: ', isAuthorized);\n      this.updateAuthStatus(isAuthorized);\n    });\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n    if (isAuthorized) {\n      this.name = this.authService.getName();\n    } else {\n      this.name = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    console.log('Remove header subscription');\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n        \n          ToDo\n          \n            Alpha\n          \n        \n      \n\n      \n        \n      \n\n      \n        \n          \n            \n              \n                \n                {{ name }}\n              \n              \n                Profile\n                \n                Log out\n              \n            \n          \n          \n            \n              \n              Sign Up\n            \n            \n              \n              Log In\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .dropdown-menu-right {\n  right: 0;\n  left: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  ToDo                      Alpha                                                                                                                              {{ name }}                                            Profile                                Log out                                                                                      Sign Up                                                    Log In                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HttpStatusComponent.html":{"url":"components/HttpStatusComponent.html","title":"component - HttpStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HttpStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/http-status/http-status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-http-status\n            \n\n            \n                styleUrls\n                ./http-status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./http-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                description\n                            \n                            \n                                isBackAvailable\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpStatus: HttpStatusService, route: ActivatedRoute, location: Location, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpStatus\n                                                  \n                                                        \n                                                                        HttpStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBackAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Server Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { HttpStatusService } from './http-status.service';\n\n@Component({\n  selector: 'app-http-status',\n  templateUrl: './http-status.component.html',\n  styleUrls: ['./http-status.component.scss'],\n})\nexport class HttpStatusComponent implements OnInit {\n  code = 500;\n  message = 'Internal Server Error';\n  description = '';\n  isBackAvailable = true;\n\n  constructor(\n    private httpStatus: HttpStatusService,\n    private route: ActivatedRoute,\n    private location: Location,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faArrowLeft, faHome);\n  }\n\n  ngOnInit(): void {\n    this.httpStatus.setStatus(this.code);\n    this.route.data.subscribe((data) => {\n      this.code = data.code ?? this.code;\n      this.message = data.message ?? this.message;\n      this.httpStatus.setStatus(this.code);\n    });\n    // if (isPlatformBrowser(this.platformId)) {\n    //   this.isBackAvailable = !!(document.referrer);\n    // } else if (isPlatformServer(this.platformId)) {\n    //   const { req, res } = this;\n    //   if (req) {\n    //     this.isBackAvailable = !!(req.headers.referrer);\n    //   }\n    // }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ code || 500 }}\n      {{ message || 'Internal Server Error' }}\n      {{ description }}\n      \n      \n        \n           Back\n        \n        \n           Homepage\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./http-status.component.scss\n                \n                @import '~bootstrap/scss/functions', '~bootstrap/scss/variables';\n\n.error-bg-gray {\n  background-color: $gray-200;\n}\n\n.error-code {\n  font-size: 10rem;\n  line-height: 0.9;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ code || 500 }}      {{ message || \\'Internal Server Error\\' }}      {{ description }}                               Back                           Homepage                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HttpStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusModule.html":{"url":"modules/HttpStatusModule.html","title":"module - HttpStatusModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HttpStatusComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HttpStatusRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpStatusComponent } from './http-status.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpStatusRoutingModule } from './http-status-routing.module';\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    HttpStatusComponent\n  ],\n  // eslint-disable-next-line prettier/prettier\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    HttpStatusRoutingModule,\n  ]\n})\nexport class HttpStatusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusRoutingModule.html":{"url":"modules/HttpStatusRoutingModule.html","title":"module - HttpStatusRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpStatusComponent } from './http-status.component';\n\nconst routes: Routes = [\n  { path: '', component: HttpStatusComponent, data: { code: 404, message: 'Not Found' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HttpStatusRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpStatusService.html":{"url":"injectables/HttpStatusService.html","title":"injectable - HttpStatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpStatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-status/http-status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(res: Response)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                  \n                                                        \n                                                                    Response\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStatus(code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { Response } from 'express';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpStatusService {\n  constructor(@Optional() @Inject(RESPONSE) private res: Response) {}\n\n  public setStatus(code: number): void {\n    if (this.res) {\n      this.res.status(code);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                isAuthorized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, titleService: Title, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/index.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faCodeBranch, faCubes, faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  isAuthorized = false;\n\n  constructor(\n    private authService: AuthService,\n    private titleService: Title,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faCubes, faCodeBranch, faTerminal);\n  }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      this.updateAuthStatus(isAuthorized);\n    });\n    this.titleService.setTitle('ToDo');\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n  }\n\n  ngOnDestroy() {\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Organize it all\n    \n      \n        Free up your mental space. Regain clarity and calmness by getting all those tasks out of\n        your head and onto your to-do list no matter where you are or what device you use.\n      \n      \n        \n          \n            Launch\n          \n        \n        \n          \n            Sign Up\n          \n          \n            Log In\n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Modern Technologies\n          This application is developed using Angular 12 and NestJS 8.\n          Documentation\n        \n      \n      \n        \n          \n        \n        \n          Open Source\n          This application is free software hosted on GitHub.\n          Source\n        \n      \n      \n        \n          \n        \n        \n          REST API\n          Develop awesome applications and services with our REST API.\n          API Specification\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./index.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organize it all                  Free up your mental space. Regain clarity and calmness by getting all those tasks out of        your head and onto your to-do list no matter where you are or what device you use.                                          Launch                                                Sign Up                                Log In                                                                                                                  Modern Technologies          This application is developed using Angular 12 and NestJS 8.          Documentation                                                                Open Source          This application is free software hosted on GitHub.          Source                                                                REST API          Develop awesome applications and services with our REST API.          API Specification                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInDto.html":{"url":"interfaces/LogInDto.html","title":"interface - LogInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logger/logger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class Logger {\n  log(...args: any[]) {\n    console.log(...args);\n  }\n\n  warn(...args: any[]) {\n    console.warn(...args);\n  }\n\n  error(...args: any[]) {\n    console.error(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, logger: Logger, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login-form/login-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Logger } from '@app/logger/logger';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private logger: Logger,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): Record {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isReady = false;\n      this.authService.logIn(this.loginForm.value).subscribe(\n        () => {\n          this.logger.log('User is logged in');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          this.logger.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to log in'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Log in with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Username or Email\n        \n          Username is required.\n        \n      \n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Log In\n      \n         Loading\n      \n    \n    \n      Create an account\n    \n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Log in with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Username or Email                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Log In               Loading                    Create an account      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutFormComponent.html":{"url":"components/LogoutFormComponent.html","title":"component - LogoutFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/logout-form/logout-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-form\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/logout-form/logout-form.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/logout-form/logout-form.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logout-form',\n  template: ``,\n})\nexport class LogoutFormComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.logOut();\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindInputs\n                            \n                            \n                                    Private\n                                bindOutputs\n                            \n                            \n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentType\n                            \n                            \n                                inputs\n                            \n                            \n                                outputs\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputs\n                    \n                \n                \n                    \n                        Type :         UserInputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputs\n                    \n                \n                \n                    \n                        Type :         UserOutputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindInputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindInputs(componentInstance: T, componentInputs: ComponentInputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInputs\n                                    \n                                                ComponentInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindOutputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentOutputs\n                                    \n                                                ComponentOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbActiveModal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ModalDirective, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDirective } from './modal.directive';\nimport { UserInputs, UserOutputs } from './modal.service';\n\ntype ComponentInputs = ComponentFactory['inputs'];\ntype ComponentOutputs = ComponentFactory['outputs'];\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() title = '';\n  @Input() componentType?: Type;\n  @Input() inputs: UserInputs = {};\n  @Input() outputs: UserOutputs = {};\n\n  @ViewChild(ModalDirective, { static: true }) modal!: ModalDirective;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    console.log('modal onInit');\n  }\n\n  ngOnDestroy(): void {\n    console.log('modal onDestroy');\n    // this.subscription.next(void 0);\n    // this.subscription.complete();\n  }\n\n  // See https://dev.to/this-is-angular/advance-angular-dynamic-component-12e\n\n  initialize(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs,\n    outputs: UserOutputs,\n  ) {\n    this.title = title;\n    this.componentType = componentType;\n    this.inputs = inputs;\n    this.outputs = outputs;\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.componentType,\n    );\n    const viewContainerRef = this.modal.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    console.log(`Binding inputs:`, this.inputs);\n    this.bindInputs(componentRef.instance, componentFactory.inputs);\n    console.log(`Binding outputs:`, this.outputs);\n    this.bindOutputs(componentRef.instance, componentFactory.outputs);\n  }\n\n  private bindInputs(componentInstance: T, componentInputs: ComponentInputs) {\n    const userInputs = this.inputs as Record; // FIXME: TypeScript compiler bug\n\n    Object.keys(userInputs).forEach((userInputKey) => {\n      if (!componentInputs.some(({ templateName }) => templateName === userInputKey)) {\n        throw new Error(\n          `Input ${userInputKey} is not a ${this.componentType?.name ?? 'dynamic component'} input`,\n        );\n      }\n    });\n\n    componentInputs.forEach(({ propName, templateName }) => {\n      const value = userInputs[templateName];\n      if (value) {\n        componentInstance[propName as keyof T] = value;\n      }\n    });\n  }\n\n  private bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs) {\n    const userOutputs = this.outputs as Record void>; // FIXME: TypeScript compiler bug\n\n    componentOutputs.forEach(({ propName }) => {\n      if (!(componentInstance[propName as keyof T] instanceof EventEmitter)) {\n        throw new Error(`Output ${propName} must be an instance of EventEmitter`);\n      }\n    });\n\n    Object.keys(userOutputs).forEach((userOutputKey) => {\n      if (!componentOutputs.some(({ templateName }) => templateName === userOutputKey)) {\n        throw new Error(\n          `Output ${userOutputKey} is not a ${\n            this.componentType?.name ?? 'dynamic component'\n          } output.`,\n        );\n      }\n      if (!(userOutputs[userOutputKey] instanceof Function)) {\n        throw new Error(`Output ${userOutputKey} must be a function`);\n      }\n    });\n\n    componentOutputs.forEach(({ propName, templateName }) => {\n      const handler = userOutputs[templateName];\n      if (handler) {\n        (componentInstance[propName as keyof T] as unknown as EventEmitter)\n          // .pipe(takeUntil(this.subscription))\n          .subscribe((event) => {\n            handler(event);\n          });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n\n\n  \n  \n\n\n    \n\n    \n                \n                    ./modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModalDirective.html":{"url":"directives/ModalDirective.html","title":"directive - ModalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [modal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.directive.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[modal]',\n})\nexport class ModalDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeAll\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngbModalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngbModalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, Type } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalComponent } from './modal.component';\n\nexport type UserInputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? never : T[P];\n};\n\nexport type UserOutputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? (event: E) => any : never;\n};\n\n@Injectable()\nexport class ModalService {\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs = {},\n    outputs: UserOutputs = {},\n  ) {\n    const modalRef = this.ngbModalService.open(ModalComponent, {\n      centered: true,\n      scrollable: true,\n    });\n    (modalRef.componentInstance as ModalComponent).initialize(\n      title,\n      componentType,\n      inputs,\n      outputs,\n    );\n    return modalRef;\n  }\n\n  closeAll() {\n    this.ngbModalService.dismissAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NoAuthGuard.html":{"url":"guards/NoAuthGuard.html","title":"guard - NoAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    NoAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/no-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/no-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NoAuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot) {\n    const isLoggedOut = this.authService.isLoggedOut();\n    return isLoggedOut;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/profile/profile.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/profile/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/profile/profile.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private usersService: UsersService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.usersService.getProfile().subscribe((user) => {\n      this.user = user;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n\n    User #{{ user.id }}: {{ user.name }}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          User #{{ user.id }}: {{ user.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpDto.html":{"url":"interfaces/SignUpDto.html","title":"interface - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        LogInDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpFormComponent.html":{"url":"components/SignUpFormComponent.html","title":"component - SignUpFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup-form/signup-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup-form/signup-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSquare, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss'],\n})\nexport class SignUpFormComponent implements OnInit {\n  signUpForm = this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUserPlus);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.signUpForm.controls;\n  }\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      this.isReady = false;\n      this.authService.signUp(this.signUpForm.value).subscribe(\n        () => {\n          console.log('User is signed up');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          console.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to sign up'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Sign up with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n\n    \n      \n        \n        Name\n        \n          Name is required.\n        \n      \n\n      \n        \n        Email address\n        \n          Email address is required.\n          Please provide a valid email address.\n        \n      \n\n      \n        \n        Username\n        \n          Username is required.\n        \n      \n\n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Sign Up\n      \n         Loading\n      \n    \n    \n      \n        Log in with existing account\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign up with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Name                  Name is required.                                    Email address                  Email address is required.          Please provide a valid email address.                                    Username                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Sign Up               Loading                            Log in with existing account            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SocialComponent.html":{"url":"components/SocialComponent.html","title":"component - SocialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SocialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/social/social.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-social\n            \n\n            \n                styleUrls\n                ./social.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./social.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/social/social.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(type: SocialServiceType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/social/social.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SocialServiceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : services\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/social/social.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { SocialServiceType, services } from './social.model';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.scss'],\n})\nexport class SocialComponent {\n  services = services;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logIn(type: SocialServiceType) {\n    window.location.href = `/api/auth/${type}`;\n  }\n}\n\n    \n\n    \n        \n  \n  {{ service.title }}\n\n\n    \n\n    \n                \n                    ./social.component.scss\n                \n                // TODO: Rewrite with SCSS functions\n\n.twitter {\n  background-color: #00acee;\n  border-color: #00acee;\n}\n\n.twitter:hover {\n  background-color: #08b2f5;\n  border-color: #08b2f5;\n}\n\n.facebook {\n  background-color: #3b5998;\n  border-color: #3b5998;\n}\n\n.facebook:hover {\n  background-color: #4966a5;\n  border-color: #4966a5;\n}\n\n.vk {\n  background-color: #4d7198;\n  border-color: #4d7198;\n}\n\n.vk:hover {\n  background-color: #577ea7;\n  border-color: #577ea7;\n}\n\n.google {\n  background-color: #db4a39;\n  border-color: #db4a39;\n}\n\n.google:hover {\n  background-color: #e95343;\n  border-color: #e95343;\n}\n\n.linkedin {\n  background-color: #0e76a8;\n  border-color: #0e76a8;\n}\n\n.youtube {\n  background-color: #c4302b;\n  border-color: #c4302b;\n}\n\n.github {\n  background-color: #171515;\n  border-color: #171515;\n}\n\n.android {\n  background-color: #a4c639;\n  border-color: #a4c639;\n}\n\n.skype {\n  background-color: #00aff0;\n  border-color: #00aff0;\n}\n\n.dropbox {\n  background-color: #3d9ae8;\n  border-color: #3d9ae8;\n}\n\n.foursquare {\n  background-color: #25a0ca;\n  border-color: #25a0ca;\n}\n\n.apple {\n  background-color: #cdcdcd;\n  border-color: #cdcdcd;\n}\n\n.dribbble {\n  background-color: #ea4c89;\n  border-color: #ea4c89;\n}\n\n.instagram {\n  background-color: #3f729b;\n  border-color: #3f729b;\n}\n\n.pinterest {\n  background-color: #c8232c;\n  border-color: #c8232c;\n}\n\n.stackexchange {\n  background-color: #ef8236;\n  border-color: #ef8236;\n}\n\n.flickr {\n  background-color: #ff0084;\n  border-color: #ff0084;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ service.title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SocialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialService.html":{"url":"interfaces/SocialService.html","title":"interface - SocialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SocialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/social/social.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            isEnabled\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SocialServiceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SocialServiceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition, faFacebookF, faGoogle, faVk } from '@fortawesome/free-brands-svg-icons';\n\nexport type SocialServiceType = 'facebook' | 'vkontakte' | 'google';\n\nexport interface SocialService {\n  type: SocialServiceType;\n  title: string;\n  icon: IconDefinition;\n  isEnabled: boolean;\n}\n\nexport const services: SocialService[] = [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDone\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: number;\n  title: string;\n  description: string;\n  isDone: boolean;\n  createdDate: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                styleUrls\n                ./task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { Task } from '../shared/task.model';\nimport { TaskEditorComponent } from '../task-editor/task-editor.component';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash);\n  }\n\n  ngOnInit(): void {}\n\n  editTask(task: Task) {\n    this.modalService.open('Edit task', TaskEditorComponent, { task });\n  }\n\n  deleteTask(task: Task) {\n    this.modalService.open('Delete task', TaskEditorComponent, { task });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ task.title }}\n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./task.component.scss\n                \n                .task {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ task.title }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditorComponent.html":{"url":"components/TaskEditorComponent.html","title":"component - TaskEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-editor/task-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-editor\n            \n\n            \n                styleUrls\n                ./task-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-editor/task-editor.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from '../shared/task.model';\n\n@Component({\n  selector: 'app-task-editor',\n  templateUrl: './task-editor.component.html',\n  styleUrls: ['./task-editor.component.scss'],\n})\nexport class TaskEditorComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Title\n    \n    Please use up to 255 characters.\n  \n  \n    Description\n    {{ task.description }}\n  \n  Save\n\n\n    \n\n    \n                \n                    ./task-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title        Please use up to 255 characters.        Description    {{ task.description }}    Save'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskList.html":{"url":"interfaces/TaskList.html","title":"interface - TaskList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task-list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from './task.model';\n\nexport interface TaskList {\n  id: number;\n  title: string;\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list/task-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTaskList\n                            \n                            \n                                editTaskList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteTaskList\n                            \n                            \n                                onEditTaskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskList\n                        \n                    \n                \n            \n            \n                \ndeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTaskList\n                        \n                    \n                \n            \n            \n                \neditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditTaskList\n                        \n                    \n                \n            \n            \n                \nonEditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { TaskList } from '../shared/task-list.model';\nimport { TaskListEditorComponent } from '../task-list-editor/task-list-editor.component';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss'],\n})\nexport class TaskListComponent implements OnInit {\n  @Input() taskList!: TaskList;\n\n  @Output() onDelete = new EventEmitter();\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash, faPlus);\n  }\n\n  ngOnInit(): void {}\n\n  editTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Edit task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: this.onEditTaskList,\n      },\n    );\n  }\n\n  onEditTaskList(taskList: TaskList) {\n    console.log('Edited task list:', taskList);\n    this.taskList = taskList;\n    this.modalService.closeAll();\n  }\n\n  deleteTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Delete task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: (taskList: any) => {\n          this.onEditTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    console.log('Deleted task list:', taskList);\n    this.onDelete.emit();\n    this.modalService.closeAll();\n  }\n\n  addTask(taskList: TaskList) {}\n}\n\n    \n\n    \n        \n  \n    {{ taskList.title }}\n    \n      \n    \n    \n      \n    \n  \n  \n     0\" [ngIfElse]=\"noTasks\">\n      \n        \n      \n    \n\n    \n      No tasks\n    \n  \n  \n    \n       Add task\n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.component.scss\n                \n                @import '~bootstrap/scss/functions',\n        '~bootstrap/scss/variables';\n\n.card-header, .card-footer {\n  background-color: $gray-200;\n}\n\n.card-header {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ taskList.title }}                                     0\" [ngIfElse]=\"noTasks\">                                  No tasks                   Add task      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListEditorComponent.html":{"url":"components/TaskListEditorComponent.html","title":"component - TaskListEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list-editor/task-list-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list-editor\n            \n\n            \n                styleUrls\n                ./task-list-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                taskListForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, tasksService: TasksService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskListForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSave, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { TaskList } from '../shared/task-list.model';\nimport { TasksService } from '../tasks.service';\n\n@Component({\n  selector: 'app-task-list-editor',\n  templateUrl: './task-list-editor.component.html',\n  styleUrls: ['./task-list-editor.component.scss'],\n})\nexport class TaskListEditorComponent implements OnInit {\n  @Input()\n  taskList?: TaskList;\n\n  @Output()\n  onSave = new EventEmitter();\n\n  taskListForm = this.fb.group({\n    title: ['', Validators.required],\n  });\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(private fb: FormBuilder, private tasksService: TasksService, library: FaIconLibrary) {\n    library.addIcons(faSave, faSpinner);\n  }\n\n  ngOnInit(): void {\n    if (this.taskList) {\n      const title = this.taskList.title;\n      this.taskListForm.controls.title.setValue(title);\n      this.taskListForm.controls.title.addValidators((control) => {\n        return title == control.value ? { sameValue: { value: control.value } } : null;\n      });\n    }\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.taskListForm.controls;\n  }\n\n  onSubmit(): void {\n    if (this.taskListForm.valid) {\n      this.isReady = false;\n      const title = this.taskListForm.controls.title.value;\n      const observer = {\n        next: (list: TaskList | null) => {\n          this.isReady = true;\n          if (list) {\n            console.log('Saved task list: ', list);\n            this.onSave.emit(list);\n          } else {\n            console.error('Saved null task list');\n          }\n        },\n        error: (error: any) => {\n          this.isReady = true;\n          console.error('Failed to save list: ', error);\n        },\n      };\n      if (this.taskList) {\n        this.tasksService.updateTaskList({ ...this.taskList, title }).subscribe(observer);\n      } else {\n        this.tasksService.addTaskList(title).subscribe(observer);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Title\n        \n          Title is required.\n        \n      \n    \n  \n  \n    \n      \n         Save\n      \n      \n         Loading\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Title                  Title is required.                                         Save                     Loading            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isReady\n                            \n                            \n                                taskLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddTaskList\n                            \n                            \n                                onDeleteTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddTaskList\n                        \n                    \n                \n            \n            \n                \nonAddTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskLists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faPlus, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from './modal/modal.service';\nimport { TaskList } from './shared/task-list.model';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { TasksService } from './tasks.service';\n// import * as Masonry from 'masonry-layout';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\nexport class TasksComponent implements OnInit {\n  taskLists: TaskList[] = [];\n\n  isReady = false;\n\n  constructor(\n    private tasksService: TasksService,\n    private modalService: ModalService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner, faPlus, faArrowLeft);\n  }\n\n  ngOnInit(): void {\n    this.getTaskLists();\n  }\n\n  getTaskLists(): void {\n    this.isReady = false;\n    this.tasksService.getTaskLists().subscribe(\n      (taskLists) => {\n        this.taskLists = taskLists;\n        this.isReady = true;\n      },\n      (error) => {\n        console.log(error);\n        this.isReady = true;\n      },\n    );\n  }\n\n  addTaskList(): void {\n    this.modalService.open(\n      'Add task list',\n      TaskListEditorComponent,\n      {},\n      {\n        onSave: (taskList) => {\n          this.onAddTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onAddTaskList(taskList: TaskList) {\n    if (taskList) {\n      console.log('Adding new task list:', taskList);\n      this.taskLists.push(taskList);\n    } else {\n      console.error('Adding null task list');\n    }\n    this.modalService.closeAll();\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    this.taskLists = this.taskLists.filter((l) => l !== taskList);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      Back\n    \n    \n      \n      Add list\n    \n  \n\n  \n     0\" [ngIfElse]=\"noLists\">\n      \n        \n      \n    \n\n    \n      \n        No task lists\n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Back                    Add list             0\" [ngIfElse]=\"noLists\">                                          No task lists                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            ModalDirective\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskListEditorComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModalService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskComponent } from './task/task.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ModalDirective } from './modal/modal.directive';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TasksService } from './tasks.service';\nimport { ModalService } from './modal/modal.service';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    TaskListComponent,\n    TaskListEditorComponent,\n    TaskComponent,\n    ModalComponent,\n    ModalDirective,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FontAwesomeModule,\n    TasksRoutingModule,\n    // HttpClientInMemoryWebApiModule.forFeature(\n    //   FakeTasksService, {\n    //     apiBase: tasksApiUrl,\n    //     dataEncapsulation: false,\n    //     delay: 1000\n    //   }\n    // ),\n  ],\n  providers: [ModalService, TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [{ path: '', component: TasksComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                updateTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskList\n                        \n                    \n                \n            \n            \n                \ngetTaskList(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskList\n                        \n                    \n                \n            \n            \n                \nupdateTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TaskList } from './shared/task-list.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Logger } from '../logger/logger';\nimport { Task } from './shared/task.model';\n\nexport const apiPrefix = '/api';\n\n@Injectable()\nexport class TasksService {\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  addTaskList(title: string): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    const tasks: Task[] = [];\n    const taskList = { title, tasks } as TaskList;\n    return this.http\n      .post(url, taskList)\n      .pipe(\n        tap((list: TaskList) =>\n          this.logger.log(`Added task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n\n  getTaskLists(): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    return this.http.get(url).pipe(\n      tap((lists: TaskList[]) => this.logger.log(`Fetched ${lists.length} task lists`)),\n      // catchError(error => of([]))\n    );\n  }\n\n  getTaskList(id: number): Observable {\n    const url = `${apiPrefix}/tasks/list/${id}`;\n    return this.http.get(url).pipe(\n      tap((list: TaskList) =>\n        this.logger.log(`Fetched task list \"${list.title}\" with id: ${list.id}`),\n      ),\n      // catchError(error => of(null))\n    );\n  }\n\n  updateTaskList(taskList: TaskList): Observable {\n    const url = `${apiPrefix}/tasks/list/${taskList.id}`;\n    return this.http\n      .patch(url, taskList)\n      .pipe(\n        tap((list: any) =>\n          this.logger.log(`Updated task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  template: `\n    \n      \n    \n  `,\n})\nexport class UsersComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [UsersComponent, ProfileComponent],\n  imports: [CommonModule, UsersRoutingModule, FontAwesomeModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersRoutingModule.html":{"url":"modules/UsersRoutingModule.html","title":"module - UsersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@app/auth/auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [{ path: '@me', component: ProfileComponent, canActivate: [AuthGuard] }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nexport const apiPrefix = '/api';\n\n@Injectable({ providedIn: 'root' })\nexport class UsersService {\n  constructor(private http: HttpClient) {}\n\n  getProfile() {\n    const url = `${apiPrefix}/users/@me`;\n    return this.http.get(url).pipe(\n      tap((value) => {\n        console.debug(UsersService.name, value);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            getEngine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            __non_webpack_require__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            mainModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            moduleFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api.ts\n            \n            variable\n            API_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            authModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            httpStatusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            tasksModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            usersModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            jwtOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            LogInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/connect-account-form/connect-account-form.component.ts\n            \n            component\n            ConnectAccountFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/logout-form/logout-form.component.ts\n            \n            component\n            LogoutFormComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/no-auth.guard.ts\n            \n            guard\n            NoAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/signup-form/signup-form.component.ts\n            \n            component\n            SignUpFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.component.ts\n            \n            component\n            SocialComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            interface\n            SocialService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/fontawesome-svg-nestjs.ts\n            \n            variable\n            faNestJs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.component.ts\n            \n            component\n            HttpStatusComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.service.ts\n            \n            injectable\n            HttpStatusService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/logger/logger.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/fake-tasks.service.ts\n            \n            injectable\n            FakeTasksService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.directive.ts\n            \n            directive\n            ModalDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.service.ts\n            \n            injectable\n            ModalService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task-list.model.ts\n            \n            interface\n            TaskList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/task-editor/task-editor.component.ts\n            \n            component\n            TaskEditorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list-editor/task-list-editor.component.ts\n            \n            component\n            TaskListEditorComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            fillInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getPropertyDescriptor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/platform-server : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.35\n        \n            @fortawesome/free-brands-svg-icons : ^5.15.3\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.3\n        \n            @ng-bootstrap/ng-bootstrap : ^11.0.0-beta.2\n        \n            @ng-web-apis/common : ^1.12.1\n        \n            @ng-web-apis/universal : ^1.12.0\n        \n            @nguniversal/express-engine : ^12.1.1\n        \n            bootstrap : ^5.1.3\n        \n            express : ^4.15.2\n        \n            rxjs : ^6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            fillInput   (src/.../utilities.ts)\n                        \n                        \n                            getElement   (src/.../utilities.ts)\n                        \n                        \n                            getEngine   (server.ts)\n                        \n                        \n                            getPropertyDescriptor   (src/.../utilities.ts)\n                        \n                        \n                            jwtOptionsFactory   (src/.../app.module.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     express.Express\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEngine\n                        \n                    \n                \n            \n            \n                \ngetEngine()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/testing/utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fillInput\n                        \n                    \n                \n            \n            \n                \nfillInput(fixture: ComponentFixture, name: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(fixture: ComponentFixture, selector: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropertyDescriptor\n                        \n                    \n                \n            \n            \n                \ngetPropertyDescriptor(spyObj, prop)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spyObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsFactory\n                        \n                    \n                \n            \n            \n                \njwtOptionsFactory(storage: Storage)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storage\n                                    \n                                            Storage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 12.2.10.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ComponentInputs   (src/.../modal.component.ts)\n                        \n                        \n                            ComponentOutputs   (src/.../modal.component.ts)\n                        \n                        \n                            SocialServiceType   (src/.../social.model.ts)\n                        \n                        \n                            UserInputs   (src/.../modal.service.ts)\n                        \n                        \n                            UserOutputs   (src/.../modal.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/modal/modal.component.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/auth/social/social.model.ts\n    \n    \n        \n            \n                \n                    \n                    SocialServiceType\n                \n            \n            \n                \n                        \"facebook\" | \"vkontakte\" | \"google\"\n\n                \n            \n        \n    \n    src/app/tasks/modal/modal.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __non_webpack_require__   (server.ts)\n                        \n                        \n                            API_PREFIX   (src/.../api.ts)\n                        \n                        \n                            apiPrefix   (src/.../tasks.service.ts)\n                        \n                        \n                            apiPrefix   (src/.../users.service.ts)\n                        \n                        \n                            authModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            faNestJs   (src/.../fontawesome-svg-nestjs.ts)\n                        \n                        \n                            httpStatusModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            jwtOptionsProvider   (src/.../app.module.ts)\n                        \n                        \n                            mainModule   (server.ts)\n                        \n                        \n                            moduleFilename   (server.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../social.model.ts)\n                        \n                        \n                            tasksModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            usersModule   (src/.../app-routing.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __non_webpack_require__\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeRequire\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : __non_webpack_require__.main\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleFilename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (mainModule && mainModule.filename) || ''\n                    \n                \n\n\n        \n    \n\n    src/app/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Prefix of API url', {\n  providedIn: 'root',\n  factory() {\n    return environment.apiPrefix;\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/tasks/tasks.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./auth/auth.module').then((m) => m.AuthModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpStatusModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./tasks/tasks.module').then((m) => m.TasksModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./users/users.module').then((m) => m.UsersModule)\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/footer/fontawesome-svg-nestjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  prefix: 'fac' as IconPrefix,\n  iconName: 'nestjs' as IconName,\n  icon: [\n    448, // width\n    448, // height\n    [], // ligatures\n    null as unknown as string, // unicode\n    'm263.7 0.719c-19.46-1.006 12.72 18.27 0.9988 31.26-12.27 9.077 1.416 48.88-0.1754 18.49 3.394-17.79 40.65-30.13 12.84-45.82-4.085-2.519-8.849-3.982-13.66-3.937zm36.82 6.6c2.612 21.62-22.83 25.37-30.1 41.57-7.03 10.09 7.383 30.46-10.16 19.39-43.53-18.22-93.79-20.75-138.8-6.832-19.24 7.155-35.65 19.74-48.85 35.29-15.63 19.33-42.43 17.06-61.63 28.8-12.65 9.918-16.46 32.73 0.3332 40.86 11.2 6.288 11.17 26.13 28.04 27.23-6.202 26.14 10.74 3.74 11.45 4.435-2.931 11.82 1.25 25.68 9.903 8.13 15.14-17.54 46-10.09 67.36-7.207 54.73 12.15 97.61 62.21 102.1 118-2.552-17.41-28.58-25.75-31.15-3.865-7.939 13.05-13.94 14.28-11.56-1.939-2.561-22.18-7.91 35.32-27.75 19.01-21.13-4.086-18.92-24.7-15.15-39.36-14.87-14.09-40.67 1.287-41.67 20.28-2.139 18.45 6.539 37.96 21.44 48.94-12.53 0.754-22.63 5.863-4.617 10.56 44.54 20.83 101.9 6.692 131.2-33.15 12.31-11.68 19.47-42.85 22.48-48.39 8.823 43.34-11.13 90.62-48.64 114.3 16.94 1.43 46.45-12.7 54.99-12.36-18.28 24.18-42.63 43.69-70.16 56.36 61.42-3.345 119.4-40.38 148.9-94.25-4.725 26.71-15.46 52.33-31.15 74.45 42.49-27.7 72-74.04 79.66-124.1 5.656 15.42 2.235 47.41 5.288 53.08 37.7-51.71 45.79-121.8 23.49-181.5-11.05-31.38-28.36-62.08-51-85.69-0.6852 46.85-49.77 83.93-95.06 73.29-19.79-3.334 18.03-3.495 22.35-10.31 40.9-18.81 56.67-75.35 30.92-112.4-9.929-15.05-25.53-26.42-42.38-32.54z', // svgPathData\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/social/social.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialService[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
