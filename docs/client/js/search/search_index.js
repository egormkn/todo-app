var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.229,1,0.859]],["body/components/AppComponent.html",[0,0.386,1,1.531,2,1.577,3,0.192,4,0.167,5,1.273,6,1.273,7,0.167,8,3.711,9,1.214,10,2.065,11,1.873,12,2.339,13,1.654,14,0.216,15,0.018,16,0.242,17,0.192,18,0.267,19,1.273,20,1.654,21,1.654,22,1.052,23,1.945,24,1.273,25,0.763,26,1.273,27,1.002,28,1.273,29,1.002,30,1.103,31,1.103,32,1.945,33,1.052,34,1.273,35,1.052,36,1.273,37,1.002,38,0.823,39,1.273,40,1.002,41,1.273,42,1.002,43,1.103,44,1.002,45,0.909,46,1.002,47,1.273,48,1.002,49,1.273,50,1.002,51,1.103,52,1.052,53,1.273,54,1.052,55,1.273,56,1.157,57,1.312,58,1.654,59,1.052,60,1.273,61,1.052,62,1.052,63,1.002,64,1.273,65,1.002,66,1.157,67,1.214,68,1.002,69,1.214,70,1.273,71,0.014,72,0.014]],["title/modules/AppModule.html",[73,1.629,74,2.38]],["body/modules/AppModule.html",[1,1.709,3,0.174,4,0.152,7,0.152,11,0.955,14,0.369,15,0.019,16,0.219,17,0.234,18,0.243,33,1.661,35,1.661,40,1.583,71,0.013,72,0.013,74,4.81,75,1.475,76,2.592,77,3.369,78,3.369,79,3.369,80,3.369,81,4.383,82,2.934,83,2.185,84,1.823,85,2.735,86,3.382,87,2.315,88,2.926,89,4.036,90,1.725,91,2.315,92,3.919,93,2.735,94,2.735,95,4.523,96,3.919,97,2.185,98,2.185,99,3.382,100,1.212,101,1.212,102,4.036,103,2.083,104,2.339,105,2.934,106,1.93,107,2.185,108,2.519,109,3.369,110,3.919,111,3.919,112,3.369,113,3.006,114,3.369,115,2.185,116,1.272,117,3.919,118,3.919,119,3.919,120,1.552,121,1.001,122,4.036,123,3.006,124,3.369,125,2.735,126,3.369,127,3.369,128,3.369,129,2.735,130,3.006,131,3.369,132,3.919,133,3.919,134,3.919,135,3.919,136,3.369]],["title/modules/AppRoutingModule.html",[73,1.629,81,2.38]],["body/modules/AppRoutingModule.html",[0,0.277,3,0.198,4,0.173,7,0.173,14,0.335,15,0.019,16,0.25,17,0.198,18,0.277,40,1.331,66,1.198,71,0.014,72,0.014,75,1.682,81,3.686,87,1.966,91,2.523,112,3.841,121,1.766,137,3.427,138,2.491,139,5.735,140,3.686,141,4.071,142,1.682,143,3.78,144,4.468,145,3.197,146,3.841,147,3.841,148,3.197,149,3.841,150,3.841,151,3.197,152,3.841,153,3.841,154,3.197,155,3.841,156,2.491,157,3.841,158,3.841,159,4.442,160,3.841,161,3.841,162,3.427,163,6.681,164,3.686,165,2.338,166,4.468,167,4.468,168,6.333,169,4.468,170,4.468,171,4.468,172,2.872]],["title/modules/AppServerModule.html",[73,1.629,173,2.584]],["body/modules/AppServerModule.html",[1,1.713,3,0.223,4,0.195,7,0.195,14,0.359,15,0.019,16,0.281,17,0.223,18,0.311,71,0.015,72,0.015,74,4.683,75,1.892,76,3.042,82,3.443,83,2.803,84,2.338,87,2.718,88,3.042,91,2.718,93,3.509,103,1.991,106,2.477,109,4.322,173,5.15,174,4.322,175,5.028,176,5.028,177,5.028,178,6.176,179,3.509,180,6.176,181,4.322,182,5.028]],["title/components/AuthComponent.html",[0,0.229,27,0.859]],["body/components/AuthComponent.html",[0,0.386,1,1.002,2,1.577,3,0.192,4,0.167,5,1.273,6,1.273,7,0.167,9,1.214,10,2.065,11,1.873,13,1.654,14,0.216,15,0.018,16,0.242,17,0.192,18,0.267,19,1.273,20,1.654,21,1.654,22,1.052,23,1.945,24,1.273,25,0.763,26,1.273,27,1.531,28,1.273,29,1.002,30,1.103,31,1.103,32,1.945,33,1.052,34,1.273,35,1.052,36,1.273,37,1.002,38,0.823,39,1.273,40,1.002,41,1.273,42,1.002,43,1.103,44,1.002,45,0.909,46,1.002,47,1.273,48,1.002,49,1.273,50,1.002,51,1.103,52,1.052,53,1.273,54,1.052,55,1.273,56,1.157,57,1.312,58,1.654,59,1.052,60,1.273,61,1.052,62,1.052,63,1.002,64,1.273,65,1.002,66,1.157,67,1.214,68,1.002,69,1.214,70,1.273,71,0.014,72,0.014,162,4.302,183,3.711]],["title/guards/AuthGuard.html",[143,2.21,184,2.84]],["body/guards/AuthGuard.html",[3,0.195,4,0.17,7,0.17,12,1.83,14,0.315,15,0.019,16,0.246,17,0.195,18,0.272,25,0.769,71,0.014,72,0.014,116,2.038,120,1.737,121,1.121,142,1.651,143,3.383,164,4.265,185,3.365,186,3.771,187,0.473,188,1.253,189,5.704,190,0.794,191,3.365,192,3.923,193,2.44,194,1.258,195,4.387,196,1.024,197,0.633,198,1.258,199,5.667,200,6.154,201,6.154,202,6.154,203,4.387,204,3.383,205,1.193,206,2.636,207,4.871,208,4.387,209,1.448,210,2.446,211,1.93,212,1.294,213,1.737,214,1.233,215,3.383,216,4.387,217,1.83,218,4.387,219,4.387,220,4.387,221,3.771]],["title/interceptors/AuthInterceptor.html",[222,3.182,223,2.84]],["body/interceptors/AuthInterceptor.html",[3,0.217,4,0.189,7,0.189,14,0.331,15,0.019,16,0.273,17,0.217,18,0.302,25,0.598,71,0.015,72,0.015,90,2.148,116,1.968,121,1.549,129,4.604,187,0.526,188,1.341,194,0.978,196,0.796,197,0.492,198,0.978,205,1.028,209,1.549,212,1.439,223,4.651,224,4.881,225,4.195,226,6.063,227,6.063,228,6.899,229,6.899,230,4.881,231,4.195,232,3.451,233,4.881,234,6.063,235,2.148,236,6.596,237,4.881,238,4.881,239,4.881,240,4.881,241,4.881,242,4.881,243,4.881,244,4.881]],["title/modules/AuthModule.html",[73,1.629,145,2.064]],["body/modules/AuthModule.html",[3,0.182,4,0.159,7,0.159,14,0.374,15,0.019,16,0.229,17,0.182,18,0.254,27,1.603,29,1.603,30,1.047,31,1.385,42,1.603,43,1.047,44,1.603,45,0.863,50,1.603,51,1.047,52,1.682,71,0.013,72,0.013,75,1.542,76,2.669,82,3.022,83,2.284,84,1.905,86,3.484,87,2.385,88,2.018,89,4.157,90,1.803,91,2.385,99,3.484,100,1.267,101,1.267,102,4.157,103,1.622,104,2.445,108,2.633,145,4.237,162,3.142,245,3.521,246,3.521,247,3.521,248,4.439,249,4.097,250,3.783,251,2.445,252,2.859,253,5.555,254,2.859,255,4.097,256,4.658,257,2.445,258,3.521,259,2.859,260,2.859]],["title/interfaces/AuthResponse.html",[261,1.262,262,2.064]],["body/interfaces/AuthResponse.html",[3,0.146,4,0.128,7,0.128,12,1.372,14,0.34,15,0.019,16,0.184,17,0.276,18,0.204,25,0.571,38,0.627,45,0.692,71,0.011,72,0.011,90,1.447,97,1.834,98,1.834,103,1.302,105,1.834,106,1.62,107,1.834,115,1.834,116,2.203,121,1.734,187,0.355,190,0.595,193,1.121,196,0.536,197,0.332,206,2.168,209,1.191,211,1.447,214,1.816,215,2.783,232,2.833,235,1.447,261,2.008,262,2.599,263,1.72,264,1.963,265,1.191,266,3.787,267,2.125,268,2.599,269,2.114,270,1.963,271,1.834,272,2.114,273,2.383,274,1.963,275,2.997,276,2.114,277,1.834,278,1.834,279,3.019,280,2.599,281,1.834,282,2.599,283,1.963,284,1.834,285,1.834,286,2.114,287,1.945,288,2.114,289,2.114,290,2.114,291,2.114,292,1.529,293,2.114,294,2.114,295,2.114,296,2.997,297,2.114,298,2.114,299,2.439,300,1.082,301,2.997,302,2.114,303,2.114,304,2.114,305,2.114,306,2.114,307,3.082,308,2.114,309,2.997,310,2.997,311,3.481,312,2.783,313,2.997,314,2.783,315,3.232,316,2.114,317,1.451,318,3.481,319,3.481,320,2.114,321,2.114,322,2.114,323,1.62,324,2.114,325,2.997,326,2.114,327,2.114,328,2.114,329,2.114,330,1.834,331,2.783,332,2.114,333,2.114,334,1.963,335,2.114,336,2.114,337,2.114,338,1.963,339,2.114,340,2.997,341,2.997,342,2.114,343,2.114,344,2.114]],["title/modules/AuthRoutingModule.html",[73,1.629,248,2.38]],["body/modules/AuthRoutingModule.html",[0,0.434,3,0.191,4,0.167,7,0.167,14,0.366,15,0.019,16,0.241,17,0.191,18,0.266,27,1.299,29,1.443,30,1.099,31,1.429,42,1.299,43,1.589,44,1.299,45,1.178,50,1.299,51,1.429,71,0.014,72,0.014,75,1.618,87,1.892,91,2.462,121,1.099,138,2.397,140,3.596,141,3.997,142,1.618,143,3.339,159,4.581,160,3.696,161,3.696,164,4.388,172,2.764,197,0.564,248,3.596,252,3.001,253,5.66,254,3.001,258,3.696,259,3.001,260,3.001,345,4.3,346,5.594,347,4.765,348,3.696,349,3.596,350,4.291,351,3.905,352,3.298,353,3.001]],["title/injectables/AuthService.html",[193,1.262,209,0.946]],["body/injectables/AuthService.html",[3,0.117,4,0.102,7,0.102,12,1.096,14,0.319,15,0.019,16,0.147,17,0.252,18,0.163,25,0.781,30,1.011,38,0.907,43,1.011,45,1.115,51,1.011,71,0.01,72,0.01,90,1.156,97,1.465,98,1.465,103,1.04,105,1.465,106,1.294,107,1.465,115,2.653,116,2.069,121,1.628,187,0.283,188,0.875,190,0.716,193,1.348,194,1.385,196,1.063,197,0.643,198,1.196,205,1.399,206,2.462,209,1.011,211,1.156,214,1.792,215,3.39,232,2.971,235,1.156,261,1.804,262,1.465,264,1.568,265,1.011,266,1.689,267,2.13,268,2.952,269,1.689,270,1.568,271,1.465,272,1.689,273,2.725,274,1.568,275,3.403,276,1.689,277,1.465,278,1.465,279,3.166,280,2.205,281,1.465,282,2.952,283,1.568,284,1.465,285,1.465,286,3.058,287,1.985,288,2.543,289,3.058,290,2.543,291,1.689,292,1.84,293,1.689,294,3.058,295,3.058,296,2.543,297,1.689,298,2.543,299,2.77,300,1.229,301,3.058,302,1.689,303,1.689,304,1.689,305,1.689,306,2.543,307,2.77,308,1.689,309,2.543,310,2.543,311,3.058,312,2.361,313,2.543,314,2.361,315,2.84,316,1.689,317,1.522,318,3.058,319,3.058,320,2.543,321,1.689,322,1.689,323,1.294,324,2.543,325,2.543,326,1.689,327,1.689,328,1.689,329,2.543,330,2.653,331,2.361,332,1.689,333,1.689,334,1.568,335,1.689,336,1.689,337,1.689,338,3.16,339,3.403,340,2.543,341,2.543,342,1.689,343,3.403,344,1.689,350,3.034,354,1.374,355,3.956,356,3.956,357,2.627,358,3.956,359,2.627,360,2.627,361,2.627,362,2.627,363,2.627,364,2.627,365,2.627,366,2.627,367,2.627,368,2.627,369,1.416,370,2.627]],["title/components/ConnectAccountFormComponent.html",[0,0.229,29,0.859]],["body/components/ConnectAccountFormComponent.html",[0,0.325,1,0.72,2,1.256,3,0.138,4,0.12,5,0.914,6,0.914,7,0.12,9,0.872,10,2.001,11,1.813,13,0.914,14,0.305,15,0.019,16,0.174,17,0.138,18,0.192,19,0.914,20,1.318,21,1.318,22,0.755,23,1.691,24,0.914,25,0.703,26,0.914,27,0.72,28,0.914,29,1.331,30,1.708,31,1.88,32,1.691,33,0.755,34,0.914,35,0.755,36,0.914,37,0.72,38,0.591,39,0.914,40,0.72,41,0.914,42,0.72,43,0.792,44,0.72,45,0.653,46,0.72,47,0.914,48,0.72,49,0.914,50,0.72,51,0.792,52,0.755,53,0.914,54,0.755,55,0.914,56,0.831,57,1.103,58,1.318,59,0.755,60,0.914,61,0.755,62,0.755,63,0.72,64,0.914,65,0.72,66,0.831,67,0.872,68,0.72,69,0.872,70,0.914,71,0.011,72,0.011,100,0.959,101,0.959,120,1.77,121,1.339,142,1.167,187,0.334,188,0.988,190,0.809,191,2.378,192,3.531,193,2.225,194,1.149,196,0.506,197,0.528,198,0.621,204,3.128,205,0.653,210,1.729,212,1.318,214,1.473,260,4.244,265,1.142,267,0.914,300,1.037,317,1.198,331,1.851,369,1.6,371,1.11,372,5.226,373,1.993,374,1.972,375,3.12,376,1.6,377,4.02,378,1.6,379,3.428,380,3.415,381,3.369,382,2.158,383,4.003,384,2.186,385,2.392,386,3.842,387,3.101,388,3.101,389,1.993,390,1.167,391,1.293,392,1.007,393,1.167,394,2.665,395,3.101,396,3.101,397,3.101,398,3.101,399,3.101,400,3.101,401,3.101,402,2.665,403,3.101,404,2.378,405,2.378,406,3.101,407,3.101]],["title/injectables/FakeTasksService.html",[209,0.946,408,2.584]],["body/injectables/FakeTasksService.html",[3,0.094,4,0.082,7,0.082,14,0.274,15,0.019,16,0.118,17,0.094,18,0.131,25,0.748,57,1.478,62,1.778,71,0.008,72,0.008,106,1.039,116,1.666,120,2.476,165,3.49,187,0.227,188,0.738,190,0.382,194,1.188,196,0.837,197,0.577,198,1.028,205,1.081,209,0.853,212,0.622,213,0.835,214,1.535,217,2.277,232,2.992,235,0.928,265,0.853,273,2.402,292,0.981,317,0.895,354,1.103,369,1.195,408,2.33,409,5.249,410,1.812,411,3.178,412,4.71,413,3.337,414,3.337,415,3.337,416,2.108,417,2.108,418,2.108,419,3.337,420,2.856,421,2.108,422,2.473,423,3.337,424,6.254,425,2.108,426,5.459,427,5.249,428,3.337,429,2.108,430,3.337,431,2.108,432,5.043,433,3.063,434,3.18,435,3.337,436,3.337,437,3.982,438,3.337,439,3.337,440,5.098,441,7.622,442,3.613,443,6.491,444,3.337,445,3.337,446,6.491,447,3.337,448,3.337,449,2.108,450,5.003,451,5.856,452,5.856,453,3.337,454,3.337,455,4.188,456,5.459,457,4.71,458,4.71,459,4.049,460,2.108,461,3.337,462,1.472,463,2.108,464,1.812,465,1.355,466,1.355,467,1.472,468,2.108,469,2.108,470,2.108,471,2.108,472,1.812,473,4.142,474,4.142]],["title/components/FooterComponent.html",[0,0.229,33,0.902]],["body/components/FooterComponent.html",[0,0.36,1,0.873,2,1.439,3,0.167,4,0.146,5,1.109,6,1.109,7,0.146,9,1.058,10,2.04,11,1.85,13,1.109,14,0.313,15,0.019,16,0.211,17,0.167,18,0.233,19,1.109,20,1.509,21,1.509,22,0.916,23,1.841,24,1.109,25,0.765,26,1.109,27,0.873,28,1.109,29,0.873,30,0.961,31,0.961,32,1.841,33,1.521,34,1.109,35,0.916,36,1.109,37,0.873,38,0.717,39,1.109,40,0.873,41,1.109,42,0.873,43,0.961,44,0.873,45,0.792,46,0.873,47,1.109,48,0.873,49,1.109,50,0.873,51,0.961,52,0.916,53,1.109,54,0.916,55,1.109,56,1.008,57,1.225,58,1.509,59,0.916,60,1.109,61,0.916,62,0.916,63,0.873,64,1.109,65,0.873,66,1.008,67,1.058,68,0.873,69,1.058,70,1.109,71,0.012,72,0.012,100,1.164,101,1.583,187,0.406,190,0.681,194,1.166,196,0.613,197,0.379,198,0.754,265,1.308,317,1.372,369,1.832,371,1.347,376,1.832,378,1.832,384,1.569,385,2.604,390,1.416,392,1.662,393,1.416,475,3.234,476,4.4,477,5.817,478,5.119,479,6.737,480,5.287,481,5.119,482,5.119,483,3.763,484,2.886,485,2.886,486,3.763,487,5.119]],["title/components/HeaderComponent.html",[0,0.229,35,0.902]],["body/components/HeaderComponent.html",[0,0.317,1,0.689,2,1.218,3,0.132,4,0.115,5,0.875,6,0.875,7,0.115,9,0.835,10,1.992,11,1.804,13,0.875,14,0.3,15,0.019,16,0.166,17,0.132,18,0.184,19,0.875,20,1.277,21,1.277,22,0.723,23,1.657,24,0.875,25,0.838,26,0.875,27,0.689,28,0.875,29,0.689,30,0.759,31,0.759,32,1.657,33,0.723,34,0.875,35,1.369,36,0.875,37,0.689,38,0.566,39,0.875,40,0.689,41,0.875,42,0.689,43,0.759,44,0.689,45,0.625,46,0.689,47,0.875,48,0.689,49,0.875,50,0.689,51,0.759,52,0.723,53,0.875,54,0.723,55,0.875,56,0.796,57,1.077,58,1.277,59,0.723,60,0.875,61,0.723,62,0.723,63,0.689,64,0.875,65,0.689,66,0.796,67,0.835,68,0.689,69,0.835,70,0.875,71,0.01,72,0.01,84,2.014,100,0.918,101,0.918,120,1.715,187,0.32,188,0.958,190,0.538,193,2.126,194,1.323,196,0.706,197,0.567,198,1.25,205,1.077,206,2.378,212,1.277,213,1.176,217,1.807,235,1.306,265,1.107,267,1.277,300,1.305,317,1.161,323,2.133,369,1.55,371,1.063,374,1.924,376,1.55,378,1.55,382,2.115,384,2.133,385,2.344,390,1.117,391,1.238,392,0.964,393,1.117,427,2.552,433,1.381,488,2.552,489,3.922,490,5.137,491,5.113,492,4.331,493,4.395,494,5.113,495,5.538,496,4.311,497,3.723,498,2.072,499,4.331,500,2.969,501,2.969,502,3.723,503,2.969,504,5.363,505,2.969,506,2.969,507,2.969,508,2.552,509,4.331,510,4.331,511,2.072,512,3.322,513,3.723,514,2.072,515,2.969,516,2.552,517,2.552,518,2.969,519,2.552,520,2.552,521,4.331,522,2.969,523,2.969,524,2.552,525,3.723,526,4.331,527,3.723,528,3.613,529,3.322,530,2.969,531,2.969,532,3.322,533,2.277,534,2.969]],["title/components/HttpStatusComponent.html",[0,0.229,37,0.859]],["body/components/HttpStatusComponent.html",[0,0.301,1,0.631,2,1.141,3,0.121,4,0.105,5,0.802,6,0.802,7,0.105,9,0.764,10,1.971,11,1.784,13,0.802,14,0.314,15,0.019,16,0.152,17,0.121,18,0.168,19,0.802,20,1.197,21,1.197,22,0.662,23,1.588,24,0.802,25,0.66,26,0.802,27,0.631,28,0.802,29,0.631,30,0.695,31,0.695,32,1.588,33,0.662,34,0.802,35,0.662,36,0.802,37,1.25,38,1.254,39,0.802,40,0.631,41,0.802,42,0.631,43,0.695,44,0.631,45,0.573,46,0.631,47,0.802,48,0.631,49,0.802,50,0.631,51,0.695,52,0.662,53,0.802,54,0.662,55,0.802,56,0.729,57,1.023,58,1.197,59,0.662,60,0.802,61,0.662,62,0.662,63,0.631,64,0.802,65,0.631,66,0.729,67,0.764,68,0.631,69,0.764,70,0.802,71,0.01,72,0.01,100,0.841,101,0.841,121,0.695,130,2.086,142,1.023,156,3.59,179,3.76,187,0.293,188,0.898,190,0.735,194,1.255,196,0.443,197,0.543,198,0.545,204,2.899,205,0.855,212,1.197,214,1.365,217,1.693,231,3.489,251,1.623,265,1.037,267,1.197,300,1.127,317,1.444,369,1.928,371,0.974,374,1.828,376,1.453,378,1.453,380,3.163,382,2.027,383,3.76,384,2.026,385,2.247,390,1.023,391,1.134,392,0.883,393,1.023,422,1.623,450,4.023,455,2.086,535,4.139,536,2.337,537,3.114,538,4.857,539,4.059,540,4.219,541,4.857,542,4.954,543,5.386,544,2.719,545,3.76,546,6.264,547,4.059,548,4.059,549,2.719,550,2.719,551,5.386,552,2.719,553,2.719,554,5.386,555,2.719,556,2.337,557,4.059,558,2.719,559,2.719,560,4.059,561,2.719,562,4.059,563,2.719,564,4.059,565,2.719,566,2.719,567,4.059,568,2.719,569,2.719,570,2.337,571,2.719,572,2.719,573,3.489,574,4.059,575,2.337,576,2.337,577,2.719,578,3.489,579,2.086,580,2.086,581,2.719,582,2.719,583,2.719,584,2.337,585,2.719]],["title/modules/HttpStatusModule.html",[73,1.629,154,2.064]],["body/modules/HttpStatusModule.html",[3,0.214,4,0.187,7,0.187,14,0.354,15,0.019,16,0.27,17,0.214,18,0.298,37,1.673,38,1.146,71,0.015,72,0.015,75,1.812,76,2.962,82,3.353,83,2.685,84,2.24,86,3.865,87,2.646,91,2.646,99,3.865,100,1.49,101,1.49,108,3.096,127,5.169,128,5.169,129,4.197,130,4.612,131,5.169,154,4.121,156,2.685,250,4.197,251,2.874,535,3.096,537,3.694,586,4.139,587,4.139,588,4.139,589,4.633,590,4.816,591,4.139]],["title/modules/HttpStatusRoutingModule.html",[73,1.629,589,2.38]],["body/modules/HttpStatusRoutingModule.html",[0,0.325,3,0.233,4,0.203,7,0.203,14,0.341,15,0.019,16,0.294,17,0.233,18,0.325,37,1.471,38,1,71,0.015,72,0.015,75,1.975,87,2.309,91,2.789,121,1.341,138,2.925,140,4.074,141,4.378,142,1.975,156,2.925,159,3.373,172,3.373,350,4.025,353,3.662,535,3.373,537,4.025,540,3.662,542,4.51,589,4.074,591,4.51,592,5.247,593,5.247]],["title/injectables/HttpStatusService.html",[209,0.946,545,2.584]],["body/injectables/HttpStatusService.html",[3,0.216,4,0.188,7,0.188,12,2.027,14,0.33,15,0.019,16,0.272,17,0.216,18,0.301,25,0.741,71,0.015,72,0.015,156,3.67,187,0.524,188,1.337,190,0.88,194,1.212,196,0.986,197,0.61,198,1.319,205,1.023,209,1.545,211,2.138,214,1.366,270,2.9,300,1.404,314,4.229,354,2.542,422,3.929,535,4.232,540,3.391,545,4.22,570,5.197,594,4.177,595,5.05,596,6.047,597,4.859,598,4.859,599,6.047,600,4.859,601,4.177,602,4.859,603,4.177,604,4.859,605,4.859,606,4.859,607,4.859]],["title/components/IndexComponent.html",[0,0.229,40,0.859]],["body/components/IndexComponent.html",[0,0.308,1,0.656,2,1.174,3,0.125,4,0.227,5,0.833,6,0.833,7,0.11,9,0.794,10,1.98,11,1.793,13,0.833,14,0.307,15,0.019,16,0.158,17,0.125,18,0.175,19,0.833,20,1.232,21,1.232,22,0.688,23,1.618,24,0.833,25,0.718,26,0.833,27,0.656,28,0.833,29,0.656,30,0.722,31,0.722,32,1.618,33,0.688,34,0.833,35,0.688,36,0.833,37,0.656,38,0.538,39,0.833,40,1.274,41,0.833,42,0.656,43,0.722,44,0.656,45,0.595,46,0.656,47,0.833,48,0.656,49,0.833,50,0.656,51,0.722,52,0.688,53,0.833,54,0.688,55,0.833,56,0.757,57,1.046,58,1.232,59,0.688,60,0.833,61,0.688,62,1.21,63,0.656,64,0.833,65,0.656,66,0.757,67,0.794,68,0.656,69,0.794,70,0.833,71,0.01,72,0.01,84,1.942,93,1.972,94,1.972,100,0.874,101,0.874,120,1.654,165,2.185,187,0.536,188,0.924,190,0.756,193,2.089,194,1.228,196,0.681,197,0.501,198,1.1,205,1.046,206,2.311,212,1.232,214,1.174,235,1.243,265,1.067,292,2.851,300,1.274,317,0.757,323,2.704,369,1.012,371,1.012,374,1.87,376,1.495,378,1.495,382,2.066,384,2.072,385,2.289,390,1.063,391,1.179,392,0.917,393,1.063,434,2.415,462,2.915,485,3.204,489,3.811,493,4.271,495,5.034,496,4.21,497,3.59,498,1.972,502,3.59,504,4.271,508,2.429,516,2.429,517,2.429,519,2.429,520,2.429,524,2.429,528,2.685,529,3.204,608,2.429,609,4.968,610,4.177,611,4.968,612,4.177,613,2.826,614,2.826,615,2.826,616,2.826,617,4.177,618,2.826,619,4.177,620,2.826,621,2.826,622,4.177,623,5.489,624,4.177,625,4.177,626,4.177,627,4.177,628,4.177,629,3.59,630,4.177,631,4.177,632,4.177,633,4.177,634,4.177,635,3.204,636,4.177,637,4.177,638,4.177,639,5.489,640,4.177,641,4.177,642,4.177,643,3.204,644,3.59,645,3.59,646,4.177,647,4.177,648,3.59,649,5.489,650,4.177,651,4.177,652,4.177,653,2.685,654,4.177]],["title/interfaces/JwtPayload.html",[261,1.262,285,2.064]],["body/interfaces/JwtPayload.html",[3,0.144,4,0.126,7,0.126,12,1.357,14,0.339,15,0.019,16,0.182,17,0.275,18,0.202,25,0.759,38,0.62,45,0.685,71,0.011,72,0.011,90,1.432,97,1.814,98,1.814,103,1.289,105,1.814,106,1.603,107,1.814,115,1.814,116,2.197,121,1.73,187,0.351,190,0.589,193,1.109,196,0.531,197,0.466,206,2.152,209,1.182,211,1.432,214,1.81,215,2.762,232,2.817,235,1.432,261,1.998,262,1.814,263,1.702,264,1.942,265,1.182,266,2.092,267,2.151,268,2.58,269,2.092,270,1.942,271,1.814,272,2.092,273,2.369,274,1.942,275,2.974,276,2.092,277,1.814,278,1.814,279,3.002,280,3.454,281,1.814,282,2.58,283,1.942,284,1.814,285,2.58,286,2.092,287,1.93,288,2.092,289,2.092,290,2.092,291,2.092,292,1.513,293,2.092,294,2.092,295,2.092,296,2.974,297,2.092,298,2.092,299,2.421,300,1.074,301,2.974,302,2.092,303,2.092,304,2.092,305,2.092,306,2.092,307,3.068,308,2.092,309,2.974,310,2.974,311,3.461,312,2.762,313,2.974,314,2.762,315,3.214,316,2.092,317,1.443,318,3.461,319,3.461,320,2.092,321,2.092,322,2.092,323,1.603,324,2.092,325,2.974,326,2.092,327,2.092,328,2.092,329,2.092,330,1.814,331,2.762,332,2.092,333,2.092,334,1.942,335,2.092,336,2.092,337,2.092,338,1.942,339,2.092,340,2.974,341,2.974,342,2.092,343,2.092,344,2.092]],["title/interfaces/LogInDto.html",[261,1.262,279,2.064]],["body/interfaces/LogInDto.html",[3,0.144,4,0.126,7,0.126,12,1.357,14,0.339,15,0.019,16,0.182,17,0.275,18,0.202,25,0.567,38,0.62,45,0.685,71,0.011,72,0.011,90,1.432,97,1.814,98,1.814,103,1.289,105,1.814,106,1.603,107,1.814,115,1.814,116,2.197,121,1.73,187,0.351,190,0.589,193,1.109,196,0.531,197,0.466,206,2.152,209,1.182,211,1.432,214,1.81,215,2.762,232,2.817,235,1.432,261,1.998,262,1.814,263,1.702,264,1.942,265,1.182,266,2.092,267,2.151,268,2.58,269,2.092,270,1.942,271,1.814,272,2.092,273,2.369,274,1.942,275,2.974,276,2.092,277,1.814,278,1.814,279,3.269,280,3.454,281,3.269,282,2.58,283,1.942,284,1.814,285,1.814,286,2.092,287,1.93,288,2.092,289,2.092,290,2.092,291,2.092,292,1.513,293,2.092,294,2.092,295,2.092,296,2.974,297,2.092,298,2.092,299,2.421,300,1.074,301,2.974,302,2.092,303,2.092,304,2.092,305,2.092,306,2.092,307,3.068,308,2.092,309,2.974,310,2.974,311,3.461,312,2.762,313,2.974,314,2.762,315,3.214,316,2.092,317,1.443,318,3.461,319,3.461,320,2.092,321,2.092,322,2.092,323,1.603,324,2.092,325,2.974,326,2.092,327,2.092,328,2.092,329,2.092,330,1.814,331,2.762,332,2.092,333,2.092,334,1.942,335,2.092,336,2.092,337,2.092,338,1.942,339,2.092,340,2.974,341,2.974,342,2.092,343,2.092,344,2.092]],["title/injectables/Logger.html",[209,0.946,273,1.629]],["body/injectables/Logger.html",[3,0.221,4,0.193,7,0.193,12,2.078,14,0.25,15,0.019,16,0.279,17,0.221,18,0.309,25,0.816,71,0.015,72,0.015,187,0.537,188,1.358,194,1.334,196,1.085,197,0.671,198,1.334,205,1.402,209,1.569,211,2.192,273,2.702,300,1.545,354,2.606,380,3.213,528,3.947,655,4.282,656,6.141,657,6.141,658,4.982,659,6.657,660,6.141,661,4.982,662,6.141,663,4.982,664,4.982,665,4.982,666,4.982]],["title/components/LoginFormComponent.html",[0,0.229,42,0.859]],["body/components/LoginFormComponent.html",[0,0.27,1,0.53,2,0.999,3,0.101,4,0.089,5,0.673,6,0.673,7,0.089,9,0.642,10,1.926,11,1.742,13,0.673,14,0.295,15,0.019,16,0.128,17,0.101,18,0.141,19,0.673,20,1.048,21,1.048,22,0.556,23,1.451,24,0.673,25,0.603,26,0.673,27,0.53,28,0.673,29,0.53,30,0.584,31,1.115,32,1.451,33,0.556,34,0.673,35,0.556,36,0.673,37,0.53,38,0.435,39,0.673,40,0.53,41,0.673,42,1.142,43,1.557,44,0.53,45,0.481,46,0.53,47,0.673,48,0.53,49,0.673,50,0.53,51,0.584,52,0.556,53,0.673,54,0.556,55,0.673,56,0.612,57,0.918,58,1.048,59,0.556,60,0.673,61,0.556,62,0.556,63,0.53,64,0.673,65,0.53,66,0.612,67,0.642,68,0.53,69,0.642,70,0.673,71,0.009,72,0.009,100,0.707,101,0.707,116,0.741,120,1.727,142,0.859,187,0.383,188,0.786,190,0.643,192,3.286,193,2.009,194,1.221,196,0.372,197,0.538,198,1.068,204,2.604,205,0.748,210,1.273,212,1.048,214,1.499,217,1.819,252,4.37,257,1.363,265,0.908,267,1.451,273,2.594,274,1.363,280,3.148,281,3.398,284,1.981,300,1.013,317,0.952,330,1.273,352,3.346,369,1.272,371,0.818,373,1.468,374,1.641,375,4.254,376,1.272,377,3.346,378,1.272,379,2.726,380,2.282,381,2.804,382,1.852,383,3.435,384,1.819,385,2.053,386,1.963,389,2.284,390,0.859,391,0.953,392,0.741,393,0.859,404,1.752,433,2.029,437,1.363,442,2.726,511,1.594,512,2.726,514,1.594,528,3.428,532,3.346,533,3.346,643,2.726,667,5.382,668,3.346,669,4.362,670,3.775,671,2.726,672,3.346,673,1.752,674,3.775,675,3.554,676,2.726,677,1.963,678,1.963,679,2.284,680,2.726,681,3.775,682,3.055,683,2.284,684,1.752,685,1.963,686,1.752,687,1.752,688,1.963,689,1.963,690,1.963,691,3.435,692,2.284,693,2.284,694,2.284,695,2.284,696,2.284,697,1.963,698,2.284,699,1.963,700,3.055,701,1.963,702,1.963,703,2.726,704,2.726,705,2.726,706,2.726,707,3.775,708,2.726,709,2.726,710,3.554,711,1.963,712,4.331,713,1.963,714,1.963,715,1.963,716,1.963,717,1.963,718,1.963,719,1.963,720,3.055,721,3.055,722,3.055,723,1.963,724,3.055,725,1.963,726,1.963,727,1.963,728,1.594,729,1.963,730,3.749,731,4.802,732,4.583,733,4.231,734,1.752,735,3.749,736,4.231,737,1.963,738,3.749]],["title/components/LogoutFormComponent.html",[0,0.229,44,0.859]],["body/components/LogoutFormComponent.html",[0,0.365,1,0.894,2,1.461,3,0.171,4,0.149,5,1.135,6,1.135,7,0.149,9,1.082,10,2.045,11,1.854,13,1.135,14,0.295,15,0.018,16,0.215,17,0.171,18,0.238,19,1.135,20,1.533,21,1.533,22,0.938,23,1.858,24,1.135,25,0.772,26,1.135,27,0.894,28,1.135,29,0.894,30,0.984,31,0.984,32,1.858,33,0.938,34,1.135,35,0.938,36,1.135,37,0.894,38,0.734,39,1.135,40,0.894,41,1.135,42,0.894,43,0.984,44,1.463,45,1.239,46,0.894,47,1.135,48,0.894,49,1.135,50,0.894,51,0.984,52,0.938,53,1.135,54,0.938,55,1.135,56,1.032,57,1.239,58,1.533,59,0.938,60,1.135,61,0.938,62,0.938,63,0.894,64,1.135,65,0.894,66,1.032,67,1.082,68,0.894,69,1.082,70,1.135,71,0.013,72,0.013,142,1.449,187,0.415,188,1.149,190,0.697,192,3.866,193,2.312,194,1.042,196,0.628,197,0.388,198,0.771,205,0.81,210,2.146,212,1.533,213,1.524,214,1.082,259,4.108,300,1.207,373,2.474,374,2.215,375,3.628,382,2.372,402,3.309,498,2.687,739,5.059,740,3.849,741,3.849,742,3.849]],["title/components/ModalComponent.html",[0,0.229,46,0.859]],["body/components/ModalComponent.html",[0,0.343,1,0.506,2,0.963,3,0.097,4,0.085,5,0.643,6,0.643,7,0.085,9,0.613,10,1.913,11,1.729,13,0.643,14,0.241,15,0.019,16,0.122,17,0.097,18,0.135,19,0.643,20,1.011,21,1.011,22,0.531,23,1.415,24,0.643,25,0.71,26,0.643,27,0.506,28,0.643,29,0.506,30,0.557,31,0.557,32,1.415,33,0.531,34,0.643,35,0.531,36,0.643,37,0.506,38,0.415,39,0.643,40,0.506,41,0.643,42,0.506,43,0.557,44,0.506,45,0.459,46,1.114,47,0.643,48,0.506,49,0.643,50,0.506,51,0.557,52,0.531,53,0.643,54,0.531,55,0.643,56,0.584,57,0.892,58,1.011,59,0.531,60,0.643,61,0.531,62,0.531,63,0.506,64,0.643,65,0.506,66,0.584,67,0.613,68,1.114,69,1.557,70,0.643,71,0.008,72,0.008,88,1.074,103,0.863,104,1.302,113,2.629,121,1.48,187,0.235,188,0.758,190,0.621,194,1.312,196,0.782,197,0.703,198,0.962,205,1.098,212,1.011,214,1.629,217,1.43,265,0.876,267,1.415,287,2.002,300,1.393,312,2.046,317,1.484,330,1.911,369,1.516,371,0.781,374,1.806,376,1.227,378,1.227,380,1.793,382,1.806,405,1.673,433,1.014,434,2.64,462,1.522,489,3.681,496,3.681,595,3.248,743,1.673,744,4.234,745,3.427,746,4.799,747,3.427,748,3.427,749,4.234,750,3.77,751,4.979,752,4.188,753,2.181,754,5.217,755,5.793,756,3.427,757,2.181,758,4.444,759,2.181,760,4.444,761,2.181,762,2.181,763,3.427,764,5.305,765,4.979,766,2.181,767,3.427,768,3.427,769,4.979,770,2.181,771,2.181,772,2.181,773,2.181,774,2.181,775,2.181,776,2.181,777,3.427,778,3.427,779,3.427,780,3.35,781,3.724,782,2.181,783,2.181,784,2.181,785,2.181,786,2.181,787,3.427,788,2.181,789,2.181,790,2.181,791,2.181,792,2.181,793,3.64,794,2.181,795,2.181,796,3.427,797,4.234,798,4.234,799,2.181,800,1.874,801,2.181,802,2.181,803,2.181,804,2.181,805,3.427,806,2.181,807,2.181,808,2.181,809,2.181,810,3.427,811,3.427,812,3.427,813,2.181,814,2.181,815,5.538,816,3.427,817,4.799,818,3.427,819,2.181,820,4.799,821,2.181,822,4.234,823,3.64,824,3.427,825,3.427,826,3.427,827,2.181,828,2.181,829,2.181,830,4.234,831,2.629,832,2.181,833,3.427,834,2.181,835,2.181,836,2.181,837,2.181]],["title/directives/ModalDirective.html",[22,0.902,68,0.859]],["body/directives/ModalDirective.html",[3,0.235,4,0.205,7,0.205,9,1.486,10,1.706,14,0.265,15,0.018,16,0.296,17,0.235,18,0.327,22,1.551,25,0.648,67,1.486,68,1.478,69,1.79,71,0.015,72,0.015,187,0.57,190,0.957,194,1.276,196,0.862,197,0.642,198,1.059,265,1.627,595,4.883,800,6.507,838,4.543,839,5.285,840,5.285,841,5.285,842,5.285]],["title/injectables/ModalService.html",[209,0.946,843,1.937]],["body/injectables/ModalService.html",[3,0.183,4,0.16,7,0.16,14,0.305,15,0.019,16,0.231,17,0.27,18,0.255,25,0.667,46,0.956,71,0.013,72,0.013,88,2.029,103,1.631,104,2.459,116,1.337,121,1.053,187,0.444,188,1.203,190,0.746,194,1.22,196,0.993,197,0.73,198,1.09,205,1.145,209,1.39,213,1.631,217,2.269,267,1.986,283,3.247,300,0.956,317,1.104,354,2.155,369,1.475,434,2.68,645,5.235,750,3.866,751,5.567,752,4.521,758,4.968,760,4.968,764,5.235,780,4.251,823,4.676,843,2.846,844,3.16,845,6.477,846,4.12,847,6.477,848,4.12,849,5.44,850,4.12,851,4.12,852,4.12,853,4.12,854,5.44,855,6.09,856,5.44,857,4.12,858,4.12,859,5.44,860,4.12,861,4.12,862,4.12,863,4.12,864,4.12,865,4.12]],["title/guards/NoAuthGuard.html",[184,2.84,347,2.584]],["body/guards/NoAuthGuard.html",[3,0.199,4,0.174,7,0.174,12,1.868,14,0.318,15,0.019,16,0.251,17,0.199,18,0.277,25,0.777,71,0.014,72,0.014,116,1.864,121,1.144,142,1.685,164,4.298,185,3.435,187,0.483,188,1.27,189,5.748,190,0.811,191,3.435,192,3.944,193,2.452,194,1.27,196,1.034,197,0.639,198,1.27,200,6.183,201,5.748,202,6.183,204,2.673,205,1.209,207,4.936,209,1.467,210,2.496,211,1.97,212,1.32,213,1.773,214,1.259,221,3.849,338,3.427,347,4.008,866,5.748,867,3.849,868,4.477,869,5.742,870,6.339,871,4.477,872,4.477,873,4.477,874,4.477]],["title/components/ProfileComponent.html",[0,0.229,48,0.859]],["body/components/ProfileComponent.html",[0,0.351,1,0.829,2,1.388,3,0.159,4,0.138,5,1.053,6,1.053,7,0.138,9,1.004,10,2.03,11,1.841,13,1.053,14,0.306,15,0.019,16,0.2,17,0.159,18,0.221,19,1.053,20,1.456,21,1.456,22,0.87,23,1.801,24,1.053,25,0.748,26,1.053,27,0.829,28,1.053,29,0.829,30,0.912,31,0.912,32,1.801,33,0.87,34,1.053,35,0.87,36,1.053,37,0.829,38,0.68,39,1.053,40,0.829,41,1.053,42,0.829,43,0.912,44,0.829,45,0.752,46,0.829,47,1.053,48,1.418,49,1.053,50,0.829,51,0.912,52,0.87,53,1.053,54,0.87,55,1.053,56,0.957,57,1.192,58,1.456,59,0.87,60,1.053,61,0.87,62,0.87,63,0.829,64,1.053,65,0.829,66,0.957,67,1.004,68,0.829,69,1.004,70,1.053,71,0.012,72,0.012,100,1.104,101,1.104,187,0.385,188,1.092,190,0.646,194,1.134,196,0.582,197,0.498,198,0.715,205,0.752,212,1.456,213,1.414,265,1.262,300,1.146,371,1.278,374,2.13,376,1.768,378,1.768,382,2.298,384,2.361,385,2.547,389,3.174,390,1.344,391,1.489,392,1.159,393,1.344,511,2.492,512,3.788,514,2.492,527,4.244,875,3.069,876,5.66,877,4.938,878,6.631,879,3.57,880,4.628,881,4.938,882,3.57,883,3.57,884,3.57,885,3.57,886,4.938,887,4.938]],["title/interfaces/SignUpDto.html",[261,1.262,282,2.064]],["body/interfaces/SignUpDto.html",[3,0.144,4,0.126,7,0.126,12,1.353,14,0.339,15,0.019,16,0.182,17,0.275,18,0.201,25,0.758,38,0.618,45,0.683,71,0.011,72,0.011,90,1.428,97,1.809,98,1.809,103,1.285,105,1.809,106,1.598,107,1.809,115,1.809,116,2.195,121,1.728,187,0.35,190,0.587,193,1.106,196,0.529,197,0.466,206,2.147,209,1.18,211,1.428,214,1.808,215,2.756,232,2.812,235,1.428,261,1.996,262,1.809,263,1.697,264,1.937,265,1.18,266,2.086,267,2.15,268,2.574,269,2.086,270,1.937,271,1.809,272,2.086,273,2.365,274,1.937,275,2.968,276,2.086,277,1.809,278,1.809,279,3.265,280,2.574,281,1.809,282,2.997,283,2.756,284,3.265,285,1.809,286,2.086,287,1.926,288,2.086,289,2.086,290,2.086,291,2.086,292,1.509,293,2.086,294,2.086,295,2.086,296,2.968,297,2.086,298,2.086,299,2.415,300,1.072,301,2.968,302,2.086,303,2.086,304,2.086,305,2.086,306,2.086,307,3.063,308,2.086,309,2.968,310,2.968,311,3.455,312,2.756,313,2.968,314,2.756,315,3.208,316,2.086,317,1.441,318,3.455,319,3.455,320,2.086,321,2.086,322,2.086,323,1.598,324,2.086,325,2.968,326,2.086,327,2.086,328,2.086,329,2.086,330,1.809,331,2.756,332,2.086,333,2.086,334,1.937,335,2.086,336,2.086,337,2.086,338,1.937,339,2.086,340,2.968,341,2.968,342,2.086,343,2.086,344,2.086]],["title/components/SignUpFormComponent.html",[0,0.229,50,0.859]],["body/components/SignUpFormComponent.html",[0,0.264,1,0.511,2,0.97,3,0.098,4,0.085,5,0.649,6,0.649,7,0.085,9,0.619,10,1.915,11,1.732,13,0.649,14,0.279,15,0.019,16,0.123,17,0.098,18,0.136,19,0.649,20,1.018,21,1.018,22,0.536,23,1.422,24,0.649,25,0.776,26,0.649,27,0.511,28,0.649,29,0.511,30,0.562,31,1.088,32,1.422,33,0.536,34,0.649,35,0.536,36,0.649,37,0.511,38,0.419,39,0.649,40,0.511,41,0.649,42,0.511,43,0.562,44,0.511,45,0.463,46,0.511,47,0.649,48,0.511,49,0.649,50,1.12,51,1.538,52,0.536,53,0.649,54,0.536,55,0.649,56,0.59,57,0.897,58,1.018,59,0.536,60,0.649,61,0.536,62,0.536,63,0.511,64,0.649,65,0.511,66,0.59,67,0.619,68,0.511,69,0.619,70,0.649,71,0.008,72,0.008,100,0.681,101,0.681,116,0.714,120,1.686,123,2.648,142,0.828,187,0.372,188,0.763,190,0.625,192,3.241,193,1.981,194,1.206,196,0.359,197,0.528,198,1.05,204,2.542,205,0.727,210,1.227,212,1.018,214,1.356,217,1.777,254,4.32,257,1.313,265,0.882,267,1.545,280,3.1,281,3.356,284,3.356,300,0.989,317,0.925,323,2.738,352,3.267,369,1.236,371,0.788,373,1.414,374,1.603,375,4.201,376,1.236,377,3.267,378,1.236,379,2.648,380,2.228,381,2.738,382,1.815,383,3.366,384,1.777,385,2.012,390,0.828,391,0.918,392,0.714,393,0.828,404,1.688,433,1.981,437,1.313,442,2.648,511,1.536,513,2.967,514,1.536,528,2.219,529,4.019,532,3.267,533,3.267,643,2.648,668,3.267,670,3.7,671,2.648,672,3.267,673,1.688,674,3.7,676,2.648,677,1.891,678,1.891,680,2.648,681,4.617,682,2.967,684,1.688,685,1.891,686,2.648,687,1.688,688,1.891,689,1.891,690,1.891,691,3.366,697,1.891,699,1.891,700,2.967,701,1.891,702,1.891,703,2.648,704,2.648,705,2.648,706,2.648,707,4.617,708,2.648,709,2.648,711,1.891,712,4.264,713,1.891,714,1.891,715,1.891,716,1.891,717,1.891,718,1.891,719,1.891,720,2.967,721,2.967,722,2.967,723,1.891,724,2.967,725,1.891,726,1.891,727,1.891,728,1.536,729,1.891,730,3.661,731,4.748,732,4.504,733,4.146,734,1.688,735,3.661,736,4.146,737,1.891,738,3.661,888,5.32,889,4.259,890,3.452,891,2.2,892,2.2,893,3.452,894,2.2,895,1.891,896,2.2,897,2.2,898,2.2,899,2.2,900,2.2,901,1.891,902,5.559,903,2.967,904,3.452,905,3.452]],["title/components/SocialComponent.html",[0,0.229,52,0.902]],["body/components/SocialComponent.html",[0,0.303,1,0.639,2,1.152,3,0.122,4,0.107,5,0.812,6,0.812,7,0.107,9,0.774,10,1.974,11,1.787,13,0.812,14,0.272,15,0.019,16,0.154,17,0.122,18,0.171,19,0.812,20,1.208,21,1.208,22,0.671,23,1.598,24,0.812,25,0.71,26,0.812,27,0.639,28,0.812,29,0.639,30,0.704,31,0.704,32,1.598,33,0.671,34,0.812,35,0.671,36,0.812,37,0.639,38,0.525,39,0.812,40,0.639,41,0.812,42,0.639,43,1.251,44,0.639,45,0.58,46,0.639,47,0.812,48,0.639,49,0.812,50,0.639,51,0.704,52,1.32,53,0.812,54,0.671,55,0.812,56,0.738,57,1.03,58,1.208,59,0.671,60,0.812,61,0.671,62,0.671,63,0.639,64,0.812,65,0.639,66,0.738,67,0.774,68,0.639,69,0.774,70,0.812,71,0.01,72,0.01,142,1.036,187,0.297,188,0.906,190,0.499,192,3.507,193,2.07,194,0.981,196,0.668,197,0.493,198,0.821,205,0.58,210,1.535,213,1.09,214,0.774,265,1.047,300,0.639,317,0.738,349,1.77,369,0.986,371,0.986,376,1.467,378,1.467,498,1.922,525,2.367,579,5.628,580,5.872,648,2.367,653,3.904,731,5.628,906,2.367,907,4.098,908,4.894,909,4.098,910,4.098,911,4.098,912,4.158,913,2.754,914,2.754,915,2.754,916,2.754,917,4.098,918,2.754,919,2.754,920,2.112,921,2.754,922,4.098,923,2.754,924,4.098,925,1.922,926,4.098,927,2.754,928,4.098,929,2.754,930,4.098,931,2.754,932,4.098,933,4.098,934,2.754,935,4.098,936,2.754,937,4.098,938,2.754,939,4.098,940,4.098,941,2.754,942,4.098,943,2.754,944,4.098,945,2.754,946,4.098,947,2.754,948,4.098,949,2.754,950,4.098,951,2.754,952,4.098,953,2.754,954,4.098,955,2.754,956,4.098,957,2.754,958,4.098,959,2.754,960,4.098]],["title/interfaces/SocialService.html",[261,1.262,961,2.584]],["body/interfaces/SocialService.html",[3,0.207,4,0.181,7,0.181,14,0.234,15,0.019,17,0.287,71,0.014,72,0.014,120,2.332,121,1.191,187,0.503,197,0.761,206,3.004,217,1.944,261,1.588,263,2.438,265,1.505,267,1.905,349,4.152,351,4.508,390,1.754,392,1.513,393,1.754,434,3.194,484,3.575,653,2.996,912,5.205,925,4.508,961,4.508,962,3.253,963,6.24,964,6.24,965,5.833,966,5.063,967,5.063,968,5.063]],["title/interfaces/Task.html",[57,0.78,261,1.262]],["body/interfaces/Task.html",[3,0.231,4,0.202,7,0.202,15,0.018,17,0.231,57,1.327,71,0.015,72,0.015,187,0.561,197,0.728,206,3.154,261,1.771,263,2.719,265,1.61,267,2.165,422,4.382,432,4.921,434,3.103,450,4.921,451,6.061,452,6.061,969,4.467]],["title/components/TaskComponent.html",[0,0.229,54,0.902]],["body/components/TaskComponent.html",[0,0.328,1,0.733,2,1.274,3,0.14,4,0.123,5,0.932,6,0.932,7,0.123,9,0.888,10,2.005,11,1.817,13,0.932,14,0.319,15,0.019,16,0.177,17,0.14,18,0.196,19,0.932,20,1.336,21,1.336,22,0.77,23,1.706,24,0.932,25,0.781,26,0.932,27,0.733,28,0.932,29,0.733,30,0.807,31,0.807,32,1.706,33,0.77,34,0.932,35,0.77,36,0.932,37,0.733,38,0.602,39,0.932,40,0.733,41,0.932,42,0.733,43,0.807,44,0.733,45,0.665,46,0.733,47,0.932,48,0.733,49,0.932,50,0.733,51,0.807,52,0.77,53,0.932,54,1.409,55,0.932,56,1.551,57,1.588,58,1.336,59,0.77,60,0.932,61,0.77,62,0.77,63,0.733,64,0.932,65,0.733,66,0.847,67,0.888,68,0.733,69,0.888,70,0.932,71,0.011,72,0.011,100,0.977,101,0.977,187,0.341,188,1.002,190,0.572,194,1.227,196,0.863,197,0.583,198,1.061,205,1.115,212,1.336,213,1.251,300,1.343,371,1.131,374,1.993,376,1.622,378,1.622,382,2.177,384,2.209,385,2.413,390,1.189,391,1.318,392,1.026,393,1.189,433,1.469,437,1.886,467,2.205,728,3.697,750,2.704,781,2.912,843,3.335,970,2.716,971,5.296,972,4.53,973,4.53,974,4.53,975,2.716,976,4.53,977,4.53,978,3.159,979,4.53,980,3.159,981,3.159,982,2.716,983,3.894,984,2.205,985,1.761,986,2.205,987,2.716,988,3.159,989,3.159,990,4.53,991,3.894,992,4.552,993,2.716,994,3.894,995,3.894,996,3.894,997,3.894,998,2.716,999,2.716,1000,2.423]],["title/components/TaskEditorComponent.html",[0,0.229,56,0.992]],["body/components/TaskEditorComponent.html",[0,0.356,1,0.854,2,1.417,3,0.163,4,0.143,5,1.085,6,1.085,7,0.143,9,1.034,10,2.036,11,1.846,13,1.085,14,0.253,15,0.018,16,0.206,17,0.163,18,0.228,19,1.085,20,1.487,21,1.487,22,0.896,23,1.824,24,1.085,25,0.705,26,1.085,27,0.854,28,1.085,29,0.854,30,0.94,31,0.94,32,1.824,33,0.896,34,1.085,35,0.896,36,1.085,37,0.854,38,0.701,39,1.085,40,0.854,41,1.085,42,0.854,43,0.94,44,0.854,45,0.775,46,0.854,47,1.085,48,0.854,49,1.085,50,0.854,51,0.94,52,0.896,53,1.085,54,0.896,55,1.085,56,1.658,57,1.57,58,1.487,59,0.896,60,1.085,61,0.896,62,0.896,63,0.854,64,1.085,65,0.854,66,0.986,67,1.034,68,0.854,69,1.034,70,1.085,71,0.012,72,0.012,187,0.397,188,1.115,190,1.041,194,1.152,197,0.371,205,0.775,212,1.487,300,1.17,323,2.483,371,1.317,374,2.164,376,1.805,378,1.805,382,2.328,434,2.218,450,3.519,467,2.568,635,3.867,708,3.867,750,3.009,781,3.241,903,4.333,985,3.449,1001,4.318,1002,2.822,1003,4.333,1004,4.943,1005,4.333,1006,5.041,1007,3.679,1008,5.041,1009,5.041,1010,4.333]],["title/interfaces/TaskList.html",[261,1.262,420,1.937]],["body/interfaces/TaskList.html",[3,0.238,4,0.208,7,0.208,14,0.268,15,0.018,17,0.238,57,1.499,71,0.016,72,0.016,165,3.725,187,0.577,197,0.692,261,1.823,263,2.799,265,1.639,267,2.025,420,3.355,422,4.099,432,4.97,434,3.133,1011,4.599,1012,4.599,1013,5.351]],["title/components/TaskListComponent.html",[0,0.229,59,0.902]],["body/components/TaskListComponent.html",[0,0.29,1,0.593,2,1.088,3,0.113,4,0.099,5,0.753,6,0.753,7,0.099,9,0.718,10,1.955,11,1.769,13,0.753,14,0.307,15,0.019,16,0.143,17,0.113,18,0.158,19,0.753,20,1.141,21,1.141,22,0.622,23,1.539,24,0.753,25,0.793,26,0.753,27,0.593,28,0.753,29,0.593,30,0.652,31,0.652,32,1.539,33,0.622,34,0.753,35,0.622,36,0.753,37,0.593,38,0.486,39,0.753,40,0.593,41,0.753,42,0.593,43,0.652,44,0.593,45,0.538,46,0.593,47,0.753,48,0.593,49,0.753,50,0.593,51,0.652,52,0.622,53,0.753,54,0.622,55,0.753,56,0.684,57,1.497,58,1.141,59,1.271,60,0.753,61,1.271,62,1.576,63,0.593,64,0.753,65,0.593,66,0.684,67,0.718,68,0.593,69,0.718,70,0.753,71,0.009,72,0.009,100,0.79,101,0.79,165,2.025,187,0.275,188,0.856,190,0.462,194,1.296,196,0.962,197,0.637,198,1.183,205,1.243,212,1.141,213,1.011,287,1.065,300,1.424,371,0.914,374,1.76,376,1.386,378,1.386,382,1.964,384,1.95,385,2.177,390,0.961,391,1.065,392,0.829,393,0.961,420,3.925,433,2.174,437,1.524,455,1.958,465,1.641,466,1.641,476,2.194,490,3.327,575,2.194,576,2.194,578,2.194,579,1.958,580,1.958,728,3.263,750,2.311,752,2.702,780,3.263,781,2.488,831,2.969,843,3.088,975,2.194,982,2.194,983,3.327,984,1.782,985,1.423,986,1.782,987,2.194,991,3.327,992,4.019,993,2.194,994,3.327,995,3.327,996,3.327,997,3.327,998,2.194,999,2.194,1000,1.958,1001,4.603,1014,5.059,1015,2.194,1016,4.676,1017,3.871,1018,3.871,1019,3.871,1020,3.871,1021,3.327,1022,3.871,1023,4.676,1024,3.871,1025,2.553,1026,3.871,1027,2.553,1028,3.871,1029,2.553,1030,3.871,1031,2.553,1032,2.553,1033,3.327,1034,2.553,1035,3.871,1036,2.553,1037,3.327,1038,3.327,1039,2.553,1040,2.969,1041,2.553,1042,2.553,1043,2.194,1044,3.327,1045,2.553,1046,2.553,1047,2.553,1048,2.553,1049,3.871,1050,3.871,1051,2.969,1052,4.676]],["title/components/TaskListEditorComponent.html",[0,0.229,61,0.902]],["body/components/TaskListEditorComponent.html",[0,0.285,1,0.576,2,1.065,3,0.11,4,0.096,5,0.732,6,0.732,7,0.096,9,0.698,10,1.948,11,1.763,13,0.732,14,0.293,15,0.019,16,0.139,17,0.11,18,0.154,19,0.732,20,1.117,21,1.117,22,0.605,23,1.517,24,0.732,25,0.63,26,0.732,27,0.576,28,0.732,29,0.576,30,0.634,31,0.634,32,1.517,33,0.605,34,0.732,35,0.605,36,0.732,37,0.576,38,0.473,39,0.732,40,0.576,41,0.732,42,0.576,43,0.634,44,0.576,45,0.523,46,0.576,47,0.732,48,0.576,49,0.732,50,0.576,51,0.634,52,0.605,53,0.732,54,0.605,55,0.732,56,0.665,57,1.422,58,1.117,59,0.605,60,0.732,61,1.253,62,1.83,63,0.576,64,0.732,65,0.576,66,0.665,67,0.698,68,0.576,69,0.698,70,0.732,71,0.009,72,0.009,100,0.768,101,0.768,116,1.23,120,1.82,121,1.175,129,1.733,187,0.268,188,0.838,190,0.45,194,1.286,196,0.405,197,0.519,198,0.921,205,0.798,212,1.117,213,0.983,214,0.698,217,1.917,257,1.482,265,0.968,267,1.355,287,1.036,299,2.405,300,1.194,317,1.232,369,1.357,371,0.889,374,1.73,376,1.357,378,1.357,380,2.898,381,2.955,382,1.936,384,1.917,385,2.146,389,2.436,390,0.934,391,1.036,392,0.806,393,0.934,420,3.177,433,1.762,434,2.881,465,1.596,466,1.596,668,3.526,670,3.946,671,2.907,672,3.526,673,1.904,674,3.946,676,2.907,680,2.907,681,2.907,684,1.904,686,2.907,687,1.904,691,3.59,703,2.907,704,2.907,705,2.907,706,2.907,707,2.907,709,2.907,750,2.262,752,2.645,780,3.208,781,2.436,831,2.907,895,2.134,985,3.65,1001,4.57,1002,1.904,1003,3.257,1004,3.951,1005,3.257,1010,3.951,1040,3.526,1043,3.951,1053,4.596,1054,3.386,1055,3.79,1056,2.483,1057,2.483,1058,2.483,1059,2.483,1060,2.483,1061,2.483,1062,2.483,1063,2.483,1064,1.904,1065,2.483,1066,2.483,1067,2.483,1068,2.483,1069,3.79,1070,2.483,1071,2.483,1072,2.483,1073,2.483,1074,2.483,1075,2.483,1076,2.483,1077,2.483,1078,2.483,1079,2.483,1080,2.483,1081,2.483]],["title/components/TasksComponent.html",[0,0.229,63,0.859]],["body/components/TasksComponent.html",[0,0.305,1,0.645,2,1.16,3,0.123,4,0.108,5,0.819,6,0.819,7,0.108,9,0.781,10,1.976,11,1.789,13,0.819,14,0.325,15,0.019,16,0.156,17,0.123,18,0.172,19,0.819,20,1.216,21,1.216,22,0.677,23,1.605,24,0.819,25,0.747,26,0.819,27,0.645,28,0.819,29,0.645,30,0.71,31,0.71,32,1.605,33,0.677,34,0.819,35,0.677,36,0.819,37,0.645,38,0.529,39,0.819,40,0.645,41,0.819,42,0.645,43,0.71,44,0.645,45,0.585,46,0.645,47,0.819,48,0.645,49,0.819,50,0.645,51,0.71,52,0.677,53,0.819,54,0.677,55,0.819,56,0.745,57,1.394,58,1.216,59,0.677,60,0.819,61,1.198,62,1.578,63,1.264,64,0.819,65,0.645,66,0.745,67,0.781,68,0.645,69,0.781,70,0.819,71,0.01,72,0.01,100,0.86,101,0.86,120,1.948,165,2.158,187,0.3,188,0.912,190,0.747,194,1.298,196,0.802,197,0.549,198,0.986,205,1.225,212,1.216,214,1.16,217,1.721,265,1.054,287,1.159,299,1.454,300,1.504,317,1.106,369,1.477,371,0.995,374,1.851,376,1.477,378,1.477,380,1.454,381,3.162,382,2.049,384,2.052,385,2.271,389,1.786,390,1.046,391,1.159,392,0.902,393,1.046,394,2.388,411,3.164,420,3.72,433,1.918,465,1.786,466,1.786,556,3.546,573,3.546,691,3.434,843,3.3,901,2.388,984,1.939,985,1.549,986,1.939,1021,3.546,1033,3.546,1037,3.546,1038,2.388,1040,2.131,1044,2.388,1051,3.774,1054,3.397,1064,2.131,1082,2.388,1083,4.92,1084,4.125,1085,5.816,1086,4.679,1087,4.679,1088,4.125,1089,2.779,1090,4.125,1091,2.779,1092,2.779,1093,2.779,1094,4.125,1095,2.779,1096,2.779,1097,2.779,1098,4.125,1099,2.779,1100,2.779,1101,2.779,1102,4.125,1103,2.779,1104,2.779,1105,2.779,1106,2.779,1107,2.779,1108,2.779,1109,4.125]],["title/modules/TasksModule.html",[73,1.629,151,2.064]],["body/modules/TasksModule.html",[3,0.168,4,0.147,7,0.147,14,0.374,15,0.019,16,0.212,17,0.168,18,0.235,46,1.568,54,1.645,57,1.084,59,1.645,61,1.645,62,1.254,63,1.568,68,1.568,71,0.012,72,0.012,75,1.428,76,2.536,82,2.871,83,2.116,84,1.765,86,3.31,87,2.266,88,1.87,89,2.911,90,1.67,91,2.266,99,3.31,100,1.174,101,1.174,102,3.95,103,1.503,104,2.265,108,2.44,120,1.503,136,4.426,151,4.248,165,1.986,250,3.594,251,2.265,256,4.426,257,2.265,408,2.649,843,3.534,984,2.649,985,2.116,986,2.649,1000,2.911,1014,2.911,1054,3.766,1064,2.911,1110,3.262,1111,3.262,1112,3.262,1113,3.262,1114,4.342,1115,3.795,1116,3.262,1117,3.795,1118,3.795,1119,3.795,1120,3.795,1121,3.795,1122,3.795,1123,3.795,1124,3.795,1125,3.795]],["title/modules/TasksRoutingModule.html",[73,1.629,1114,2.38]],["body/modules/TasksRoutingModule.html",[0,0.335,3,0.24,4,0.21,7,0.21,14,0.346,15,0.019,16,0.302,17,0.24,18,0.335,63,1.498,71,0.016,72,0.016,75,2.034,87,2.378,91,2.839,121,1.381,138,3.013,140,4.147,141,4.434,142,2.034,159,3.474,172,3.474,353,3.772,1114,4.147,1116,4.645,1126,5.404]],["title/injectables/TasksService.html",[209,0.946,1054,2.064]],["body/injectables/TasksService.html",[3,0.16,4,0.14,7,0.14,14,0.341,15,0.019,16,0.201,17,0.22,18,0.223,25,0.751,38,0.946,57,1.4,62,1.385,71,0.012,72,0.012,90,1.584,116,1.99,121,1.741,165,2.598,187,0.388,188,1.098,190,0.652,194,1.288,196,0.999,197,0.618,198,1.228,205,1.29,209,1.269,213,1.425,214,1.012,232,3.686,235,1.584,267,1.676,268,3.417,273,2.998,277,2.007,278,2.007,292,1.674,307,3.206,334,2.964,354,1.883,411,2.761,420,3.799,422,3.393,432,4.278,434,2.185,464,3.094,465,2.314,466,2.314,467,2.513,472,4.887,1054,2.769,1086,4.269,1087,5.268,1127,2.761,1128,4.966,1129,4.966,1130,3.094,1131,3.6,1132,4.966,1133,3.6,1134,4.966,1135,3.6,1136,3.6,1137,4.966,1138,3.6,1139,2.513,1140,4.966,1141,4.966,1142,3.6,1143,5.685,1144,3.6,1145,5.685,1146,4.269,1147,3.6,1148,4.966,1149,3.6,1150,4.966,1151,3.6,1152,3.6,1153,3.6,1154,3.6,1155,3.6]],["title/components/UsersComponent.html",[0,0.229,65,0.859]],["body/components/UsersComponent.html",[0,0.386,1,1.002,2,1.577,3,0.192,4,0.167,5,1.273,6,1.273,7,0.167,9,1.214,10,2.065,11,1.873,13,1.654,14,0.216,15,0.018,16,0.242,17,0.192,18,0.267,19,1.273,20,1.654,21,1.654,22,1.052,23,1.945,24,1.273,25,0.763,26,1.273,27,1.002,28,1.273,29,1.002,30,1.103,31,1.103,32,1.945,33,1.052,34,1.273,35,1.052,36,1.273,37,1.002,38,0.823,39,1.273,40,1.002,41,1.273,42,1.002,43,1.103,44,1.002,45,0.909,46,1.002,47,1.273,48,1.002,49,1.273,50,1.002,51,1.103,52,1.052,53,1.273,54,1.052,55,1.273,56,1.157,57,1.312,58,1.654,59,1.052,60,1.273,61,1.052,62,1.052,63,1.002,64,1.273,65,1.531,66,1.67,67,1.214,68,1.002,69,1.214,70,1.273,71,0.014,72,0.014,1156,3.711]],["title/modules/UsersModule.html",[73,1.629,148,2.064]],["body/modules/UsersModule.html",[3,0.217,4,0.19,7,0.19,14,0.363,15,0.019,16,0.274,17,0.217,18,0.303,48,1.68,65,1.68,66,1.311,71,0.015,72,0.015,75,1.841,76,2.991,82,3.385,83,2.727,84,2.275,86,3.903,87,2.672,91,2.672,99,3.903,100,1.513,101,1.513,108,3.145,148,4.195,250,4.238,251,2.92,1157,4.205,1158,4.205,1159,4.205,1160,4.651,1161,4.892,1162,4.205,1163,4.205]],["title/modules/UsersRoutingModule.html",[73,1.629,1160,2.38]],["body/modules/UsersRoutingModule.html",[0,0.388,3,0.229,4,0.2,7,0.2,14,0.361,15,0.019,16,0.288,17,0.229,18,0.319,48,1.454,65,1.454,71,0.015,72,0.015,75,1.937,87,2.265,91,2.757,121,1.315,138,2.87,140,4.027,141,4.341,142,1.937,143,3.74,159,4.027,164,3.309,172,3.309,348,4.424,353,3.593,1160,4.027,1162,4.424,1163,4.424,1164,5.147,1165,5.147]],["title/injectables/UsersService.html",[209,0.946,880,2.584]],["body/injectables/UsersService.html",[3,0.221,4,0.193,7,0.193,12,2.078,14,0.334,15,0.019,16,0.279,17,0.273,18,0.309,25,0.61,38,1.17,71,0.015,72,0.015,90,2.192,116,1.617,121,1.569,187,0.537,188,1.358,190,0.902,194,1.23,196,0.812,197,0.502,198,0.998,205,1.049,209,1.569,211,2.192,213,1.973,268,3.875,277,2.778,278,2.778,292,2.317,307,2.606,315,2.974,317,1.335,354,2.606,880,4.286,1130,4.282,1139,3.477,1146,4.282,1166,3.821,1167,6.949,1168,4.982,1169,4.982,1170,4.982,1171,4.982]],["title/coverage.html",[1172,4.352]],["body/coverage.html",[0,0.452,1,0.653,7,0.109,8,2.419,11,0.686,15,0.019,22,0.686,27,0.653,29,0.653,31,1.064,33,0.686,35,0.686,37,0.653,40,0.653,42,0.653,44,0.653,46,0.653,48,0.653,50,0.653,52,0.686,54,0.686,56,0.754,57,0.593,59,0.686,61,0.686,62,1.014,63,0.653,65,0.653,68,0.653,71,0.01,72,0.01,85,2.907,88,1.386,113,4.989,122,2.159,125,1.965,137,4.202,138,3.054,143,1.68,145,1.569,148,1.569,151,1.569,154,1.569,156,2.322,183,2.419,184,3.195,186,2.419,193,0.959,197,0.284,209,1.619,222,2.419,223,2.159,225,2.419,252,1.965,254,1.965,259,1.965,260,1.965,261,2.159,262,1.569,264,3.49,271,1.569,273,1.239,279,1.569,282,1.569,285,1.569,287,1.174,347,1.965,372,2.419,373,3.522,392,0.914,408,1.965,409,2.419,410,2.419,420,1.473,433,3.614,475,2.419,480,2.159,488,2.419,535,2.677,536,2.419,545,1.965,594,2.419,608,2.419,644,2.419,653,1.809,655,2.419,667,2.419,739,2.419,743,2.159,838,2.419,843,1.473,844,2.159,866,2.419,867,2.419,875,2.419,880,1.965,888,2.419,906,2.419,961,1.965,962,2.907,969,2.419,970,2.419,985,2.322,1001,3.46,1002,3.195,1011,2.419,1012,2.419,1014,2.159,1015,2.419,1054,1.569,1082,2.419,1127,3.195,1139,2.907,1156,2.419,1166,3.195,1172,2.419,1173,2.815,1174,2.815,1175,4.696,1176,7.508,1177,2.419,1178,2.159,1179,7.22,1180,2.419,1181,2.419,1182,2.419,1183,2.419,1184,6.642,1185,4.165,1186,2.815,1187,6.335,1188,4.165,1189,4.957,1190,2.419,1191,2.419,1192,5.478,1193,2.815,1194,2.815,1195,4.957,1196,2.815,1197,2.419,1198,3.58,1199,2.419,1200,2.419,1201,3.58,1202,2.419,1203,2.419,1204,4.261,1205,2.419,1206,2.419,1207,2.419,1208,2.815,1209,2.815]],["title/dependencies.html",[76,2.195,1210,2.654]],["body/dependencies.html",[15,0.019,16,0.27,71,0.015,72,0.015,76,2.372,88,2.962,93,4.576,94,4.197,97,2.685,98,2.685,100,1.49,101,1.49,103,2.596,104,2.874,106,2.962,107,2.685,142,1.812,179,3.361,181,4.139,235,2.119,251,2.874,257,2.874,390,2.263,391,2.009,392,2.128,393,2.263,484,3.694,601,4.139,603,4.139,793,4.139,1211,4.816,1212,7.455,1213,4.816,1214,4.816,1215,4.816,1216,4.816,1217,4.816,1218,4.816,1219,6.013,1220,4.816,1221,4.816,1222,4.816,1223,4.816,1224,4.816,1225,4.816,1226,4.816,1227,4.816,1228,4.816,1229,4.816,1230,4.816,1231,4.816,1232,4.816]],["title/miscellaneous/functions.html",[920,3.418,1233,1.843]],["body/miscellaneous/functions.html",[10,1.621,11,1.603,15,0.018,25,0.885,71,0.015,72,0.015,85,3.391,88,3.243,114,4.177,115,3.67,125,4.22,187,0.524,196,1.123,197,0.664,198,1.38,205,1.273,267,2.13,300,1.128,317,1.621,920,3.727,1175,5.284,1177,5.658,1178,5.05,1200,4.177,1204,4.177,1205,5.197,1206,5.197,1207,5.197,1233,2.9,1234,4.859,1235,6.583,1236,4.177,1237,4.859,1238,4.859,1239,6.888,1240,6.047,1241,4.859,1242,4.859,1243,6.047,1244,4.859]],["title/index.html",[187,0.333,629,2.654,1245,3.087]],["body/index.html",[0,0.402,4,0.183,11,1.148,15,0.014,25,0.577,71,0.014,72,0.014,84,2.191,103,2.881,179,4.14,212,1.389,287,1.965,462,4.531,540,3.288,635,4.979,734,3.614,1051,3.614,1178,5.386,1210,4.049,1246,4.711,1247,5.931,1248,4.711,1249,6.491,1250,4.711,1251,4.711,1252,4.711,1253,4.711,1254,4.711,1255,4.711,1256,4.711,1257,4.711,1258,4.711,1259,4.711,1260,4.711,1261,4.711,1262,6.491,1263,4.711,1264,6.813,1265,4.711,1266,4.711,1267,4.711,1268,4.711,1269,5.931,1270,5.931,1271,6.813,1272,4.711,1273,5.931,1274,5.931,1275,4.711,1276,7.168,1277,4.711,1278,4.711,1279,4.711,1280,5.931,1281,4.711,1282,4.711,1283,4.711,1284,4.711,1285,6.491,1286,4.711,1287,4.711,1288,4.711,1289,3.614,1290,4.711,1291,4.711]],["title/modules.html",[75,1.905]],["body/modules.html",[15,0.015,71,0.015,72,0.015,74,3.406,75,1.994,81,3.406,94,5.148,145,2.954,148,2.954,151,2.954,154,2.954,173,3.698,248,3.406,392,2.394,589,3.406,1114,3.406,1160,3.406,1292,7.375,1293,7.648,1294,7.261,1295,7.261]],["title/overview.html",[1289,3.883]],["body/overview.html",[1,1.65,2,1.056,15,0.019,22,0.915,27,1.349,29,1.349,33,1.416,35,1.416,37,1.349,40,1.349,42,1.349,44,1.349,46,1.349,48,1.349,50,1.349,52,1.416,54,1.416,59,1.416,61,1.416,63,1.349,65,1.349,68,1.349,71,0.012,72,0.012,74,4.76,75,1.413,76,2.518,77,3.229,78,3.229,79,3.229,80,3.229,81,3.736,82,2.85,83,2.094,84,1.747,145,4.167,148,3.909,151,4.223,154,3.754,173,4.556,174,3.229,185,2.881,245,3.229,246,3.229,247,3.229,248,3.736,263,1.965,354,1.965,437,2.242,440,3.229,459,4.395,586,3.229,587,3.229,588,3.229,589,3.736,843,3.041,1054,3.241,1110,3.229,1111,3.229,1112,3.229,1113,3.229,1114,3.736,1157,3.229,1158,3.229,1159,3.229,1160,3.736,1289,2.881,1296,3.756,1297,3.756]],["title/miscellaneous/typealiases.html",[1233,1.843,1298,4.455]],["body/miscellaneous/typealiases.html",[15,0.018,71,0.016,72,0.016,187,0.607,197,0.567,349,3.618,351,3.929,743,4.317,758,5.069,760,5.069,765,5.681,769,5.681,844,4.317,912,5.069,925,3.929,962,3.929,1233,3.36,1299,5.628,1300,6.609,1301,4.838,1302,6.609]],["title/miscellaneous/variables.html",[1233,1.843,1303,3.83]],["body/miscellaneous/variables.html",[12,1.059,15,0.019,71,0.009,72,0.009,85,1.771,95,2.182,105,1.415,116,0.824,120,1.845,122,2.956,123,1.947,124,2.182,125,1.771,126,2.182,137,1.947,138,3.119,145,2.149,146,2.182,147,2.182,148,2.149,149,2.182,150,2.182,151,2.149,152,2.182,153,2.182,154,2.149,155,2.182,156,1.415,157,2.182,158,2.182,187,0.274,197,0.692,211,1.117,217,1.943,267,1.374,271,2.149,287,1.059,292,2.601,299,1.328,307,1.328,317,1.876,349,2.477,351,2.69,369,2.505,392,1.251,405,1.947,434,2.05,480,2.956,485,1.947,584,2.182,653,2.477,712,1.947,925,2.69,961,1.771,962,1.771,963,4.472,964,4.005,965,2.182,966,2.182,967,2.182,968,2.182,1127,1.947,1139,4.111,1166,1.947,1175,3.99,1180,3.313,1181,4.005,1182,3.313,1183,2.182,1190,2.182,1191,3.313,1197,2.182,1198,4.472,1199,2.182,1201,2.182,1202,3.313,1203,3.313,1233,1.515,1236,2.182,1301,2.182,1303,2.182,1304,2.538,1305,2.538,1306,2.538,1307,5.202,1308,3.854,1309,2.538,1310,2.538,1311,2.538,1312,2.538,1313,2.538,1314,2.538,1315,2.538,1316,2.538,1317,2.538,1318,2.538,1319,2.538,1320,2.538,1321,4.659,1322,3.854,1323,2.538,1324,2.538,1325,2.538,1326,3.854,1327,3.854,1328,2.538,1329,2.538,1330,2.538,1331,2.538,1332,2.538,1333,2.538,1334,2.538,1335,2.538,1336,2.538,1337,2.538,1338,2.538,1339,2.538,1340,2.538,1341,2.538,1342,2.538,1343,2.538,1344,2.538,1345,2.538,1346,2.538,1347,2.538,1348,2.538,1349,2.538,1350,2.538,1351,2.538,1352,2.538,1353,2.538,1354,2.538,1355,2.538,1356,2.538,1357,2.538,1358,2.538,1359,2.538,1360,2.538,1361,2.538,1362,2.538,1363,3.854,1364,2.538,1365,2.538,1366,2.538,1367,2.538,1368,2.538,1369,2.538,1370,2.538,1371,2.538,1372,2.538,1373,2.538,1374,2.538,1375,2.538,1376,2.538,1377,2.538,1378,2.538,1379,2.538,1380,2.538,1381,2.538,1382,2.538,1383,2.538,1384,2.538,1385,2.538,1386,2.538,1387,2.538,1388,2.538,1389,2.538,1390,2.538,1391,2.538,1392,2.538,1393,2.538,1394,2.538,1395,2.538,1396,2.538,1397,2.538,1398,2.538,1399,2.538,1400,2.538,1401,2.538,1402,2.538,1403,2.538,1404,2.538,1405,2.538,1406,2.538,1407,2.538,1408,2.538,1409,2.538,1410,2.538,1411,2.538,1412,2.538,1413,2.538,1414,2.538,1415,2.538,1416,2.538,1417,2.538,1418,2.538,1419,2.538,1420,2.538,1421,2.538,1422,2.538,1423,2.538,1424,2.538,1425,3.854,1426,2.538,1427,2.538,1428,2.538,1429,2.538,1430,2.538,1431,2.538,1432,2.538,1433,2.538,1434,2.538,1435,2.538,1436,2.538,1437,2.538,1438,2.538,1439,2.538,1440,2.538,1441,2.538,1442,2.538,1443,2.538,1444,2.538,1445,2.538,1446,2.538,1447,2.538,1448,2.538,1449,2.538,1450,2.538,1451,2.538,1452,2.538,1453,2.538,1454,2.538,1455,2.538,1456,2.538,1457,2.538,1458,2.538,1459,2.538,1460,2.538,1461,2.538,1462,2.538,1463,2.538,1464,2.538,1465,2.538,1466,2.538,1467,2.538,1468,2.538,1469,2.538,1470,2.538,1471,2.538,1472,2.538,1473,2.538,1474,2.538,1475,2.538,1476,2.538,1477,2.538,1478,2.538,1479,2.538,1480,2.538,1481,2.538,1482,2.538,1483,2.538,1484,2.538,1485,2.538,1486,2.538,1487,2.538,1488,2.538,1489,2.538,1490,2.538,1491,2.538,1492,2.538,1493,2.538,1494,2.538,1495,2.538,1496,2.538,1497,2.538,1498,2.538,1499,2.538,1500,2.538,1501,2.538,1502,2.538,1503,2.538,1504,2.538,1505,2.538,1506,2.538,1507,2.538,1508,2.538,1509,2.538,1510,2.538,1511,2.538,1512,2.538,1513,2.538,1514,2.538,1515,2.538,1516,2.538,1517,2.538,1518,2.538,1519,2.538,1520,2.538,1521,2.538,1522,2.538,1523,2.538,1524,2.538,1525,2.538,1526,2.538,1527,2.538,1528,2.538,1529,2.538,1530,2.538,1531,2.538,1532,2.538,1533,2.538,1534,2.538,1535,2.538,1536,2.538,1537,2.538,1538,2.538,1539,2.538,1540,2.538,1541,2.538,1542,2.538,1543,2.538,1544,2.538,1545,2.538,1546,2.538,1547,2.538,1548,2.538,1549,2.538,1550,2.538,1551,2.538,1552,2.538]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":433,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["0.1754",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3332",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.33s",{"_index":997,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["0.6852",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.719c",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.754",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.85",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["0.9",{"_index":585,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["0.9.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["0.9988",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["00acee",{"_index":922,"title":{},"body":{"components/SocialComponent.html":{}}}],["00aff0",{"_index":944,"title":{},"body":{"components/SocialComponent.html":{}}}],["08b2f5",{"_index":924,"title":{},"body":{"components/SocialComponent.html":{}}}],["0e76a8",{"_index":937,"title":{},"body":{"components/SocialComponent.html":{}}}],["0s",{"_index":995,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["1",{"_index":437,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"overview.html":{}}}],["1.006",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.12.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["1.12.1",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["1.2.35",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.287",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.416",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.43",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.939",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.09",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.16",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.31",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.56",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.74",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":456,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["1000",{"_index":1125,"title":{},"body":{"modules/TasksModule.html":{}}}],["101.9",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["102.1",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10rem",{"_index":583,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["11",{"_index":1296,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["11.05",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.13",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.17",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.45",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.56",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.68",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.82",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112.4",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["114.3",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["118",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["119.4",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":642,"title":{},"body":{"components/IndexComponent.html":{}}}],["12.1.1",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["12.15",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2.0",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["12.2.10",{"_index":1251,"title":{},"body":{"index.html":{}}}],["12.27",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.31",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.36",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.53",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.65",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.72",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.84",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["121.8",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124.1",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12e",{"_index":794,"title":{},"body":{"components/ModalComponent.html":{}}}],["13.05",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.66",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.94",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["131.2",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138.8",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.09",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.28",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.87",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["148.9",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.05",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.14",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.15",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.42",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.46",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.63",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.46",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.94",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.06",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.41",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.54",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.79",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["171515",{"_index":940,"title":{},"body":{"components/SocialComponent.html":{}}}],["18.03",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.22",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.27",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.28",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.45",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.49",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.81",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.92",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["181.5",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":1297,"title":{},"body":{"overview.html":{}}}],["19.01",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.24",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.33",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.39",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.46",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.47",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.74",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.79",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":440,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["2.139",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.235",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["2.519",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.552",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.561",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.931",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.28",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.75",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.83",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":455,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["200px",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["21.13",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.44",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.62",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.18",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.35",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.48",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.63",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.83",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.49",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.18",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.7",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.37",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.53",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.68",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.75",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1008,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["25a0ca",{"_index":948,"title":{},"body":{"components/SocialComponent.html":{}}}],["26.13",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.14",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.42",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.71",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.23",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.7",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.75",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.04",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.36",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.58",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.8",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["3",{"_index":443,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["3.334",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.345",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.394",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.495",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.74",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.865",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.937zm36.82",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.982",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.1",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.13",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.46",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.92",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":454,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["31.15",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.26",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.38",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.54z",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.73",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.15",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.29",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.32",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.65",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350px",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["37.7",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.96",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.36",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b5998",{"_index":926,"title":{},"body":{"components/SocialComponent.html":{}}}],["3d9ae8",{"_index":946,"title":{},"body":{"components/SocialComponent.html":{}}}],["3f729b",{"_index":954,"title":{},"body":{"components/SocialComponent.html":{}}}],["3px",{"_index":736,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["4",{"_index":446,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["4.085",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.086",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.15.2",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["4.435",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.617",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.725",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.38",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.65",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.67",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.86",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.9",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4000",{"_index":453,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["404",{"_index":592,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["41.57",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.67",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.38",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.43",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.49",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.63",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.85",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.34",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.53",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.69",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44.54",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["448",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.79",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.82",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.45",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.85",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.41",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.39",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.64",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.85",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.88",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.94",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.77",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4966a5",{"_index":928,"title":{},"body":{"components/SocialComponent.html":{}}}],["4d7198",{"_index":930,"title":{},"body":{"components/SocialComponent.html":{}}}],["5",{"_index":457,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["5.0.2",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["5.15.3",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["5.288",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.656",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.863",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":551,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["51",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.71",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.33",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53.08",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.73",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.99",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.36",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.67",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["577ea7",{"_index":932,"title":{},"body":{"components/SocialComponent.html":{}}}],["6",{"_index":458,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["6.202",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.288",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.539",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["6.692",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6c2.612",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.832",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.42",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.63",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.08",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.21",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67.36",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":459,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["7.03",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.155",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.207",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.383",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.91",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.939",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.16",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73.29",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.04",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.45",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.35",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.66",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":643,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["8.13",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.823",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.849",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.93",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.69",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.077",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.903",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.918",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.929",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.62",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.79",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.25",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.06",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.61",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__non_webpack_require__",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["__non_webpack_require__.main",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_route",{"_index":872,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["_state",{"_index":870,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["a4c639",{"_index":942,"title":{},"body":{"components/SocialComponent.html":{}}}],["abstractcontrol",{"_index":686,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["access_token",{"_index":266,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["accessors",{"_index":671,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["account",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":383,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["activemodal",{"_index":746,"title":{},"body":{"components/ModalComponent.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":1051,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["address",{"_index":902,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["addtask",{"_index":1018,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtask(tasklist",{"_index":1026,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtasklist",{"_index":1086,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["addtasklist(title",{"_index":1132,"title":{},"body":{"injectables/TasksService.html":{}}}],["again",{"_index":407,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["aliases",{"_index":1299,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alpha",{"_index":526,"title":{},"body":{"components/HeaderComponent.html":{}}}],["anchorscrolling",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["android",{"_index":941,"title":{},"body":{"components/SocialComponent.html":{}}}],["angular",{"_index":462,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"index.html":{}}}],["angular/advance",{"_index":792,"title":{},"body":{"components/ModalComponent.html":{}}}],["angular/animations",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":292,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["api/auth/${type",{"_index":916,"title":{},"body":{"components/SocialComponent.html":{}}}],["api_prefix",{"_index":271,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibase",{"_index":1122,"title":{},"body":{"modules/TasksModule.html":{}}}],["apiprefix",{"_index":1139,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiprefix}/tasks/list",{"_index":1140,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${id",{"_index":1151,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${tasklist.id",{"_index":1153,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/users/@me",{"_index":1170,"title":{},"body":{"injectables/UsersService.html":{}}}],["apis/common",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["apis/universal",{"_index":181,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.module",{"_index":182,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/api",{"_index":272,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["app/auth/auth.guard",{"_index":1165,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["app/auth/auth.service",{"_index":508,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["app/logger/logger",{"_index":274,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["apple",{"_index":949,"title":{},"body":{"components/SocialComponent.html":{}}}],["application",{"_index":639,"title":{},"body":{"components/IndexComponent.html":{}}}],["applications",{"_index":652,"title":{},"body":{"components/IndexComponent.html":{}}}],["appmodule",{"_index":74,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":173,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":659,"title":{},"body":{"injectables/Logger.html":{}}}],["array.isarray(error?.message",{"_index":699,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["artifacts",{"_index":1265,"title":{},"body":{"index.html":{}}}],["auth",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{}}}],["auth'},{'name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.guard",{"_index":346,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.guard.ts",{"_index":867,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":868,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":871,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:20",{"_index":873,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.service",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["auth/auth.guard",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth0/angular",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["authcomponent",{"_index":27,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":143,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":223,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authresponse",{"_index":262,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["authroutingmodule",{"_index":248,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":193,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"coverage.html":{}}}],["authstatus",{"_index":289,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authstatussource",{"_index":286,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authsubscription",{"_index":493,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["auto",{"_index":534,"title":{},"body":{"components/HeaderComponent.html":{}}}],["automatically",{"_index":1257,"title":{},"body":{"index.html":{}}}],["available",{"_index":1295,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":651,"title":{},"body":{"components/IndexComponent.html":{}}}],["back",{"_index":573,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["background",{"_index":579,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["bearer",{"_index":242,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":276,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["behaviorsubject(false",{"_index":288,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["beta.2",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["bg",{"_index":577,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["bindinputs",{"_index":747,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindinputs(componentinstance",{"_index":763,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs",{"_index":748,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs(componentinstance",{"_index":768,"title":{},"body":{"components/ModalComponent.html":{}}}],["block",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["boolean",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap/ng",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["bootstrap/scss/functions",{"_index":575,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["bootstrap/scss/variables",{"_index":576,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["border",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["bottom",{"_index":738,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["brands",{"_index":484,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/SocialService.html":{},"dependencies.html":{}}}],["browse",{"_index":1293,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":812,"title":{},"body":{"components/ModalComponent.html":{}}}],["build",{"_index":1264,"title":{},"body":{"index.html":{}}}],["button",{"_index":991,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["c4302b",{"_index":939,"title":{},"body":{"components/SocialComponent.html":{}}}],["c8232c",{"_index":956,"title":{},"body":{"components/SocialComponent.html":{}}}],["calmness",{"_index":628,"title":{},"body":{"components/IndexComponent.html":{}}}],["canactivate",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"modules/UsersRoutingModule.html":{}}}],["canactivate(_route",{"_index":869,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["canactivate(route",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivatechild",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["canactivatechild(route",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["capabilities",{"_index":1283,"title":{},"body":{"index.html":{}}}],["card",{"_index":1052,"title":{},"body":{"components/TaskListComponent.html":{}}}],["catcherror(error",{"_index":1150,"title":{},"body":{"injectables/TasksService.html":{}}}],["cdcdcd",{"_index":950,"title":{},"body":{"components/SocialComponent.html":{}}}],["centered",{"_index":861,"title":{},"body":{"injectables/ModalService.html":{}}}],["change",{"_index":1259,"title":{},"body":{"index.html":{}}}],["characters",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["check",{"_index":1288,"title":{},"body":{"index.html":{}}}],["children",{"_index":348,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["choice",{"_index":1279,"title":{},"body":{"index.html":{}}}],["clarity",{"_index":627,"title":{},"body":{"components/IndexComponent.html":{}}}],["class",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["class=\"text",{"_index":703,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cli",{"_index":1249,"title":{},"body":{"index.html":{}}}],["client",{"_index":1246,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":238,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["closeall",{"_index":845,"title":{},"body":{"injectables/ModalService.html":{}}}],["closed)=\"errors",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":174,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":175,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule",{"_index":586,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_declarations",{"_index":588,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_imports",{"_index":587,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1110,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":1113,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1111,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":1112,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1157,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1159,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1158,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":540,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"index.html":{}}}],["collapsed",{"_index":494,"title":{},"body":{"components/HeaderComponent.html":{}}}],["color",{"_index":580,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["command",{"_index":1280,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["compiler",{"_index":811,"title":{},"body":{"components/ModalComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["componentfactory",{"_index":779,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.inputs",{"_index":807,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.outputs",{"_index":809,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['inputs",{"_index":785,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['outputs",{"_index":786,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactoryresolver",{"_index":755,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfixture",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componentinputs",{"_index":765,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentinputs.foreach",{"_index":819,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinputs.some",{"_index":814,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance",{"_index":767,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance[propname",{"_index":822,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs",{"_index":769,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentoutputs.foreach",{"_index":824,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs.some",{"_index":829,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentref",{"_index":803,"title":{},"body":{"components/ModalComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":751,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["connect",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["connect(type",{"_index":329,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["connectaccountformcomponent",{"_index":29,"title":{"components/ConnectAccountFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["console.debug(usersservice.name",{"_index":1171,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error('adding",{"_index":1106,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.error('failed",{"_index":1078,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error('saved",{"_index":1077,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error(...args",{"_index":666,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log('add",{"_index":515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('adding",{"_index":1104,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log('deleted",{"_index":1047,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('edited",{"_index":1042,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('modal",{"_index":787,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log('remove",{"_index":523,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('saved",{"_index":1075,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.log('update",{"_index":518,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('user",{"_index":899,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["console.log(...args",{"_index":664,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log(`binding",{"_index":805,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log(error",{"_index":901,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TasksComponent.html":{}}}],["console.warn(...args",{"_index":665,"title":{},"body":{"injectables/Logger.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(@optional",{"_index":604,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(activemodal",{"_index":753,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(api",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":498,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LogoutFormComponent.html":{},"components/SocialComponent.html":{}}}],["constructor(fb",{"_index":673,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["constructor(http",{"_index":1130,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(httpstatus",{"_index":544,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["constructor(library",{"_index":481,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(logger",{"_index":416,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["constructor(modalservice",{"_index":975,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["constructor(ngbmodalservice",{"_index":846,"title":{},"body":{"injectables/ModalService.html":{}}}],["constructor(private",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LogoutFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":842,"title":{},"body":{"directives/ModalDirective.html":{}}}],["constructor(res",{"_index":597,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(router",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"guards/NoAuthGuard.html":{}}}],["constructor(tasksservice",{"_index":1089,"title":{},"body":{"components/TasksComponent.html":{}}}],["constructor(usersservice",{"_index":879,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(viewcontainerref",{"_index":839,"title":{},"body":{"directives/ModalDirective.html":{}}}],["context",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["control.value",{"_index":1069,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["control:focus",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["core",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1172,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["createdb",{"_index":412,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["createddate",{"_index":452,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["data",{"_index":350,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["data).pipe",{"_index":310,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["data.code",{"_index":563,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["data.message",{"_index":565,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["dataencapsulation",{"_index":1124,"title":{},"body":{"modules/TasksModule.html":{}}}],["db4a39",{"_index":933,"title":{},"body":{"components/SocialComponent.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["decorators",{"_index":776,"title":{},"body":{"components/ModalComponent.html":{}}}],["default",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["delay",{"_index":1000,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["delete",{"_index":1045,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetask",{"_index":973,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetask(task",{"_index":977,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetasklist",{"_index":1019,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetasklist(tasklist",{"_index":1028,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dependencies",{"_index":76,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":450,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{}}}],["dev",{"_index":1254,"title":{},"body":{"index.html":{}}}],["develop",{"_index":650,"title":{},"body":{"components/IndexComponent.html":{}}}],["developed",{"_index":640,"title":{},"body":{"components/IndexComponent.html":{}}}],["development",{"_index":1252,"title":{},"body":{"index.html":{}}}],["device",{"_index":634,"title":{},"body":{"components/IndexComponent.html":{}}}],["directive",{"_index":22,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1263,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1268,"title":{},"body":{"index.html":{}}}],["disable",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["display",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["dist",{"_index":1267,"title":{},"body":{"index.html":{}}}],["document.referrer",{"_index":568,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["documentation",{"_index":644,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["dribbble",{"_index":951,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropbox",{"_index":945,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropdown",{"_index":530,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dynamic",{"_index":793,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["e",{"_index":858,"title":{},"body":{"injectables/ModalService.html":{}}}],["e2e",{"_index":1277,"title":{},"body":{"index.html":{}}}],["e95343",{"_index":935,"title":{},"body":{"components/SocialComponent.html":{}}}],["ea4c89",{"_index":952,"title":{},"body":{"components/SocialComponent.html":{}}}],["edit",{"_index":1039,"title":{},"body":{"components/TaskListComponent.html":{}}}],["editor",{"_index":1003,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["editor.component",{"_index":986,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["editor.component.html",{"_index":1005,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.scss",{"_index":1004,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.ts",{"_index":1002,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:10",{"_index":1006,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1007,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":1056,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":1057,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1061,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1060,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1055,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":1058,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":1062,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1059,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor/task",{"_index":985,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["edittask",{"_index":974,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittask(task",{"_index":979,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittasklist",{"_index":1020,"title":{},"body":{"components/TaskListComponent.html":{}}}],["edittasklist(tasklist",{"_index":1030,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ef8236",{"_index":958,"title":{},"body":{"components/SocialComponent.html":{}}}],["element",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":284,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["enabled",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1276,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":602,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["environment",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiprefix",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":380,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["error(...args",{"_index":657,"title":{},"body":{"injectables/Logger.html":{}}}],["error(`output",{"_index":826,"title":{},"body":{"components/ModalComponent.html":{}}}],["error.message",{"_index":701,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["error?.message",{"_index":404,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["errors",{"_index":668,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["eslint",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["event",{"_index":857,"title":{},"body":{"injectables/ModalService.html":{}}}],["eventemitter",{"_index":780,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["events",{"_index":328,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["execute",{"_index":1273,"title":{},"body":{"index.html":{}}}],["existing",{"_index":905,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["export",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["express",{"_index":603,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["express.express",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":283,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{}}}],["f",{"_index":672,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["faangular",{"_index":479,"title":{},"body":{"components/FooterComponent.html":{}}}],["faarrowleft",{"_index":556,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["fac",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facebook",{"_index":925,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facebook:hover",{"_index":927,"title":{},"body":{"components/SocialComponent.html":{}}}],["facheck",{"_index":509,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facodebranch",{"_index":617,"title":{},"body":{"components/IndexComponent.html":{}}}],["factory",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facubes",{"_index":618,"title":{},"body":{"components/IndexComponent.html":{}}}],["fafacebookf",{"_index":966,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fagoogle",{"_index":967,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fahome",{"_index":557,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["faiconlibrary",{"_index":385,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["failed",{"_index":702,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faketasksservice",{"_index":408,"title":{"injectables/FakeTasksService.html":{}},"body":{"injectables/FakeTasksService.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["false",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["fanestjs",{"_index":480,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fapencilalt",{"_index":982,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["faplus",{"_index":1037,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["fasave",{"_index":1063,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["fasigninalt",{"_index":510,"title":{},"body":{"components/HeaderComponent.html":{}}}],["faspinner",{"_index":389,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["fasquare",{"_index":511,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faterminal",{"_index":619,"title":{},"body":{"components/IndexComponent.html":{}}}],["fatrash",{"_index":983,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["fauser",{"_index":512,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{}}}],["fauserplus",{"_index":513,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignUpFormComponent.html":{}}}],["favk",{"_index":968,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":676,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["ff0084",{"_index":960,"title":{},"body":{"components/SocialComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1260,"title":{},"body":{"index.html":{}}}],["fillinput",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fillinput(fixture",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"index.html":{}}}],["fixme",{"_index":312,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["fixture",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flickr",{"_index":959,"title":{},"body":{"components/SocialComponent.html":{}}}],["floating",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["focus",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["font",{"_index":581,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["fontawesome",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["footer",{"_index":476,"title":{},"body":{"components/FooterComponent.html":{},"components/TaskListComponent.html":{}}}],["footer'},{'name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":478,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":477,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":33,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":375,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form'},{'name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["form.component",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["form.component.html",{"_index":379,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.scss",{"_index":377,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts",{"_index":373,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":741,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form.component.ts:13",{"_index":388,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:14",{"_index":894,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:15",{"_index":386,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":683,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":892,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:22",{"_index":679,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":891,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:24",{"_index":675,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:25",{"_index":890,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:26",{"_index":387,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:37",{"_index":677,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:44",{"_index":685,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:48",{"_index":678,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:9",{"_index":740,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form/connect",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["form/login",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/logout",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["form/signup",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":674,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["fortawesome/angular",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":390,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["found",{"_index":593,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["foursquare",{"_index":947,"title":{},"body":{"components/SocialComponent.html":{}}}],["free",{"_index":623,"title":{},"body":{"components/IndexComponent.html":{}}}],["full",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["function",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["functions",{"_index":920,"title":{"miscellaneous/functions.html":{}},"body":{"components/SocialComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1284,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1262,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1248,"title":{},"body":{"index.html":{}}}],["genid",{"_index":413,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["genid(tasks",{"_index":419,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["get(request",{"_index":423,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["getauthurl",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthurl(type",{"_index":324,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getelement",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getelement(fixture",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getengine",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getf",{"_index":684,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["getname",{"_index":343,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getprofile",{"_index":1167,"title":{},"body":{"injectables/UsersService.html":{}}}],["getpropertydescriptor",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpropertydescriptor(spyobj",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettasklist",{"_index":1128,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklist(id",{"_index":1134,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklists",{"_index":1087,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["getting",{"_index":629,"title":{"index.html":{}},"body":{"components/IndexComponent.html":{}}}],["getusername",{"_index":339,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["github",{"_index":648,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{}}}],["go",{"_index":1287,"title":{},"body":{"index.html":{}}}],["goback",{"_index":543,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["google",{"_index":349,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["google:hover",{"_index":934,"title":{},"body":{"components/SocialComponent.html":{}}}],["graph",{"_index":1294,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":578,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["guard",{"_index":184,"title":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{},"overview.html":{}}}],["handler",{"_index":833,"title":{},"body":{"components/ModalComponent.html":{}}}],["handler(event",{"_index":837,"title":{},"body":{"components/ModalComponent.html":{}}}],["head",{"_index":631,"title":{},"body":{"components/IndexComponent.html":{}}}],["header",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskListComponent.html":{}}}],["header'},{'name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.html",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":35,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":240,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["height",{"_index":584,"title":{},"body":{"components/HttpStatusComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1285,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":993,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["homepage",{"_index":574,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["hosted",{"_index":647,"title":{},"body":{"components/IndexComponent.html":{}}}],["hover",{"_index":998,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":1256,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":268,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["httpclientinmemorywebapimodule.forfeature",{"_index":1121,"title":{},"body":{"modules/TasksModule.html":{}}}],["httpclientmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["httpevent",{"_index":233,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":229,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":234,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpparams",{"_index":269,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httpparams().appendall(parameters",{"_index":332,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httprequest",{"_index":228,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://dev.to/this",{"_index":791,"title":{},"body":{"components/ModalComponent.html":{}}}],["httpstatus",{"_index":548,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["httpstatuscomponent",{"_index":37,"title":{"components/HttpStatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["httpstatusmodule",{"_index":154,"title":{"modules/HttpStatusModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HttpStatusModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["httpstatusroutingmodule",{"_index":589,"title":{"modules/HttpStatusRoutingModule.html":{}},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["httpstatusservice",{"_index":545,"title":{"injectables/HttpStatusService.html":{}},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["icon",{"_index":963,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":965,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconprefix",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icons",{"_index":393,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["id",{"_index":432,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":236,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implements",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["import",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["import('./auth/auth.module').then((m",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./http",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./tasks/tasks.module').then((m",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./users/users.module').then((m",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["index",{"_index":187,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["index.component.html",{"_index":610,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.scss",{"_index":609,"title":{},"body":{"components/IndexComponent.html":{}}}],["index/index.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["indexcomponent",{"_index":40,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["inherit",{"_index":999,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["initialize",{"_index":749,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialize(title",{"_index":771,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialnavigation",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["inject",{"_index":270,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(api_prefix",{"_index":291,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(local_storage",{"_index":293,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(response",{"_index":605,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["injectable",{"_index":209,"title":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken('prefix",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inmemorydbservice",{"_index":461,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["input",{"_index":781,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["inputs",{"_index":750,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["instagram",{"_index":953,"title":{},"body":{"components/SocialComponent.html":{}}}],["instance",{"_index":827,"title":{},"body":{"components/ModalComponent.html":{}}}],["instanceof",{"_index":825,"title":{},"body":{"components/ModalComponent.html":{}}}],["intercept",{"_index":226,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":227,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":222,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":224,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":261,"title":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"coverage.html":{}}}],["interfaces",{"_index":263,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"overview.html":{}}}],["internal",{"_index":554,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["invalid",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["isauthorized",{"_index":495,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["isbackavailable",{"_index":541,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isdone",{"_index":451,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["isenabled",{"_index":964,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["isloggedout",{"_index":338,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{}}}],["isplatformbrowser(this.platformid",{"_index":566,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":569,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isready",{"_index":381,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["jwt",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwthelperservice",{"_index":275,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["jwtmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtoptionsfactory",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsfactory(storage",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsprovider",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":285,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["jwtservice",{"_index":295,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["karma",{"_index":1275,"title":{},"body":{"index.html":{}}}],["key",{"_index":895,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["keyof",{"_index":823,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["l",{"_index":1108,"title":{},"body":{"components/TasksComponent.html":{}}}],["label",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["last",{"_index":737,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["launch",{"_index":636,"title":{},"body":{"components/IndexComponent.html":{}}}],["layout",{"_index":1099,"title":{},"body":{"components/TasksComponent.html":{}}}],["left",{"_index":533,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["legend",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["library",{"_index":384,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(faangular",{"_index":486,"title":{},"body":{"components/FooterComponent.html":{}}}],["library.addicons(faarrowleft",{"_index":559,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["library.addicons(facubes",{"_index":620,"title":{},"body":{"components/IndexComponent.html":{}}}],["library.addicons(fapencilalt",{"_index":987,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["library.addicons(fasave",{"_index":1065,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["library.addicons(faspinner",{"_index":394,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(fasquare",{"_index":514,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["ligatures",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{}}}],["linear",{"_index":996,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["linkedin",{"_index":936,"title":{},"body":{"components/SocialComponent.html":{}}}],["list",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["list.component",{"_index":1117,"title":{},"body":{"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1017,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1016,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1015,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":1025,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:16",{"_index":1024,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:22",{"_index":1032,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:24",{"_index":1031,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:35",{"_index":1036,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:41",{"_index":1029,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:54",{"_index":1034,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:60",{"_index":1027,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.id",{"_index":472,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["list.model",{"_index":466,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["list.model.ts",{"_index":1012,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["list.title",{"_index":1145,"title":{},"body":{"injectables/TasksService.html":{}}}],["list/task",{"_index":1014,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["lists",{"_index":411,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["lists.length",{"_index":1149,"title":{},"body":{"injectables/TasksService.html":{}}}],["literal",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["local_storage",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":294,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["localstorage.getitem('id_token",{"_index":237,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["location",{"_index":546,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["log",{"_index":528,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["log(...args",{"_index":660,"title":{},"body":{"injectables/Logger.html":{}}}],["logged",{"_index":696,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logger",{"_index":273,"title":{"injectables/Logger.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["logger/logger",{"_index":464,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["login",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":306,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["login(type",{"_index":911,"title":{},"body":{"components/SocialComponent.html":{}}}],["logindto",{"_index":279,"title":{"interfaces/LogInDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["loginform",{"_index":669,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":42,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["logoutformcomponent",{"_index":44,"title":{"components/LogoutFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":442,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["m.authmodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.httpstatusmodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.tasksmodule",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.usersmodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m263.7",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":487,"title":{},"body":{"components/FooterComponent.html":{}}}],["mainmodule",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mainmodule.filename",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masonry",{"_index":1098,"title":{},"body":{"components/TasksComponent.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...tasks.map((list",{"_index":471,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["matter",{"_index":633,"title":{},"body":{"components/IndexComponent.html":{}}}],["max",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["memory",{"_index":463,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["mental",{"_index":624,"title":{},"body":{"components/IndexComponent.html":{}}}],["menu",{"_index":531,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":542,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["miscellaneous",{"_index":1233,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal.component",{"_index":853,"title":{},"body":{"injectables/ModalService.html":{}}}],["modal.component.html",{"_index":745,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":744,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.directive",{"_index":783,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.service",{"_index":784,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":1119,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.directive",{"_index":1120,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.service",{"_index":984,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["modalcomponent",{"_index":46,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalcomponent).initialize",{"_index":864,"title":{},"body":{"injectables/ModalService.html":{}}}],["modaldirective",{"_index":68,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalref",{"_index":859,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalref.componentinstance",{"_index":863,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":843,"title":{"injectables/ModalService.html":{}},"body":{"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["modern",{"_index":637,"title":{},"body":{"components/IndexComponent.html":{}}}],["module",{"_index":73,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}},"body":{}}],["modulefilename",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":75,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1286,"title":{},"body":{"index.html":{}}}],["name",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1255,"title":{},"body":{"index.html":{}}}],["need",{"_index":1281,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":485,"title":{},"body":{"components/FooterComponent.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["nestjs.ts",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":856,"title":{},"body":{"injectables/ModalService.html":{}}}],["new",{"_index":287,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/HttpStatusModule.html":{},"components/TaskListEditorComponent.html":{}}}],["next.handle(cloned",{"_index":243,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":244,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbactivemodal",{"_index":754,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodal",{"_index":847,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodalservice",{"_index":849,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["ngifelse]=\"nolists",{"_index":1109,"title":{},"body":{"components/TasksComponent.html":{}}}],["ngifelse]=\"notasks",{"_index":1050,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["ngondestroy",{"_index":496,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["nguniversal/express",{"_index":601,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["noauthguard",{"_index":347,"title":{"guards/NoAuthGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["noderequire",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["null",{"_index":299,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":422,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["object",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(userinputs).foreach((userinputkey",{"_index":813,"title":{},"body":{"components/ModalComponent.html":{}}}],["object.keys(useroutputs).foreach((useroutputkey",{"_index":828,"title":{},"body":{"components/ModalComponent.html":{}}}],["observable",{"_index":232,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["observe",{"_index":327,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["observer",{"_index":1074,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["of(null",{"_index":1152,"title":{},"body":{"injectables/TasksService.html":{}}}],["onaddtasklist",{"_index":1088,"title":{},"body":{"components/TasksComponent.html":{}}}],["onaddtasklist(tasklist",{"_index":1094,"title":{},"body":{"components/TasksComponent.html":{}}}],["ondelete",{"_index":1023,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ondeletetasklist",{"_index":1021,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondeletetasklist(tasklist",{"_index":1033,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondestroy",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["onedittasklist",{"_index":1022,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedittasklist(tasklist",{"_index":1035,"title":{},"body":{"components/TaskListComponent.html":{}}}],["oninit",{"_index":374,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsave",{"_index":1040,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsubmit",{"_index":670,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["onto",{"_index":632,"title":{},"body":{"components/IndexComponent.html":{}}}],["opacity",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["open",{"_index":645,"title":{},"body":{"components/IndexComponent.html":{},"injectables/ModalService.html":{}}}],["open(title",{"_index":851,"title":{},"body":{"injectables/ModalService.html":{}}}],["optional",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":622,"title":{},"body":{"components/IndexComponent.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":831,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["outputs",{"_index":752,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["overview",{"_index":1289,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":854,"title":{},"body":{"injectables/ModalService.html":{}}}],["package",{"_index":1210,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1291,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":331,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["params).subscribe",{"_index":401,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params.code",{"_index":399,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params['to",{"_index":690,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["password",{"_index":281,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["patch(url",{"_index":1154,"title":{},"body":{"injectables/TasksService.html":{}}}],["path",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["pathmatch",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["payload",{"_index":340,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.name",{"_index":344,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.username",{"_index":342,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["pinterest",{"_index":955,"title":{},"body":{"components/SocialComponent.html":{}}}],["pipe",{"_index":334,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["pipe(takeuntil(this.subscription",{"_index":835,"title":{},"body":{"components/ModalComponent.html":{}}}],["platform",{"_index":1278,"title":{},"body":{"index.html":{}}}],["please",{"_index":903,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["post",{"_index":414,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(request",{"_index":428,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(url",{"_index":1142,"title":{},"body":{"injectables/TasksService.html":{}}}],["prefix",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preloadallmodules",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prettier/prettier",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["private",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":527,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1163,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["profilecomponent",{"_index":48,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1247,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":265,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["propname",{"_index":820,"title":{},"body":{"components/ModalComponent.html":{}}}],["provide",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["public",{"_index":595,"title":{},"body":{"injectables/HttpStatusService.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["put",{"_index":415,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["put(request",{"_index":430,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["queryparams",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reactiveformsmodule",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["record",{"_index":330,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["redirectto",{"_index":352,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reference",{"_index":1290,"title":{},"body":{"index.html":{}}}],["regain",{"_index":626,"title":{},"body":{"components/IndexComponent.html":{}}}],["reload",{"_index":1258,"title":{},"body":{"index.html":{}}}],["req",{"_index":231,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HttpStatusComponent.html":{}}}],["req.clone",{"_index":239,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.referrer",{"_index":571,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["req.headers.set('authorization",{"_index":241,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":426,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["request.url",{"_index":474,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["requestinfo",{"_index":424,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["require",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["res",{"_index":570,"title":{},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":314,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["rest",{"_index":649,"title":{},"body":{"components/IndexComponent.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":313,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["retry(2",{"_index":311,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["return",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rewrite",{"_index":918,"title":{},"body":{"components/SocialComponent.html":{}}}],["right",{"_index":532,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{}}}],["router",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["routermodule",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":353,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["routes",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routesnapshot",{"_index":395,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.data.type",{"_index":397,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.queryparams",{"_index":398,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routing.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1269,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":235,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":278,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["samevalue",{"_index":1070,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["save",{"_index":1010,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["scaffolding",{"_index":1261,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":862,"title":{},"body":{"injectables/ModalService.html":{}}}],["scrollpositionrestoration",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scss",{"_index":919,"title":{},"body":{"components/SocialComponent.html":{}}}],["see",{"_index":790,"title":{},"body":{"components/ModalComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["serve",{"_index":1253,"title":{},"body":{"index.html":{}}}],["server",{"_index":179,"title":{},"body":{"modules/AppServerModule.html":{},"components/HttpStatusComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["serverapp",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":178,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service.title",{"_index":917,"title":{},"body":{"components/SocialComponent.html":{}}}],["services",{"_index":653,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setstatus",{"_index":596,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["setstatus(code",{"_index":599,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["settoken",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":298,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["shared/task",{"_index":465,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["shared/task.model",{"_index":467,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"injectables/TasksService.html":{}}}],["sharereplay",{"_index":319,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["sign",{"_index":529,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/SignUpFormComponent.html":{}}}],["signed",{"_index":900,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signup",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["signup(data",{"_index":320,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["signupdto",{"_index":282,"title":{"interfaces/SignUpDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["signupform",{"_index":889,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signupformcomponent",{"_index":50,"title":{"components/SignUpFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":582,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["skipwhenexpired",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["skype",{"_index":943,"title":{},"body":{"components/SocialComponent.html":{}}}],["social",{"_index":907,"title":{},"body":{"components/SocialComponent.html":{}}}],["social'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["social.component.html",{"_index":909,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.component.scss",{"_index":908,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.model",{"_index":914,"title":{},"body":{"components/SocialComponent.html":{}}}],["social/social.component",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["socialcomponent",{"_index":52,"title":{"components/SocialComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["socialservice",{"_index":961,"title":{"interfaces/SocialService.html":{}},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["socialservicetype",{"_index":912,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":646,"title":{},"body":{"components/IndexComponent.html":{}}}],["solid",{"_index":391,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["space",{"_index":625,"title":{},"body":{"components/IndexComponent.html":{}}}],["spec\\.ts",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":654,"title":{},"body":{"components/IndexComponent.html":{}}}],["spyobj",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../api.ts",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fontawesome",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modal.component.ts",{"_index":1300,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../modal.service.ts",{"_index":1302,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../social.model.ts",{"_index":1301,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tasks.service.ts",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utilities.ts",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/api.ts",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.server.module.ts",{"_index":177,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/auth/auth",{"_index":345,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:25",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":225,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:7",{"_index":230,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":264,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:102",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:106",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:110",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:31",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:56",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:68",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:80",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:85",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:98",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/connect",{"_index":372,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/login",{"_index":667,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/logout",{"_index":739,"title":{},"body":{"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/no",{"_index":866,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/signup",{"_index":888,"title":{},"body":{"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts",{"_index":906,"title":{},"body":{"components/SocialComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts:12",{"_index":910,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.component.ts:16",{"_index":913,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.model.ts",{"_index":962,"title":{},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/fontawesome",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/footer.component.ts",{"_index":475,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":483,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:13",{"_index":482,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:19",{"_index":505,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:21",{"_index":506,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":507,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":499,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:31",{"_index":501,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":503,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:48",{"_index":500,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/http",{"_index":535,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts",{"_index":608,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts:14",{"_index":616,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:16",{"_index":612,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:26",{"_index":614,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:33",{"_index":615,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:37",{"_index":613,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/logger/logger.ts",{"_index":655,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["src/app/logger/logger.ts:13",{"_index":658,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:5",{"_index":661,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:9",{"_index":663,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/tasks/fake",{"_index":409,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.component.ts",{"_index":743,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.component.ts:25",{"_index":762,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:26",{"_index":757,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:27",{"_index":759,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:28",{"_index":761,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:30",{"_index":756,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:33",{"_index":775,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:37",{"_index":774,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:41",{"_index":773,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:49",{"_index":772,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:72",{"_index":766,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:91",{"_index":770,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.directive.ts",{"_index":838,"title":{},"body":{"directives/ModalDirective.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.directive.ts:6",{"_index":840,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.directive.ts:7",{"_index":841,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.service.ts",{"_index":844,"title":{},"body":{"injectables/ModalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.service.ts:14",{"_index":848,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:17",{"_index":852,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:36",{"_index":850,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/shared/task",{"_index":1011,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["src/app/tasks/shared/task.model.ts",{"_index":969,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/tasks/task",{"_index":1001,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts",{"_index":970,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts:14",{"_index":976,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:20",{"_index":981,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:22",{"_index":980,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:26",{"_index":978,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/tasks",{"_index":1126,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/app/tasks/tasks.component.ts",{"_index":1082,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.ts:16",{"_index":1097,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:18",{"_index":1090,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:28",{"_index":1093,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:32",{"_index":1092,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:46",{"_index":1091,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:59",{"_index":1095,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:69",{"_index":1096,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":1115,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.service.ts",{"_index":1127,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/tasks/tasks.service.ts:12",{"_index":1131,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:15",{"_index":1133,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:28",{"_index":1136,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:36",{"_index":1135,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:46",{"_index":1138,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/users/profile/profile.component.ts",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/users/profile/profile.component.ts:12",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/profile/profile.component.ts:18",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/users",{"_index":1164,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["src/app/users/users.component.ts",{"_index":1156,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/users/users.module.ts",{"_index":1161,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/users/users.service.ts",{"_index":1166,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.service.ts:11",{"_index":1169,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users/users.service.ts:8",{"_index":1168,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test.ts",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utilities.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackexchange",{"_index":957,"title":{},"body":{"components/SocialComponent.html":{}}}],["start",{"_index":704,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["started",{"_index":1245,"title":{"index.html":{}},"body":{}}],["state",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["state.url",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":778,"title":{},"body":{"components/ModalComponent.html":{}}}],["status",{"_index":537,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["status.component",{"_index":591,"title":{},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status.component.html",{"_index":539,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.scss",{"_index":538,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts",{"_index":536,"title":{},"body":{"components/HttpStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:14",{"_index":552,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:15",{"_index":555,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:16",{"_index":553,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:17",{"_index":547,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:28",{"_index":550,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:45",{"_index":549,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.module').then((m",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["status.module.ts",{"_index":590,"title":{},"body":{"modules/HttpStatusModule.html":{}}}],["status.service",{"_index":558,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.service.ts",{"_index":594,"title":{},"body":{"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["status.service.ts:6",{"_index":598,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status.service.ts:9",{"_index":600,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status/http",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/functions.html":{}}}],["storage.getitem('access_token",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["stored",{"_index":1266,"title":{},"body":{"index.html":{}}}],["string",{"_index":267,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":371,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["styleurls",{"_index":376,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe((event",{"_index":836,"title":{},"body":{"components/ModalComponent.html":{}}}],["subscribe(observer",{"_index":1080,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["subscription",{"_index":504,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["support",{"_index":1292,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":392,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["svgpathdata",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":764,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["t[p",{"_index":855,"title":{},"body":{"injectables/ModalService.html":{}}}],["table",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":277,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tap((list",{"_index":1143,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((lists",{"_index":1147,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((value",{"_index":315,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{}}}],["task",{"_index":57,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["task.component.html",{"_index":972,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":971,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.description",{"_index":1009,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["task.model",{"_index":1013,"title":{},"body":{"interfaces/TaskList.html":{}}}],["task.title",{"_index":990,"title":{},"body":{"components/TaskComponent.html":{}}}],["task/task.component",{"_index":1118,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskcomponent",{"_index":54,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskeditorcomponent",{"_index":56,"title":{"components/TaskEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tasklist",{"_index":420,"title":{"interfaces/TaskList.html":{}},"body":{"injectables/FakeTasksService.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasklist.title",{"_index":1049,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasklistcomponent",{"_index":59,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklisteditorcomponent",{"_index":61,"title":{"components/TaskListEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistform",{"_index":1053,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["tasklists",{"_index":1085,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["tasks.component",{"_index":1116,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks.component.html",{"_index":1084,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1083,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.length",{"_index":470,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service",{"_index":1064,"title":{},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["tasks.service.ts",{"_index":410,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["tasks.service.ts:10",{"_index":460,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:105",{"_index":417,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:109",{"_index":418,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:113",{"_index":421,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:117",{"_index":425,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:122",{"_index":429,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:127",{"_index":431,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:78",{"_index":449,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasksapiurl",{"_index":1123,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskscomponent",{"_index":63,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmodule",{"_index":151,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tasksroutingmodule",{"_index":1114,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1054,"title":{"injectables/TasksService.html":{}},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["technologies",{"_index":638,"title":{},"body":{"components/IndexComponent.html":{}}}],["template",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["templatename",{"_index":815,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":378,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["test",{"_index":1272,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1282,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1271,"title":{},"body":{"index.html":{}}}],["this.api}/auth/${type",{"_index":325,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/login",{"_index":308,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/signup",{"_index":321,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authservice.authstatus$.subscribe((isauthorized",{"_index":517,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authservice.connect(type",{"_index":400,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.authservice.getname",{"_index":522,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.isloggedin",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isloggedout",{"_index":874,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["this.authservice.login(this.loginform.value).subscribe",{"_index":694,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.logout",{"_index":742,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["this.authservice.signup(this.signupform.value).subscribe",{"_index":898,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.authstatussource.asobservable",{"_index":290,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(false",{"_index":303,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(isloggedin",{"_index":297,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(true",{"_index":305,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authsubscription",{"_index":516,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authsubscription?.unsubscribe",{"_index":524,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.bindinputs(componentref.instance",{"_index":806,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bindoutputs(componentref.instance",{"_index":808,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.canactivate(route",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["this.code",{"_index":562,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory",{"_index":799,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype",{"_index":796,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype?.name",{"_index":818,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.error",{"_index":403,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.errors",{"_index":700,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.fb.group",{"_index":680,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.gettasklists",{"_index":1100,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":1141,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.http.get(url",{"_index":333,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.get(url).pipe",{"_index":1146,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["this.http.head(url",{"_index":326,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.post(url",{"_index":309,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.httpstatus.setstatus(this.code",{"_index":560,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.inputs",{"_index":797,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.isauthorized",{"_index":520,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.isbackavailable",{"_index":567,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.isloggedin",{"_index":296,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.isready",{"_index":691,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["this.jwtservice.decodetoken",{"_index":341,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.jwtservice.istokenexpired",{"_index":337,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.lists",{"_index":469,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.localstorage.removeitem('access_token",{"_index":302,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.localstorage.setitem('access_token",{"_index":304,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.location.back",{"_index":572,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.logger.log('user",{"_index":695,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.logger.log(`${request.method.touppercase",{"_index":473,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.logger.log(`added",{"_index":1144,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`connected",{"_index":335,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`fetched",{"_index":1148,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`logging",{"_index":316,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`signed",{"_index":322,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`updated",{"_index":1155,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(error",{"_index":698,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.controls",{"_index":692,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":693,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.message",{"_index":564,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.modal.viewcontainerref",{"_index":801,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.closeall",{"_index":1044,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open",{"_index":1038,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open('delete",{"_index":989,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.modalservice.open('edit",{"_index":988,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.name",{"_index":521,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ngbmodalservice.dismissall",{"_index":865,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.ngbmodalservice.open(modalcomponent",{"_index":860,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.onaddtasklist(tasklist",{"_index":1103,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.ondelete.emit",{"_index":1048,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist",{"_index":1041,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist(tasklist",{"_index":1046,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onsave.emit(list",{"_index":1076,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.outputs",{"_index":798,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.redirectto",{"_index":689,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.res",{"_index":606,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.res.status(code",{"_index":607,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.route.data.subscribe((data",{"_index":561,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":688,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.route.snapshot",{"_index":396,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":402,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LogoutFormComponent.html":{}}}],["this.router.navigatebyurl(this.redirectto",{"_index":697,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.settoken(null",{"_index":336,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.settoken(value['access_token",{"_index":318,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.signupform.controls",{"_index":896,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.signupform.valid",{"_index":897,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.subscription.complete",{"_index":789,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.subscription.next(void",{"_index":788,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.tasklist",{"_index":1043,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.tasklist.title",{"_index":1066,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls",{"_index":1071,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.addvalidators((control",{"_index":1068,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.setvalue(title",{"_index":1067,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.value",{"_index":1073,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.valid",{"_index":1072,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklists",{"_index":1102,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.filter((l",{"_index":1107,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.push(tasklist",{"_index":1105,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks",{"_index":468,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[0",{"_index":435,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[1",{"_index":436,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[2",{"_index":438,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[3",{"_index":439,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[4",{"_index":444,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[5",{"_index":445,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[6",{"_index":447,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[7",{"_index":448,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasksservice.addtasklist(title).subscribe(observer",{"_index":1081,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasksservice.gettasklists().subscribe",{"_index":1101,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasksservice.updatetasklist",{"_index":1079,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.title",{"_index":795,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.titleservice.settitle('todo",{"_index":621,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.updateauthstatus(isauthorized",{"_index":519,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.user",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.usersservice.getprofile().subscribe((user",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{}}}],["those",{"_index":630,"title":{},"body":{"components/IndexComponent.html":{}}}],["throw",{"_index":817,"title":{},"body":{"components/ModalComponent.html":{}}}],["title",{"_index":434,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["titleservice",{"_index":611,"title":{},"body":{"components/IndexComponent.html":{}}}],["todo",{"_index":525,"title":{},"body":{"components/HeaderComponent.html":{},"components/SocialComponent.html":{}}}],["token",{"_index":301,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["tokengetter",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltip",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["top",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["transition",{"_index":994,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":406,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["tslib",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":921,"title":{},"body":{"components/SocialComponent.html":{}}}],["twitter:hover",{"_index":923,"title":{},"body":{"components/SocialComponent.html":{}}}],["type",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"danger",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["typealiases",{"_index":1298,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":810,"title":{},"body":{"components/ModalComponent.html":{}}}],["undefined",{"_index":427,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{}}}],["unicode",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1270,"title":{},"body":{"index.html":{}}}],["universalmodule",{"_index":180,"title":{},"body":{"modules/AppServerModule.html":{}}}],["unknown",{"_index":405,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/ModalComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":323,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["updateauthstatus",{"_index":497,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updateauthstatus(isauthorized",{"_index":502,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updatetasklist",{"_index":1129,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklist(tasklist",{"_index":1137,"title":{},"body":{"injectables/TasksService.html":{}}}],["url",{"_index":307,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":635,"title":{},"body":{"components/IndexComponent.html":{},"components/TaskEditorComponent.html":{},"index.html":{}}}],["usefactory",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.id",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.name",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userinputkey",{"_index":816,"title":{},"body":{"components/ModalComponent.html":{}}}],["userinputs",{"_index":758,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["userinputs[templatename",{"_index":821,"title":{},"body":{"components/ModalComponent.html":{}}}],["username",{"_index":280,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["useroutputkey",{"_index":830,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs",{"_index":760,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["useroutputs[templatename",{"_index":834,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs[useroutputkey",{"_index":832,"title":{},"body":{"components/ModalComponent.html":{}}}],["users",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["users.component",{"_index":1162,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["users.service",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userscomponent",{"_index":65,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":148,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersroutingmodule",{"_index":1160,"title":{"modules/UsersRoutingModule.html":{}},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":880,"title":{"injectables/UsersService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["using",{"_index":641,"title":{},"body":{"components/IndexComponent.html":{}}}],["valid",{"_index":904,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators",{"_index":687,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["validators.email",{"_index":893,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators.minlength(8",{"_index":682,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["validators.required",{"_index":681,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["value",{"_index":317,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1303,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1250,"title":{},"body":{"index.html":{}}}],["very",{"_index":441,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["via",{"_index":1274,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":782,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild(modaldirective",{"_index":777,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref",{"_index":800,"title":{},"body":{"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["viewcontainerref.clear",{"_index":802,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":804,"title":{},"body":{"components/ModalComponent.html":{}}}],["visibility",{"_index":992,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["vk",{"_index":929,"title":{},"body":{"components/SocialComponent.html":{}}}],["vk:hover",{"_index":931,"title":{},"body":{"components/SocialComponent.html":{}}}],["vkontakte",{"_index":351,"title":{},"body":{"modules/AuthRoutingModule.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":300,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":656,"title":{},"body":{"injectables/Logger.html":{}}}],["warn(...args",{"_index":662,"title":{},"body":{"injectables/Logger.html":{}}}],["web",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["width",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["window.location.href",{"_index":915,"title":{},"body":{"components/SocialComponent.html":{}}}],["within",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["youtube",{"_index":938,"title":{},"body":{"components/SocialComponent.html":{}}}],["z",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["zone.js",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    \n      \n    \n    \n  `,\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            IndexComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { IndexComponent } from './index/index.component';\n\nexport function jwtOptionsFactory(storage: Storage) {\n  return {\n    tokenGetter: () => storage.getItem('access_token'),\n    skipWhenExpired: false,\n  };\n}\n\nconst jwtOptionsProvider = {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n};\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    IndexComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    HttpClientModule,\n    JwtModule.forRoot({ jwtOptionsProvider }),\n    FontAwesomeModule,\n    NgbModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { IndexComponent } from './index/index.component';\n\nconst authModule = () => import('./auth/auth.module').then((m) => m.AuthModule);\nconst usersModule = () => import('./users/users.module').then((m) => m.UsersModule);\nconst tasksModule = () => import('./tasks/tasks.module').then((m) => m.TasksModule);\nconst httpStatusModule = () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule);\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent, pathMatch: 'full' },\n  { path: 'auth', loadChildren: authModule },\n  { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n  { path: 'tasks', loadChildren: tasksModule, canActivate: [AuthGuard] },\n  { path: '**', loadChildren: httpStatusModule },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      initialNavigation: 'enabled',\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { UniversalModule } from '@ng-web-apis/universal';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n  imports: [AppModule, ServerModule, UniversalModule],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  template: `\n    \n      \n    \n  `,\n})\nexport class AuthComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isLoggedIn = this.authService.isLoggedIn();\n    if (isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], { queryParams: { to: state.url } });\n    return false;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const idToken = localStorage.getItem('id_token');\n\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + idToken),\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ConnectAccountFormComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            LogoutFormComponent\n                        \n                        \n                            SignUpFormComponent\n                        \n                        \n                            SocialComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SocialComponent } from './social/social.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthComponent } from './auth.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n    SignUpFormComponent,\n    SocialComponent,\n    AuthComponent,\n    LogoutFormComponent,\n    ConnectAccountFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    NgbModule,\n    AuthRoutingModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { AuthGuard } from './auth.guard';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NoAuthGuard } from './no-auth.guard';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      { path: 'login', component: LoginFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'signup', component: SignUpFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'logout', component: LogoutFormComponent, canActivate: [AuthGuard] },\n      {\n        path: 'google',\n        component: ConnectAccountFormComponent,\n        data: { type: 'google' },\n        canActivate: [NoAuthGuard],\n      },\n      {\n        path: 'vkontakte',\n        component: ConnectAccountFormComponent,\n        data: { type: 'vkontakte' },\n        canActivate: [NoAuthGuard],\n      },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authStatus$\n                            \n                            \n                                    Private\n                                authStatusSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                getAuthUrl\n                            \n                            \n                                getName\n                            \n                            \n                                getUsername\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                setToken\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: string, localStorage: Storage, jwtService: JwtHelperService, logger: Logger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(type: string, parameters: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthUrl\n                        \n                    \n                \n            \n            \n                \ngetAuthUrl(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut\n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(data: LogInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LogInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(data: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectAccountFormComponent.html":{"url":"components/ConnectAccountFormComponent.html","title":"component - ConnectAccountFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectAccountFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/connect-account-form/connect-account-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-account-form\n            \n\n            \n                styleUrls\n                ./connect-account-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-account-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-connect-account-form',\n  templateUrl: './connect-account-form.component.html',\n  styleUrls: ['./connect-account-form.component.scss'],\n})\nexport class ConnectAccountFormComponent implements OnInit {\n  isReady = false;\n\n  error = '';\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner);\n  }\n\n  ngOnInit(): void {\n    const routeSnapshot = this.route.snapshot;\n    const type = routeSnapshot.data.type;\n    const params = routeSnapshot.queryParams;\n    if (params.code) {\n      this.authService.connect(type, params).subscribe(\n        () => {\n          this.router.navigateByUrl('/');\n        },\n        ({ error }) => {\n          this.error = error?.message ?? 'Unknown error. Try again.';\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    {{ error }}\n  \n\n\n    \n\n    \n                \n                    ./connect-account-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ error }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConnectAccountFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeTasksService.html":{"url":"injectables/FakeTasksService.html","title":"injectable - FakeTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FakeTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/fake-tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                            \n                                genId\n                            \n                            \n                                get\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/fake-tasks.service.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDb\n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { task: {}; list: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genId\n                        \n                    \n                \n            \n            \n                \ngenId(tasks: TaskList[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                            TaskList[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\nimport { Observable } from 'rxjs';\nimport { Logger } from '../logger/logger';\nimport { TaskList } from './shared/task-list.model';\nimport { Task } from './shared/task.model';\n\n@Injectable()\nexport class FakeTasksService implements InMemoryDbService {\n  private tasks: (Task & { list: number })[] = [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ];\n\n  private lists: TaskList[] = [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ];\n\n  constructor(private logger: Logger) {}\n\n  createDb() {\n    return { task: this.tasks, list: this.lists };\n  }\n\n  genId(tasks: TaskList[]): number {\n    return tasks.length > 0 ? Math.max(...tasks.map((list) => list.id)) + 1 : 1;\n  }\n\n  get(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  post(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  put(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngular\n                            \n                            \n                                faNestJs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngular\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngular\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faNestJs\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faAngular } from '@fortawesome/free-brands-svg-icons';\nimport { faNestJs } from './fontawesome-svg-nestjs';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  faAngular = faAngular;\n  faNestJs = faNestJs;\n\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faAngular, faNestJs);\n  }\n}\n\n    \n\n    \n        \n  \n    Made with\n    \n      \n    \n    and\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Made with                  and                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                collapsed\n                            \n                            \n                                isAuthorized\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport {\n  faCheck,\n  faSignInAlt,\n  faSquare,\n  faUser,\n  faUserPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  collapsed = true;\n\n  isAuthorized = false;\n\n  name?: string;\n\n  constructor(private authService: AuthService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faCheck, faUser, faUserPlus, faSignInAlt);\n  }\n\n  ngOnInit(): void {\n    console.log('Add header subscription');\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      console.log('Update header subscription: ', isAuthorized);\n      this.updateAuthStatus(isAuthorized);\n    });\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n    if (isAuthorized) {\n      this.name = this.authService.getName();\n    } else {\n      this.name = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    console.log('Remove header subscription');\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n        \n          ToDo\n          \n            Alpha\n          \n        \n      \n\n      \n        \n      \n\n      \n        \n          \n            \n              \n                \n                {{ name }}\n              \n              \n                Profile\n                \n                Log out\n              \n            \n          \n          \n            \n              \n              Sign Up\n            \n            \n              \n              Log In\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .dropdown-menu-right {\n  right: 0;\n  left: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  ToDo                      Alpha                                                                                                                              {{ name }}                                            Profile                                Log out                                                                                      Sign Up                                                    Log In                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HttpStatusComponent.html":{"url":"components/HttpStatusComponent.html","title":"component - HttpStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HttpStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/http-status/http-status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-http-status\n            \n\n            \n                styleUrls\n                ./http-status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./http-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                description\n                            \n                            \n                                isBackAvailable\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpStatus: HttpStatusService, route: ActivatedRoute, location: Location, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpStatus\n                                                  \n                                                        \n                                                                        HttpStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBackAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Server Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { HttpStatusService } from './http-status.service';\n\n@Component({\n  selector: 'app-http-status',\n  templateUrl: './http-status.component.html',\n  styleUrls: ['./http-status.component.scss'],\n})\nexport class HttpStatusComponent implements OnInit {\n  code = 500;\n  message = 'Internal Server Error';\n  description = '';\n  isBackAvailable = true;\n\n  constructor(\n    private httpStatus: HttpStatusService,\n    private route: ActivatedRoute,\n    private location: Location,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faArrowLeft, faHome);\n  }\n\n  ngOnInit(): void {\n    this.httpStatus.setStatus(this.code);\n    this.route.data.subscribe((data) => {\n      this.code = data.code ?? this.code;\n      this.message = data.message ?? this.message;\n      this.httpStatus.setStatus(this.code);\n    });\n    // if (isPlatformBrowser(this.platformId)) {\n    //   this.isBackAvailable = !!(document.referrer);\n    // } else if (isPlatformServer(this.platformId)) {\n    //   const { req, res } = this;\n    //   if (req) {\n    //     this.isBackAvailable = !!(req.headers.referrer);\n    //   }\n    // }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ code || 500 }}\n      {{ message || 'Internal Server Error' }}\n      {{ description }}\n      \n      \n        \n           Back\n        \n        \n           Homepage\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./http-status.component.scss\n                \n                @import '~bootstrap/scss/functions', '~bootstrap/scss/variables';\n\n.error-bg-gray {\n  background-color: $gray-200;\n}\n\n.error-code {\n  font-size: 10rem;\n  line-height: 0.9;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ code || 500 }}      {{ message || \\'Internal Server Error\\' }}      {{ description }}                               Back                           Homepage                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HttpStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusModule.html":{"url":"modules/HttpStatusModule.html","title":"module - HttpStatusModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HttpStatusComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HttpStatusRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpStatusComponent } from './http-status.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpStatusRoutingModule } from './http-status-routing.module';\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    HttpStatusComponent\n  ],\n  // eslint-disable-next-line prettier/prettier\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    HttpStatusRoutingModule,\n  ]\n})\nexport class HttpStatusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusRoutingModule.html":{"url":"modules/HttpStatusRoutingModule.html","title":"module - HttpStatusRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpStatusComponent } from './http-status.component';\n\nconst routes: Routes = [\n  { path: '', component: HttpStatusComponent, data: { code: 404, message: 'Not Found' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HttpStatusRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpStatusService.html":{"url":"injectables/HttpStatusService.html","title":"injectable - HttpStatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpStatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-status/http-status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(res: Response)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                  \n                                                        \n                                                                    Response\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStatus(code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { Response } from 'express';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpStatusService {\n  constructor(@Optional() @Inject(RESPONSE) private res: Response) {}\n\n  public setStatus(code: number): void {\n    if (this.res) {\n      this.res.status(code);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                isAuthorized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, titleService: Title, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/index.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faCodeBranch, faCubes, faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  isAuthorized = false;\n\n  constructor(\n    private authService: AuthService,\n    private titleService: Title,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faCubes, faCodeBranch, faTerminal);\n  }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      this.updateAuthStatus(isAuthorized);\n    });\n    this.titleService.setTitle('ToDo');\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n  }\n\n  ngOnDestroy() {\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Organize it all\n    \n      \n        Free up your mental space. Regain clarity and calmness by getting all those tasks out of\n        your head and onto your to-do list no matter where you are or what device you use.\n      \n      \n        \n          \n            Launch\n          \n        \n        \n          \n            Sign Up\n          \n          \n            Log In\n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Modern Technologies\n          This application is developed using Angular 12 and NestJS 8.\n          Documentation\n        \n      \n      \n        \n          \n        \n        \n          Open Source\n          This application is free software hosted on GitHub.\n          Source\n        \n      \n      \n        \n          \n        \n        \n          REST API\n          Develop awesome applications and services with our REST API.\n          API Specification\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./index.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organize it all                  Free up your mental space. Regain clarity and calmness by getting all those tasks out of        your head and onto your to-do list no matter where you are or what device you use.                                          Launch                                                Sign Up                                Log In                                                                                                                  Modern Technologies          This application is developed using Angular 12 and NestJS 8.          Documentation                                                                Open Source          This application is free software hosted on GitHub.          Source                                                                REST API          Develop awesome applications and services with our REST API.          API Specification                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInDto.html":{"url":"interfaces/LogInDto.html","title":"interface - LogInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logger/logger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class Logger {\n  log(...args: any[]) {\n    console.log(...args);\n  }\n\n  warn(...args: any[]) {\n    console.warn(...args);\n  }\n\n  error(...args: any[]) {\n    console.error(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, logger: Logger, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login-form/login-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Logger } from '@app/logger/logger';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private logger: Logger,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): Record {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isReady = false;\n      this.authService.logIn(this.loginForm.value).subscribe(\n        () => {\n          this.logger.log('User is logged in');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          this.logger.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to log in'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Log in with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Username or Email\n        \n          Username is required.\n        \n      \n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Log In\n      \n         Loading\n      \n    \n    \n      Create an account\n    \n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Log in with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Username or Email                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Log In               Loading                    Create an account      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutFormComponent.html":{"url":"components/LogoutFormComponent.html","title":"component - LogoutFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/logout-form/logout-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-form\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/logout-form/logout-form.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/logout-form/logout-form.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logout-form',\n  template: ``,\n})\nexport class LogoutFormComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.logOut();\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindInputs\n                            \n                            \n                                    Private\n                                bindOutputs\n                            \n                            \n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentType\n                            \n                            \n                                inputs\n                            \n                            \n                                outputs\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputs\n                    \n                \n                \n                    \n                        Type :         UserInputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputs\n                    \n                \n                \n                    \n                        Type :         UserOutputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindInputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindInputs(componentInstance: T, componentInputs: ComponentInputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInputs\n                                    \n                                                ComponentInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindOutputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentOutputs\n                                    \n                                                ComponentOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbActiveModal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ModalDirective, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDirective } from './modal.directive';\nimport { UserInputs, UserOutputs } from './modal.service';\n\ntype ComponentInputs = ComponentFactory['inputs'];\ntype ComponentOutputs = ComponentFactory['outputs'];\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() title = '';\n  @Input() componentType?: Type;\n  @Input() inputs: UserInputs = {};\n  @Input() outputs: UserOutputs = {};\n\n  @ViewChild(ModalDirective, { static: true }) modal!: ModalDirective;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    console.log('modal onInit');\n  }\n\n  ngOnDestroy(): void {\n    console.log('modal onDestroy');\n    // this.subscription.next(void 0);\n    // this.subscription.complete();\n  }\n\n  // See https://dev.to/this-is-angular/advance-angular-dynamic-component-12e\n\n  initialize(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs,\n    outputs: UserOutputs,\n  ) {\n    this.title = title;\n    this.componentType = componentType;\n    this.inputs = inputs;\n    this.outputs = outputs;\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.componentType,\n    );\n    const viewContainerRef = this.modal.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    console.log(`Binding inputs:`, this.inputs);\n    this.bindInputs(componentRef.instance, componentFactory.inputs);\n    console.log(`Binding outputs:`, this.outputs);\n    this.bindOutputs(componentRef.instance, componentFactory.outputs);\n  }\n\n  private bindInputs(componentInstance: T, componentInputs: ComponentInputs) {\n    const userInputs = this.inputs as Record; // FIXME: TypeScript compiler bug\n\n    Object.keys(userInputs).forEach((userInputKey) => {\n      if (!componentInputs.some(({ templateName }) => templateName === userInputKey)) {\n        throw new Error(\n          `Input ${userInputKey} is not a ${this.componentType?.name ?? 'dynamic component'} input`,\n        );\n      }\n    });\n\n    componentInputs.forEach(({ propName, templateName }) => {\n      const value = userInputs[templateName];\n      if (value) {\n        componentInstance[propName as keyof T] = value;\n      }\n    });\n  }\n\n  private bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs) {\n    const userOutputs = this.outputs as Record void>; // FIXME: TypeScript compiler bug\n\n    componentOutputs.forEach(({ propName }) => {\n      if (!(componentInstance[propName as keyof T] instanceof EventEmitter)) {\n        throw new Error(`Output ${propName} must be an instance of EventEmitter`);\n      }\n    });\n\n    Object.keys(userOutputs).forEach((userOutputKey) => {\n      if (!componentOutputs.some(({ templateName }) => templateName === userOutputKey)) {\n        throw new Error(\n          `Output ${userOutputKey} is not a ${\n            this.componentType?.name ?? 'dynamic component'\n          } output.`,\n        );\n      }\n      if (!(userOutputs[userOutputKey] instanceof Function)) {\n        throw new Error(`Output ${userOutputKey} must be a function`);\n      }\n    });\n\n    componentOutputs.forEach(({ propName, templateName }) => {\n      const handler = userOutputs[templateName];\n      if (handler) {\n        (componentInstance[propName as keyof T] as unknown as EventEmitter)\n          // .pipe(takeUntil(this.subscription))\n          .subscribe((event) => {\n            handler(event);\n          });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n\n\n  \n  \n\n\n    \n\n    \n                \n                    ./modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModalDirective.html":{"url":"directives/ModalDirective.html","title":"directive - ModalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [modal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.directive.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[modal]',\n})\nexport class ModalDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeAll\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngbModalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngbModalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, Type } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalComponent } from './modal.component';\n\nexport type UserInputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? never : T[P];\n};\n\nexport type UserOutputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? (event: E) => any : never;\n};\n\n@Injectable()\nexport class ModalService {\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs = {},\n    outputs: UserOutputs = {},\n  ) {\n    const modalRef = this.ngbModalService.open(ModalComponent, {\n      centered: true,\n      scrollable: true,\n    });\n    (modalRef.componentInstance as ModalComponent).initialize(\n      title,\n      componentType,\n      inputs,\n      outputs,\n    );\n    return modalRef;\n  }\n\n  closeAll() {\n    this.ngbModalService.dismissAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NoAuthGuard.html":{"url":"guards/NoAuthGuard.html","title":"guard - NoAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    NoAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/no-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/no-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NoAuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot) {\n    const isLoggedOut = this.authService.isLoggedOut();\n    return isLoggedOut;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/profile/profile.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/profile/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/profile/profile.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private usersService: UsersService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.usersService.getProfile().subscribe((user) => {\n      this.user = user;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n\n    User #{{ user.id }}: {{ user.name }}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          User #{{ user.id }}: {{ user.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpDto.html":{"url":"interfaces/SignUpDto.html","title":"interface - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        LogInDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpFormComponent.html":{"url":"components/SignUpFormComponent.html","title":"component - SignUpFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup-form/signup-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup-form/signup-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSquare, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss'],\n})\nexport class SignUpFormComponent implements OnInit {\n  signUpForm = this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUserPlus);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.signUpForm.controls;\n  }\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      this.isReady = false;\n      this.authService.signUp(this.signUpForm.value).subscribe(\n        () => {\n          console.log('User is signed up');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          console.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to sign up'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Sign up with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n\n    \n      \n        \n        Name\n        \n          Name is required.\n        \n      \n\n      \n        \n        Email address\n        \n          Email address is required.\n          Please provide a valid email address.\n        \n      \n\n      \n        \n        Username\n        \n          Username is required.\n        \n      \n\n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Sign Up\n      \n         Loading\n      \n    \n    \n      \n        Log in with existing account\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign up with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Name                  Name is required.                                    Email address                  Email address is required.          Please provide a valid email address.                                    Username                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Sign Up               Loading                            Log in with existing account            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SocialComponent.html":{"url":"components/SocialComponent.html","title":"component - SocialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SocialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/social/social.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-social\n            \n\n            \n                styleUrls\n                ./social.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./social.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/social/social.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(type: SocialServiceType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/social/social.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SocialServiceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : services\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/social/social.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { SocialServiceType, services } from './social.model';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.scss'],\n})\nexport class SocialComponent {\n  services = services;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logIn(type: SocialServiceType) {\n    window.location.href = `/api/auth/${type}`;\n  }\n}\n\n    \n\n    \n        \n  \n  {{ service.title }}\n\n\n    \n\n    \n                \n                    ./social.component.scss\n                \n                // TODO: Rewrite with SCSS functions\n\n.twitter {\n  background-color: #00acee;\n  border-color: #00acee;\n}\n\n.twitter:hover {\n  background-color: #08b2f5;\n  border-color: #08b2f5;\n}\n\n.facebook {\n  background-color: #3b5998;\n  border-color: #3b5998;\n}\n\n.facebook:hover {\n  background-color: #4966a5;\n  border-color: #4966a5;\n}\n\n.vk {\n  background-color: #4d7198;\n  border-color: #4d7198;\n}\n\n.vk:hover {\n  background-color: #577ea7;\n  border-color: #577ea7;\n}\n\n.google {\n  background-color: #db4a39;\n  border-color: #db4a39;\n}\n\n.google:hover {\n  background-color: #e95343;\n  border-color: #e95343;\n}\n\n.linkedin {\n  background-color: #0e76a8;\n  border-color: #0e76a8;\n}\n\n.youtube {\n  background-color: #c4302b;\n  border-color: #c4302b;\n}\n\n.github {\n  background-color: #171515;\n  border-color: #171515;\n}\n\n.android {\n  background-color: #a4c639;\n  border-color: #a4c639;\n}\n\n.skype {\n  background-color: #00aff0;\n  border-color: #00aff0;\n}\n\n.dropbox {\n  background-color: #3d9ae8;\n  border-color: #3d9ae8;\n}\n\n.foursquare {\n  background-color: #25a0ca;\n  border-color: #25a0ca;\n}\n\n.apple {\n  background-color: #cdcdcd;\n  border-color: #cdcdcd;\n}\n\n.dribbble {\n  background-color: #ea4c89;\n  border-color: #ea4c89;\n}\n\n.instagram {\n  background-color: #3f729b;\n  border-color: #3f729b;\n}\n\n.pinterest {\n  background-color: #c8232c;\n  border-color: #c8232c;\n}\n\n.stackexchange {\n  background-color: #ef8236;\n  border-color: #ef8236;\n}\n\n.flickr {\n  background-color: #ff0084;\n  border-color: #ff0084;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ service.title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SocialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialService.html":{"url":"interfaces/SocialService.html","title":"interface - SocialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SocialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/social/social.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            isEnabled\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SocialServiceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SocialServiceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition, faFacebookF, faGoogle, faVk } from '@fortawesome/free-brands-svg-icons';\n\nexport type SocialServiceType = 'facebook' | 'vkontakte' | 'google';\n\nexport interface SocialService {\n  type: SocialServiceType;\n  title: string;\n  icon: IconDefinition;\n  isEnabled: boolean;\n}\n\nexport const services: SocialService[] = [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDone\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: number;\n  title: string;\n  description: string;\n  isDone: boolean;\n  createdDate: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                styleUrls\n                ./task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { Task } from '../shared/task.model';\nimport { TaskEditorComponent } from '../task-editor/task-editor.component';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash);\n  }\n\n  ngOnInit(): void {}\n\n  editTask(task: Task) {\n    this.modalService.open('Edit task', TaskEditorComponent, { task });\n  }\n\n  deleteTask(task: Task) {\n    this.modalService.open('Delete task', TaskEditorComponent, { task });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ task.title }}\n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./task.component.scss\n                \n                .task {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ task.title }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditorComponent.html":{"url":"components/TaskEditorComponent.html","title":"component - TaskEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-editor/task-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-editor\n            \n\n            \n                styleUrls\n                ./task-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-editor/task-editor.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from '../shared/task.model';\n\n@Component({\n  selector: 'app-task-editor',\n  templateUrl: './task-editor.component.html',\n  styleUrls: ['./task-editor.component.scss'],\n})\nexport class TaskEditorComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Title\n    \n    Please use up to 255 characters.\n  \n  \n    Description\n    {{ task.description }}\n  \n  Save\n\n\n    \n\n    \n                \n                    ./task-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title        Please use up to 255 characters.        Description    {{ task.description }}    Save'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskList.html":{"url":"interfaces/TaskList.html","title":"interface - TaskList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task-list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from './task.model';\n\nexport interface TaskList {\n  id: number;\n  title: string;\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list/task-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTaskList\n                            \n                            \n                                editTaskList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteTaskList\n                            \n                            \n                                onEditTaskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskList\n                        \n                    \n                \n            \n            \n                \ndeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTaskList\n                        \n                    \n                \n            \n            \n                \neditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditTaskList\n                        \n                    \n                \n            \n            \n                \nonEditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { TaskList } from '../shared/task-list.model';\nimport { TaskListEditorComponent } from '../task-list-editor/task-list-editor.component';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss'],\n})\nexport class TaskListComponent implements OnInit {\n  @Input() taskList!: TaskList;\n\n  @Output() onDelete = new EventEmitter();\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash, faPlus);\n  }\n\n  ngOnInit(): void {}\n\n  editTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Edit task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: this.onEditTaskList,\n      },\n    );\n  }\n\n  onEditTaskList(taskList: TaskList) {\n    console.log('Edited task list:', taskList);\n    this.taskList = taskList;\n    this.modalService.closeAll();\n  }\n\n  deleteTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Delete task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: (taskList: any) => {\n          this.onEditTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    console.log('Deleted task list:', taskList);\n    this.onDelete.emit();\n    this.modalService.closeAll();\n  }\n\n  addTask(taskList: TaskList) {}\n}\n\n    \n\n    \n        \n  \n    {{ taskList.title }}\n    \n      \n    \n    \n      \n    \n  \n  \n     0\" [ngIfElse]=\"noTasks\">\n      \n        \n      \n    \n\n    \n      No tasks\n    \n  \n  \n    \n       Add task\n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.component.scss\n                \n                @import '~bootstrap/scss/functions',\n        '~bootstrap/scss/variables';\n\n.card-header, .card-footer {\n  background-color: $gray-200;\n}\n\n.card-header {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ taskList.title }}                                     0\" [ngIfElse]=\"noTasks\">                                  No tasks                   Add task      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListEditorComponent.html":{"url":"components/TaskListEditorComponent.html","title":"component - TaskListEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list-editor/task-list-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list-editor\n            \n\n            \n                styleUrls\n                ./task-list-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                taskListForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, tasksService: TasksService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskListForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSave, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { TaskList } from '../shared/task-list.model';\nimport { TasksService } from '../tasks.service';\n\n@Component({\n  selector: 'app-task-list-editor',\n  templateUrl: './task-list-editor.component.html',\n  styleUrls: ['./task-list-editor.component.scss'],\n})\nexport class TaskListEditorComponent implements OnInit {\n  @Input()\n  taskList?: TaskList;\n\n  @Output()\n  onSave = new EventEmitter();\n\n  taskListForm = this.fb.group({\n    title: ['', Validators.required],\n  });\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(private fb: FormBuilder, private tasksService: TasksService, library: FaIconLibrary) {\n    library.addIcons(faSave, faSpinner);\n  }\n\n  ngOnInit(): void {\n    if (this.taskList) {\n      const title = this.taskList.title;\n      this.taskListForm.controls.title.setValue(title);\n      this.taskListForm.controls.title.addValidators((control) => {\n        return title == control.value ? { sameValue: { value: control.value } } : null;\n      });\n    }\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.taskListForm.controls;\n  }\n\n  onSubmit(): void {\n    if (this.taskListForm.valid) {\n      this.isReady = false;\n      const title = this.taskListForm.controls.title.value;\n      const observer = {\n        next: (list: TaskList | null) => {\n          this.isReady = true;\n          if (list) {\n            console.log('Saved task list: ', list);\n            this.onSave.emit(list);\n          } else {\n            console.error('Saved null task list');\n          }\n        },\n        error: (error: any) => {\n          this.isReady = true;\n          console.error('Failed to save list: ', error);\n        },\n      };\n      if (this.taskList) {\n        this.tasksService.updateTaskList({ ...this.taskList, title }).subscribe(observer);\n      } else {\n        this.tasksService.addTaskList(title).subscribe(observer);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Title\n        \n          Title is required.\n        \n      \n    \n  \n  \n    \n      \n         Save\n      \n      \n         Loading\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Title                  Title is required.                                         Save                     Loading            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isReady\n                            \n                            \n                                taskLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddTaskList\n                            \n                            \n                                onDeleteTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddTaskList\n                        \n                    \n                \n            \n            \n                \nonAddTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskLists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faPlus, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from './modal/modal.service';\nimport { TaskList } from './shared/task-list.model';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { TasksService } from './tasks.service';\n// import * as Masonry from 'masonry-layout';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\nexport class TasksComponent implements OnInit {\n  taskLists: TaskList[] = [];\n\n  isReady = false;\n\n  constructor(\n    private tasksService: TasksService,\n    private modalService: ModalService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner, faPlus, faArrowLeft);\n  }\n\n  ngOnInit(): void {\n    this.getTaskLists();\n  }\n\n  getTaskLists(): void {\n    this.isReady = false;\n    this.tasksService.getTaskLists().subscribe(\n      (taskLists) => {\n        this.taskLists = taskLists;\n        this.isReady = true;\n      },\n      (error) => {\n        console.log(error);\n        this.isReady = true;\n      },\n    );\n  }\n\n  addTaskList(): void {\n    this.modalService.open(\n      'Add task list',\n      TaskListEditorComponent,\n      {},\n      {\n        onSave: (taskList) => {\n          this.onAddTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onAddTaskList(taskList: TaskList) {\n    if (taskList) {\n      console.log('Adding new task list:', taskList);\n      this.taskLists.push(taskList);\n    } else {\n      console.error('Adding null task list');\n    }\n    this.modalService.closeAll();\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    this.taskLists = this.taskLists.filter((l) => l !== taskList);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      Back\n    \n    \n      \n      Add list\n    \n  \n\n  \n     0\" [ngIfElse]=\"noLists\">\n      \n        \n      \n    \n\n    \n      \n        No task lists\n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Back                    Add list             0\" [ngIfElse]=\"noLists\">                                          No task lists                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            ModalDirective\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskListEditorComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModalService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskComponent } from './task/task.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ModalDirective } from './modal/modal.directive';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TasksService } from './tasks.service';\nimport { ModalService } from './modal/modal.service';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    TaskListComponent,\n    TaskListEditorComponent,\n    TaskComponent,\n    ModalComponent,\n    ModalDirective,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FontAwesomeModule,\n    TasksRoutingModule,\n    // HttpClientInMemoryWebApiModule.forFeature(\n    //   FakeTasksService, {\n    //     apiBase: tasksApiUrl,\n    //     dataEncapsulation: false,\n    //     delay: 1000\n    //   }\n    // ),\n  ],\n  providers: [ModalService, TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [{ path: '', component: TasksComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                updateTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskList\n                        \n                    \n                \n            \n            \n                \ngetTaskList(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskList\n                        \n                    \n                \n            \n            \n                \nupdateTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TaskList } from './shared/task-list.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Logger } from '../logger/logger';\nimport { Task } from './shared/task.model';\n\nexport const apiPrefix = '/api';\n\n@Injectable()\nexport class TasksService {\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  addTaskList(title: string): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    const tasks: Task[] = [];\n    const taskList = { title, tasks } as TaskList;\n    return this.http\n      .post(url, taskList)\n      .pipe(\n        tap((list: TaskList) =>\n          this.logger.log(`Added task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n\n  getTaskLists(): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    return this.http.get(url).pipe(\n      tap((lists: TaskList[]) => this.logger.log(`Fetched ${lists.length} task lists`)),\n      // catchError(error => of([]))\n    );\n  }\n\n  getTaskList(id: number): Observable {\n    const url = `${apiPrefix}/tasks/list/${id}`;\n    return this.http.get(url).pipe(\n      tap((list: TaskList) =>\n        this.logger.log(`Fetched task list \"${list.title}\" with id: ${list.id}`),\n      ),\n      // catchError(error => of(null))\n    );\n  }\n\n  updateTaskList(taskList: TaskList): Observable {\n    const url = `${apiPrefix}/tasks/list/${taskList.id}`;\n    return this.http\n      .patch(url, taskList)\n      .pipe(\n        tap((list: any) =>\n          this.logger.log(`Updated task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  template: `\n    \n      \n    \n  `,\n})\nexport class UsersComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [UsersComponent, ProfileComponent],\n  imports: [CommonModule, UsersRoutingModule, FontAwesomeModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersRoutingModule.html":{"url":"modules/UsersRoutingModule.html","title":"module - UsersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@app/auth/auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [{ path: '@me', component: ProfileComponent, canActivate: [AuthGuard] }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nexport const apiPrefix = '/api';\n\n@Injectable({ providedIn: 'root' })\nexport class UsersService {\n  constructor(private http: HttpClient) {}\n\n  getProfile() {\n    const url = `${apiPrefix}/users/@me`;\n    return this.http.get(url).pipe(\n      tap((value) => {\n        console.debug(UsersService.name, value);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            getEngine\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            __non_webpack_require__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            mainModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            variable\n            moduleFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api.ts\n            \n            variable\n            API_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            authModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            httpStatusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            tasksModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            usersModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            jwtOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            LogInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/connect-account-form/connect-account-form.component.ts\n            \n            component\n            ConnectAccountFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/logout-form/logout-form.component.ts\n            \n            component\n            LogoutFormComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/no-auth.guard.ts\n            \n            guard\n            NoAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/signup-form/signup-form.component.ts\n            \n            component\n            SignUpFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.component.ts\n            \n            component\n            SocialComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            interface\n            SocialService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/fontawesome-svg-nestjs.ts\n            \n            variable\n            faNestJs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.component.ts\n            \n            component\n            HttpStatusComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.service.ts\n            \n            injectable\n            HttpStatusService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/logger/logger.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/fake-tasks.service.ts\n            \n            injectable\n            FakeTasksService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.directive.ts\n            \n            directive\n            ModalDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.service.ts\n            \n            injectable\n            ModalService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task-list.model.ts\n            \n            interface\n            TaskList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/task-editor/task-editor.component.ts\n            \n            component\n            TaskEditorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list-editor/task-list-editor.component.ts\n            \n            component\n            TaskListEditorComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            fillInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getPropertyDescriptor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/platform-server : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.35\n        \n            @fortawesome/free-brands-svg-icons : ^5.15.3\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.3\n        \n            @ng-bootstrap/ng-bootstrap : ^11.0.0-beta.2\n        \n            @ng-web-apis/common : ^1.12.1\n        \n            @ng-web-apis/universal : ^1.12.0\n        \n            @nguniversal/express-engine : ^12.1.1\n        \n            bootstrap : ^5.1.3\n        \n            express : ^4.15.2\n        \n            rxjs : ^6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            fillInput   (src/.../utilities.ts)\n                        \n                        \n                            getElement   (src/.../utilities.ts)\n                        \n                        \n                            getEngine   (server.ts)\n                        \n                        \n                            getPropertyDescriptor   (src/.../utilities.ts)\n                        \n                        \n                            jwtOptionsFactory   (src/.../app.module.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     express.Express\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEngine\n                        \n                    \n                \n            \n            \n                \ngetEngine()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/testing/utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fillInput\n                        \n                    \n                \n            \n            \n                \nfillInput(fixture: ComponentFixture, name: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(fixture: ComponentFixture, selector: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropertyDescriptor\n                        \n                    \n                \n            \n            \n                \ngetPropertyDescriptor(spyObj, prop)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spyObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsFactory\n                        \n                    \n                \n            \n            \n                \njwtOptionsFactory(storage: Storage)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storage\n                                    \n                                            Storage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 12.2.10.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ComponentInputs   (src/.../modal.component.ts)\n                        \n                        \n                            ComponentOutputs   (src/.../modal.component.ts)\n                        \n                        \n                            SocialServiceType   (src/.../social.model.ts)\n                        \n                        \n                            UserInputs   (src/.../modal.service.ts)\n                        \n                        \n                            UserOutputs   (src/.../modal.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/modal/modal.component.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/auth/social/social.model.ts\n    \n    \n        \n            \n                \n                    \n                    SocialServiceType\n                \n            \n            \n                \n                        \"facebook\" | \"vkontakte\" | \"google\"\n\n                \n            \n        \n    \n    src/app/tasks/modal/modal.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __non_webpack_require__   (server.ts)\n                        \n                        \n                            API_PREFIX   (src/.../api.ts)\n                        \n                        \n                            apiPrefix   (src/.../tasks.service.ts)\n                        \n                        \n                            apiPrefix   (src/.../users.service.ts)\n                        \n                        \n                            authModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            faNestJs   (src/.../fontawesome-svg-nestjs.ts)\n                        \n                        \n                            httpStatusModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            jwtOptionsProvider   (src/.../app.module.ts)\n                        \n                        \n                            mainModule   (server.ts)\n                        \n                        \n                            moduleFilename   (server.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../social.model.ts)\n                        \n                        \n                            tasksModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            usersModule   (src/.../app-routing.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __non_webpack_require__\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeRequire\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : __non_webpack_require__.main\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moduleFilename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (mainModule && mainModule.filename) || ''\n                    \n                \n\n\n        \n    \n\n    src/app/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Prefix of API url', {\n  providedIn: 'root',\n  factory() {\n    return environment.apiPrefix;\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/tasks/tasks.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./auth/auth.module').then((m) => m.AuthModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpStatusModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./tasks/tasks.module').then((m) => m.TasksModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./users/users.module').then((m) => m.UsersModule)\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/footer/fontawesome-svg-nestjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  prefix: 'fac' as IconPrefix,\n  iconName: 'nestjs' as IconName,\n  icon: [\n    448, // width\n    448, // height\n    [], // ligatures\n    null as unknown as string, // unicode\n    'm263.7 0.719c-19.46-1.006 12.72 18.27 0.9988 31.26-12.27 9.077 1.416 48.88-0.1754 18.49 3.394-17.79 40.65-30.13 12.84-45.82-4.085-2.519-8.849-3.982-13.66-3.937zm36.82 6.6c2.612 21.62-22.83 25.37-30.1 41.57-7.03 10.09 7.383 30.46-10.16 19.39-43.53-18.22-93.79-20.75-138.8-6.832-19.24 7.155-35.65 19.74-48.85 35.29-15.63 19.33-42.43 17.06-61.63 28.8-12.65 9.918-16.46 32.73 0.3332 40.86 11.2 6.288 11.17 26.13 28.04 27.23-6.202 26.14 10.74 3.74 11.45 4.435-2.931 11.82 1.25 25.68 9.903 8.13 15.14-17.54 46-10.09 67.36-7.207 54.73 12.15 97.61 62.21 102.1 118-2.552-17.41-28.58-25.75-31.15-3.865-7.939 13.05-13.94 14.28-11.56-1.939-2.561-22.18-7.91 35.32-27.75 19.01-21.13-4.086-18.92-24.7-15.15-39.36-14.87-14.09-40.67 1.287-41.67 20.28-2.139 18.45 6.539 37.96 21.44 48.94-12.53 0.754-22.63 5.863-4.617 10.56 44.54 20.83 101.9 6.692 131.2-33.15 12.31-11.68 19.47-42.85 22.48-48.39 8.823 43.34-11.13 90.62-48.64 114.3 16.94 1.43 46.45-12.7 54.99-12.36-18.28 24.18-42.63 43.69-70.16 56.36 61.42-3.345 119.4-40.38 148.9-94.25-4.725 26.71-15.46 52.33-31.15 74.45 42.49-27.7 72-74.04 79.66-124.1 5.656 15.42 2.235 47.41 5.288 53.08 37.7-51.71 45.79-121.8 23.49-181.5-11.05-31.38-28.36-62.08-51-85.69-0.6852 46.85-49.77 83.93-95.06 73.29-19.79-3.334 18.03-3.495 22.35-10.31 40.9-18.81 56.67-75.35 30.92-112.4-9.929-15.05-25.53-26.42-42.38-32.54z', // svgPathData\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/social/social.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialService[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
