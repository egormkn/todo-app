var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.229,1,0.859]],["body/components/AppComponent.html",[0,0.386,1,1.53,2,1.575,3,0.191,4,0.167,5,1.271,6,1.271,7,0.167,8,3.704,9,1.211,10,2.065,11,2.061,12,2.337,13,1.652,14,0.216,15,0.018,16,0.241,17,0.191,18,0.267,19,1.271,20,1.652,21,1.652,22,1.05,23,1.943,24,1.271,25,0.763,26,1.271,27,1,28,1.271,29,1,30,1.101,31,1.101,32,1.943,33,1.05,34,1.271,35,1.05,36,1.271,37,1,38,0.821,39,1.271,40,1,41,1.271,42,1,43,1.101,44,1,45,0.907,46,1,47,1.271,48,1,49,1.271,50,1,51,1.101,52,1.05,53,1.271,54,1.05,55,1.271,56,1.155,57,1.311,58,1.652,59,1.05,60,1.271,61,1.05,62,1.05,63,1,64,1.271,65,1,66,1.155,67,1.211,68,1,69,1.211,70,1.271,71,0.014,72,0.014]],["title/modules/AppModule.html",[73,1.629,74,2.38]],["body/modules/AppModule.html",[1,1.709,3,0.174,4,0.152,7,0.152,11,1.048,14,0.369,15,0.019,16,0.219,17,0.233,18,0.242,33,1.66,35,1.66,40,1.582,71,0.013,72,0.013,74,4.809,75,1.471,76,2.588,77,3.361,78,3.361,79,3.361,80,3.361,81,4.38,82,2.929,83,2.18,84,1.818,85,2.729,86,3.377,87,2.312,88,2.922,89,4.03,90,1.721,91,2.312,92,3.91,93,2.729,94,2.729,95,4.516,96,3.91,97,2.18,98,2.18,99,3.377,100,1.21,101,1.21,102,4.03,103,2.08,104,2.334,105,2.929,106,1.926,107,2.18,108,2.514,109,3.361,110,3.91,111,3.91,112,3.361,113,2.999,114,3.361,115,2.18,116,1.269,117,3.91,118,3.91,119,3.91,120,1.548,121,0.999,122,4.03,123,2.999,124,3.361,125,2.729,126,3.361,127,3.361,128,3.361,129,2.729,130,2.999,131,3.361,132,3.91,133,3.91,134,3.91,135,3.91,136,3.361]],["title/modules/AppRoutingModule.html",[73,1.629,81,2.38]],["body/modules/AppRoutingModule.html",[0,0.276,3,0.198,4,0.173,7,0.173,14,0.335,15,0.019,16,0.25,17,0.198,18,0.276,40,1.33,66,1.196,71,0.014,72,0.014,75,1.679,81,3.682,87,1.963,91,2.521,112,3.834,121,1.765,137,3.422,138,2.487,139,5.728,140,3.682,141,4.068,142,1.679,143,3.777,144,4.461,145,3.194,146,3.834,147,3.834,148,3.194,149,3.834,150,3.834,151,3.194,152,3.834,153,3.834,154,3.194,155,3.834,156,2.487,157,3.834,158,3.834,159,4.439,160,3.834,161,3.834,162,3.422,163,6.677,164,3.682,165,2.334,166,4.461,167,4.461,168,6.328,169,4.461,170,4.461,171,4.461,172,2.867]],["title/modules/AppServerModule.html",[73,1.629,173,2.584]],["body/modules/AppServerModule.html",[1,1.712,3,0.223,4,0.195,7,0.195,14,0.359,15,0.019,16,0.281,17,0.223,18,0.311,71,0.015,72,0.015,74,4.681,75,1.89,76,3.04,82,3.441,83,2.8,84,2.336,87,2.716,88,3.04,91,2.716,93,3.505,103,1.989,106,2.474,109,4.317,173,5.149,174,4.317,175,5.022,176,5.022,177,5.022,178,6.171,179,3.505,180,6.171,181,4.317,182,5.022]],["title/components/AuthComponent.html",[0,0.229,27,0.859]],["body/components/AuthComponent.html",[0,0.386,1,1,2,1.575,3,0.191,4,0.167,5,1.271,6,1.271,7,0.167,9,1.211,10,2.065,11,2.061,13,1.652,14,0.216,15,0.018,16,0.241,17,0.191,18,0.267,19,1.271,20,1.652,21,1.652,22,1.05,23,1.943,24,1.271,25,0.763,26,1.271,27,1.53,28,1.271,29,1,30,1.101,31,1.101,32,1.943,33,1.05,34,1.271,35,1.05,36,1.271,37,1,38,0.821,39,1.271,40,1,41,1.271,42,1,43,1.101,44,1,45,0.907,46,1,47,1.271,48,1,49,1.271,50,1,51,1.101,52,1.05,53,1.271,54,1.05,55,1.271,56,1.155,57,1.311,58,1.652,59,1.05,60,1.271,61,1.05,62,1.05,63,1,64,1.271,65,1,66,1.155,67,1.211,68,1,69,1.211,70,1.271,71,0.014,72,0.014,162,4.297,183,3.704]],["title/guards/AuthGuard.html",[143,2.21,184,2.84]],["body/guards/AuthGuard.html",[3,0.194,4,0.17,7,0.17,12,1.827,14,0.314,15,0.019,16,0.245,17,0.194,18,0.271,25,0.769,71,0.014,72,0.014,116,2.036,120,1.734,121,1.119,142,1.648,143,3.379,164,4.262,185,3.359,186,3.764,187,0.472,188,1.252,189,5.7,190,0.793,191,3.359,192,3.921,193,2.439,194,1.257,195,4.379,196,1.023,197,0.632,198,1.257,199,5.661,200,6.152,201,6.152,202,6.152,203,4.379,204,3.379,205,1.252,206,2.633,207,4.866,208,4.379,209,1.447,210,2.442,211,1.927,212,1.291,213,1.734,214,1.231,215,3.379,216,4.379,217,1.827,218,4.379,219,4.379,220,4.379,221,3.764]],["title/interceptors/AuthInterceptor.html",[222,3.182,223,2.84]],["body/interceptors/AuthInterceptor.html",[3,0.216,4,0.189,7,0.189,14,0.33,15,0.019,16,0.273,17,0.216,18,0.302,25,0.597,71,0.015,72,0.015,90,2.145,116,1.967,121,1.548,129,4.601,187,0.526,188,1.34,194,0.977,196,0.795,197,0.491,198,0.977,205,1.078,209,1.548,212,1.437,223,4.647,224,4.875,225,4.19,226,6.059,227,6.059,228,6.896,229,6.896,230,4.875,231,4.19,232,3.449,233,4.875,234,6.059,235,2.145,236,6.592,237,4.875,238,4.875,239,4.875,240,4.875,241,4.875,242,4.875,243,4.875,244,4.875]],["title/modules/AuthModule.html",[73,1.629,145,2.064]],["body/modules/AuthModule.html",[3,0.181,4,0.159,7,0.159,14,0.374,15,0.019,16,0.229,17,0.181,18,0.253,27,1.602,29,1.602,30,1.045,31,1.383,42,1.602,43,1.045,44,1.602,45,0.861,50,1.602,51,1.045,52,1.681,71,0.013,72,0.013,75,1.538,76,2.666,82,3.017,83,2.279,84,1.901,86,3.479,87,2.381,88,2.014,89,4.151,90,1.799,91,2.381,99,3.479,100,1.265,101,1.265,102,4.151,103,1.619,104,2.44,108,2.628,145,4.237,162,3.136,245,3.514,246,3.514,247,3.514,248,4.436,249,4.088,250,3.777,251,2.44,252,2.854,253,5.55,254,2.854,255,4.088,256,4.652,257,2.44,258,3.514,259,2.854,260,2.854]],["title/interfaces/AuthResponse.html",[261,1.262,262,2.064]],["body/interfaces/AuthResponse.html",[3,0.146,4,0.127,7,0.127,12,1.368,14,0.34,15,0.019,16,0.184,17,0.276,18,0.203,25,0.57,38,0.625,45,0.69,71,0.011,72,0.011,90,1.443,97,1.828,98,1.828,103,1.298,105,1.828,106,1.615,107,1.828,115,1.828,116,2.201,121,1.733,187,0.354,190,0.594,193,1.118,196,0.535,197,0.331,206,2.164,209,1.189,211,1.443,214,1.814,215,2.777,232,2.829,235,1.443,261,2.005,262,2.594,263,1.716,264,1.957,265,1.189,266,3.782,267,2.124,268,2.594,269,2.108,270,1.957,271,1.828,272,2.108,273,2.379,274,1.957,275,2.991,276,2.108,277,1.828,278,1.828,279,3.015,280,2.594,281,1.828,282,2.594,283,1.957,284,1.828,285,1.828,286,2.108,287,1.941,288,2.108,289,2.108,290,2.108,291,2.108,292,1.525,293,2.108,294,2.108,295,2.108,296,2.991,297,2.108,298,2.108,299,2.434,300,1.133,301,2.991,302,2.108,303,2.108,304,2.108,305,2.108,306,2.108,307,3.078,308,2.108,309,2.991,310,2.991,311,3.476,312,2.777,313,2.991,314,2.777,315,3.227,316,2.108,317,1.449,318,3.476,319,3.476,320,2.108,321,2.108,322,2.108,323,1.615,324,2.108,325,2.991,326,2.108,327,2.108,328,2.108,329,2.108,330,1.828,331,2.777,332,2.108,333,2.108,334,1.957,335,2.108,336,2.108,337,2.108,338,1.957,339,2.108,340,2.991,341,2.991,342,2.108,343,2.108,344,2.108]],["title/modules/AuthRoutingModule.html",[73,1.629,248,2.38]],["body/modules/AuthRoutingModule.html",[0,0.433,3,0.191,4,0.166,7,0.166,14,0.366,15,0.019,16,0.24,17,0.191,18,0.266,27,1.297,29,1.442,30,1.097,31,1.428,42,1.297,43,1.587,44,1.297,45,1.176,50,1.297,51,1.428,71,0.014,72,0.014,75,1.615,87,1.889,91,2.459,121,1.097,138,2.393,140,3.592,141,3.993,142,1.615,143,3.335,159,4.579,160,3.689,161,3.689,164,4.386,172,2.759,197,0.563,248,3.592,252,2.996,253,5.656,254,2.996,258,3.689,259,2.996,260,2.996,345,4.292,346,5.587,347,4.762,348,3.689,349,3.592,350,4.286,351,3.9,352,3.292,353,2.996]],["title/injectables/AuthService.html",[193,1.262,209,0.946]],["body/injectables/AuthService.html",[3,0.116,4,0.102,7,0.102,12,1.092,14,0.319,15,0.019,16,0.147,17,0.252,18,0.162,25,0.78,30,1.008,38,0.905,43,1.008,45,1.113,51,1.008,71,0.01,72,0.01,90,1.152,97,1.46,98,1.46,103,1.037,105,1.46,106,1.289,107,1.46,115,2.647,116,2.067,121,1.627,187,0.282,188,0.872,190,0.714,193,1.344,194,1.384,196,1.062,197,0.642,198,1.194,205,1.468,206,2.458,209,1.008,211,1.152,214,1.79,215,3.384,232,2.966,235,1.152,261,1.801,262,1.46,264,1.563,265,1.008,266,1.683,267,2.129,268,2.947,269,1.683,270,1.563,271,1.46,272,1.683,273,2.722,274,1.563,275,3.397,276,1.683,277,1.46,278,1.46,279,3.161,280,2.2,281,1.46,282,2.947,283,1.563,284,1.46,285,1.46,286,3.052,287,1.98,288,2.536,289,3.052,290,2.536,291,1.683,292,1.835,293,1.683,294,3.052,295,3.052,296,2.536,297,1.683,298,2.536,299,2.765,300,1.287,301,3.052,302,1.683,303,1.683,304,1.683,305,1.683,306,2.536,307,2.765,308,1.683,309,2.536,310,2.536,311,3.052,312,2.355,313,2.536,314,2.355,315,2.834,316,1.683,317,1.52,318,3.052,319,3.052,320,2.536,321,1.683,322,1.683,323,1.289,324,2.536,325,2.536,326,1.683,327,1.683,328,1.683,329,2.536,330,2.647,331,2.355,332,1.683,333,1.683,334,1.563,335,1.683,336,1.683,337,1.683,338,3.155,339,3.397,340,2.536,341,2.536,342,1.683,343,3.397,344,1.683,350,3.026,354,1.369,355,3.945,356,3.945,357,2.618,358,3.945,359,2.618,360,2.618,361,2.618,362,2.618,363,2.618,364,2.618,365,2.618,366,2.618,367,2.618,368,2.618,369,1.412,370,2.618]],["title/components/ConnectAccountFormComponent.html",[0,0.229,29,0.859]],["body/components/ConnectAccountFormComponent.html",[0,0.324,1,0.718,2,1.254,3,0.137,4,0.12,5,0.911,6,0.911,7,0.12,9,0.869,10,2.001,11,1.994,13,0.911,14,0.304,15,0.019,16,0.173,17,0.137,18,0.191,19,0.911,20,1.315,21,1.315,22,0.753,23,1.689,24,0.911,25,0.702,26,0.911,27,0.718,28,0.911,29,1.329,30,1.706,31,1.879,32,1.689,33,0.753,34,0.911,35,0.753,36,0.911,37,0.718,38,0.589,39,0.911,40,0.718,41,0.911,42,0.718,43,0.79,44,0.718,45,0.651,46,0.718,47,0.911,48,0.718,49,0.911,50,0.718,51,0.79,52,0.753,53,0.911,54,0.753,55,0.911,56,0.829,57,1.102,58,1.315,59,0.753,60,0.911,61,0.753,62,0.753,63,0.718,64,0.911,65,0.718,66,0.829,67,0.869,68,0.718,69,0.869,70,0.911,71,0.011,72,0.011,100,0.956,101,0.956,120,1.766,121,1.337,142,1.163,187,0.333,188,0.986,190,0.808,191,2.371,192,3.528,193,2.223,194,1.148,196,0.504,197,0.527,198,0.619,204,3.123,205,0.684,210,1.723,212,1.315,214,1.471,260,4.239,265,1.14,267,0.911,300,1.086,317,1.195,331,1.845,369,1.596,371,1.107,372,5.22,373,1.987,374,1.969,375,3.113,376,1.596,377,4.013,378,1.596,379,3.421,380,3.412,381,3.363,382,2.155,383,3.998,384,2.182,385,2.389,386,3.833,387,3.091,388,3.091,389,1.987,390,1.163,391,1.289,392,1.003,393,1.163,394,2.657,395,3.091,396,3.091,397,3.091,398,3.091,399,3.091,400,3.091,401,3.091,402,2.657,403,3.091,404,2.371,405,2.371,406,3.091,407,3.091]],["title/injectables/FakeTasksService.html",[209,0.946,408,2.584]],["body/injectables/FakeTasksService.html",[3,0.093,4,0.081,7,0.081,14,0.273,15,0.019,16,0.118,17,0.093,18,0.13,25,0.747,57,1.477,62,1.777,71,0.008,72,0.008,106,1.034,116,1.663,120,2.473,165,3.487,187,0.227,188,0.736,190,0.38,194,1.187,196,0.835,197,0.576,198,1.026,205,1.133,209,0.85,212,0.619,213,0.831,214,1.532,217,2.273,232,2.987,235,0.924,265,0.85,273,2.398,292,0.977,317,0.892,354,1.099,369,1.191,408,2.322,409,5.242,410,1.805,411,3.169,412,4.7,413,3.327,414,3.327,415,3.327,416,2.1,417,2.1,418,2.1,419,3.327,420,2.851,421,2.1,422,2.466,423,3.327,424,6.247,425,2.1,426,5.45,427,5.242,428,3.327,429,2.1,430,3.327,431,2.1,432,5.041,433,3.06,434,3.178,435,3.327,436,3.327,437,3.978,438,3.327,439,3.327,440,5.09,441,7.62,442,3.605,443,6.484,444,3.327,445,3.327,446,6.484,447,3.327,448,3.327,449,2.1,450,5,451,5.851,452,5.851,453,3.327,454,3.327,455,4.18,456,5.45,457,4.7,458,4.7,459,4.04,460,2.1,461,3.327,462,1.466,463,2.1,464,1.805,465,1.35,466,1.35,467,1.466,468,2.1,469,2.1,470,2.1,471,2.1,472,1.805,473,4.131,474,4.131]],["title/components/FooterComponent.html",[0,0.229,33,0.902]],["body/components/FooterComponent.html",[0,0.36,1,0.871,2,1.437,3,0.167,4,0.146,5,1.107,6,1.107,7,0.146,9,1.055,10,2.04,11,2.035,13,1.107,14,0.313,15,0.019,16,0.21,17,0.167,18,0.233,19,1.107,20,1.507,21,1.507,22,0.914,23,1.839,24,1.107,25,0.764,26,1.107,27,0.871,28,1.107,29,0.871,30,0.959,31,0.959,32,1.839,33,1.519,34,1.107,35,0.914,36,1.107,37,0.871,38,0.715,39,1.107,40,0.871,41,1.107,42,0.871,43,0.959,44,0.871,45,0.79,46,0.871,47,1.107,48,0.871,49,1.107,50,0.871,51,0.959,52,0.914,53,1.107,54,0.914,55,1.107,56,1.006,57,1.223,58,1.507,59,0.914,60,1.107,61,0.914,62,0.914,63,0.871,64,1.107,65,0.871,66,1.006,67,1.055,68,0.871,69,1.055,70,1.107,71,0.012,72,0.012,100,1.161,101,1.581,187,0.405,190,0.68,194,1.164,196,0.612,197,0.378,198,0.752,265,1.306,317,1.37,369,1.829,371,1.344,376,1.829,378,1.829,384,1.566,385,2.602,390,1.413,392,1.659,393,1.413,475,3.226,476,4.393,477,5.81,478,5.11,479,6.732,480,5.284,481,5.11,482,5.11,483,3.753,484,2.879,485,2.879,486,3.753,487,5.11]],["title/components/HeaderComponent.html",[0,0.229,35,0.902]],["body/components/HeaderComponent.html",[0,0.316,1,0.687,2,1.215,3,0.131,4,0.115,5,0.873,6,0.873,7,0.115,9,0.832,10,1.991,11,1.984,13,0.873,14,0.299,15,0.019,16,0.166,17,0.131,18,0.183,19,0.873,20,1.274,21,1.274,22,0.721,23,1.655,24,0.873,25,0.838,26,0.873,27,0.687,28,0.873,29,0.687,30,0.756,31,0.756,32,1.655,33,0.721,34,0.873,35,1.367,36,0.873,37,0.687,38,0.564,39,0.873,40,0.687,41,0.873,42,0.687,43,0.756,44,0.687,45,0.623,46,0.687,47,0.873,48,0.687,49,0.873,50,0.687,51,0.756,52,0.721,53,0.873,54,0.721,55,0.873,56,0.793,57,1.075,58,1.274,59,0.721,60,0.873,61,0.721,62,0.721,63,0.687,64,0.873,65,0.687,66,0.793,67,0.832,68,0.687,69,0.832,70,0.873,71,0.01,72,0.01,84,2.009,100,0.915,101,0.915,120,1.711,187,0.319,188,0.955,190,0.536,193,2.124,194,1.322,196,0.704,197,0.566,198,1.249,205,1.129,206,2.373,212,1.274,213,1.172,217,1.802,235,1.302,265,1.104,267,1.274,300,1.367,317,1.158,323,2.128,369,1.547,371,1.059,374,1.921,376,1.547,378,1.547,382,2.112,384,2.129,385,2.341,390,1.114,391,1.234,392,0.961,393,1.114,427,2.544,433,1.376,488,2.544,489,3.915,490,5.13,491,5.104,492,4.321,493,4.387,494,5.104,495,5.532,496,4.305,497,3.714,498,2.066,499,4.321,500,2.959,501,2.959,502,3.714,503,2.959,504,5.357,505,2.959,506,2.959,507,2.959,508,2.544,509,4.321,510,4.321,511,2.066,512,3.314,513,3.714,514,2.066,515,2.959,516,2.544,517,2.544,518,2.959,519,2.544,520,2.544,521,4.321,522,2.959,523,2.959,524,2.544,525,3.714,526,4.321,527,3.714,528,3.607,529,3.314,530,2.959,531,2.959,532,3.314,533,2.27,534,2.959]],["title/components/HttpStatusComponent.html",[0,0.229,37,0.859]],["body/components/HttpStatusComponent.html",[0,0.3,1,0.629,2,1.138,3,0.12,4,0.105,5,0.799,6,0.799,7,0.105,9,0.762,10,1.97,11,1.962,13,0.799,14,0.314,15,0.019,16,0.152,17,0.12,18,0.168,19,0.799,20,1.194,21,1.194,22,0.66,23,1.586,24,0.799,25,0.659,26,0.799,27,0.629,28,0.799,29,0.629,30,0.693,31,0.693,32,1.586,33,0.66,34,0.799,35,0.66,36,0.799,37,1.248,38,1.253,39,0.799,40,0.629,41,0.799,42,0.629,43,0.693,44,0.629,45,0.571,46,0.629,47,0.799,48,0.629,49,0.799,50,0.629,51,0.693,52,0.66,53,0.799,54,0.66,55,0.799,56,0.726,57,1.021,58,1.194,59,0.66,60,0.799,61,0.66,62,0.66,63,0.629,64,0.799,65,0.629,66,0.726,67,0.762,68,0.629,69,0.762,70,0.799,71,0.01,72,0.01,100,0.838,101,0.838,121,0.693,130,2.079,142,1.02,156,3.586,179,3.753,187,0.292,188,0.895,190,0.733,194,1.254,196,0.442,197,0.542,198,0.543,204,2.893,205,0.895,212,1.194,214,1.363,217,1.689,231,3.48,251,1.618,265,1.035,267,1.194,300,1.181,317,1.441,369,1.925,371,0.97,374,1.824,376,1.449,378,1.449,380,3.158,382,2.024,383,3.753,384,2.022,385,2.243,390,1.02,391,1.13,392,0.88,393,1.02,422,1.618,450,4.017,455,2.079,535,4.135,536,2.329,537,3.106,538,4.847,539,4.049,540,4.214,541,4.847,542,4.947,543,5.377,544,2.71,545,3.753,546,6.257,547,4.049,548,4.049,549,2.71,550,2.71,551,5.377,552,2.71,553,2.71,554,5.377,555,2.71,556,2.329,557,4.049,558,2.71,559,2.71,560,4.049,561,2.71,562,4.049,563,2.71,564,4.049,565,2.71,566,2.71,567,4.049,568,2.71,569,2.71,570,2.329,571,2.71,572,2.71,573,3.48,574,4.049,575,2.329,576,2.329,577,2.71,578,3.48,579,2.079,580,2.079,581,2.71,582,2.71,583,2.71,584,2.329,585,2.71]],["title/modules/HttpStatusModule.html",[73,1.629,154,2.064]],["body/modules/HttpStatusModule.html",[3,0.214,4,0.187,7,0.187,14,0.354,15,0.019,16,0.269,17,0.214,18,0.298,37,1.673,38,1.145,71,0.015,72,0.015,75,1.81,76,2.959,82,3.35,83,2.681,84,2.237,86,3.862,87,2.644,91,2.644,99,3.862,100,1.488,101,1.488,108,3.091,127,5.164,128,5.164,129,4.193,130,4.609,131,5.164,154,4.12,156,2.681,250,4.193,251,2.871,535,3.091,537,3.689,586,4.134,587,4.134,588,4.134,589,4.632,590,4.809,591,4.134]],["title/modules/HttpStatusRoutingModule.html",[73,1.629,589,2.38]],["body/modules/HttpStatusRoutingModule.html",[0,0.325,3,0.233,4,0.203,7,0.203,14,0.341,15,0.019,16,0.293,17,0.233,18,0.325,37,1.47,38,0.999,71,0.015,72,0.015,75,1.973,87,2.307,91,2.788,121,1.34,138,2.923,140,4.072,141,4.376,142,1.973,156,2.923,159,3.37,172,3.37,350,4.021,353,3.659,535,3.37,537,4.021,540,3.659,542,4.506,589,4.072,591,4.506,592,5.242,593,5.242]],["title/injectables/HttpStatusService.html",[209,0.946,545,2.584]],["body/injectables/HttpStatusService.html",[3,0.215,4,0.188,7,0.188,12,2.024,14,0.33,15,0.019,16,0.272,17,0.215,18,0.301,25,0.74,71,0.015,72,0.015,156,3.668,187,0.523,188,1.336,190,0.879,194,1.211,196,0.985,197,0.609,198,1.318,205,1.073,209,1.544,211,2.135,214,1.364,270,2.896,300,1.472,314,4.228,354,2.539,422,3.927,535,4.229,540,3.387,545,4.217,570,5.193,594,4.171,595,5.047,596,6.042,597,4.853,598,4.853,599,6.042,600,4.853,601,4.171,602,4.853,603,4.171,604,4.853,605,4.853,606,4.853,607,4.853]],["title/components/IndexComponent.html",[0,0.229,40,0.859]],["body/components/IndexComponent.html",[0,0.308,1,0.657,2,1.176,3,0.126,4,0.227,5,0.835,6,0.835,7,0.11,9,0.796,10,1.981,11,1.973,13,0.835,14,0.307,15,0.019,16,0.158,17,0.126,18,0.175,19,0.835,20,1.233,21,1.233,22,0.69,23,1.62,24,0.835,25,0.718,26,0.835,27,0.657,28,0.835,29,0.657,30,0.723,31,0.723,32,1.62,33,0.69,34,0.835,35,0.69,36,0.835,37,0.657,38,0.539,39,0.835,40,1.275,41,0.835,42,0.657,43,0.723,44,0.657,45,0.596,46,0.657,47,0.835,48,0.657,49,0.835,50,0.657,51,0.723,52,0.69,53,0.835,54,0.69,55,0.835,56,0.759,57,1.047,58,1.233,59,0.69,60,0.835,61,0.69,62,1.212,63,0.657,64,0.835,65,0.657,66,0.759,67,0.796,68,0.657,69,0.796,70,0.835,71,0.01,72,0.01,84,1.945,93,1.976,94,1.976,100,0.876,101,0.876,120,1.656,165,2.188,187,0.537,188,0.925,190,0.757,193,2.091,194,1.229,196,0.682,197,0.501,198,1.101,205,1.1,206,2.313,212,1.233,214,1.176,235,1.246,265,1.069,292,2.555,300,1.338,317,0.759,323,2.706,369,1.013,371,1.013,374,1.872,376,1.497,378,1.497,382,2.067,384,2.075,385,2.292,390,1.065,391,1.181,392,0.919,393,1.065,434,2.418,462,2.919,485,3.208,489,3.815,493,4.276,495,5.038,496,4.214,497,3.595,498,1.976,502,3.595,504,4.276,508,2.434,516,2.434,517,2.434,519,2.434,520,2.434,524,2.434,528,2.689,529,3.208,608,2.434,609,4.974,610,4.183,611,4.974,612,4.183,613,2.831,614,2.831,615,2.831,616,2.831,617,4.183,618,2.831,619,4.183,620,2.831,621,2.831,622,4.183,623,5.494,624,4.183,625,4.183,626,4.183,627,4.183,628,4.183,629,3.595,630,4.183,631,4.183,632,4.183,633,4.183,634,4.183,635,3.208,636,4.183,637,4.183,638,4.183,639,5.494,640,4.183,641,4.183,642,4.183,643,3.208,644,3.595,645,4.183,646,4.183,647,3.595,648,5.494,649,4.183,650,4.183,651,4.183,652,2.689,653,3.595]],["title/interfaces/JwtPayload.html",[261,1.262,285,2.064]],["body/interfaces/JwtPayload.html",[3,0.144,4,0.126,7,0.126,12,1.353,14,0.339,15,0.019,16,0.182,17,0.275,18,0.201,25,0.758,38,0.618,45,0.683,71,0.011,72,0.011,90,1.428,97,1.809,98,1.809,103,1.285,105,1.809,106,1.598,107,1.809,115,1.809,116,2.195,121,1.728,187,0.35,190,0.588,193,1.106,196,0.529,197,0.466,206,2.147,209,1.18,211,1.428,214,1.808,215,2.756,232,2.812,235,1.428,261,1.996,262,1.809,263,1.697,264,1.937,265,1.18,266,2.086,267,2.15,268,2.574,269,2.086,270,1.937,271,1.809,272,2.086,273,2.365,274,1.937,275,2.968,276,2.086,277,1.809,278,1.809,279,2.997,280,3.45,281,1.809,282,2.574,283,1.937,284,1.809,285,2.574,286,2.086,287,1.926,288,2.086,289,2.086,290,2.086,291,2.086,292,1.509,293,2.086,294,2.086,295,2.086,296,2.968,297,2.086,298,2.086,299,2.416,300,1.125,301,2.968,302,2.086,303,2.086,304,2.086,305,2.086,306,2.086,307,3.063,308,2.086,309,2.968,310,2.968,311,3.455,312,2.756,313,2.968,314,2.756,315,3.208,316,2.086,317,1.441,318,3.455,319,3.455,320,2.086,321,2.086,322,2.086,323,1.598,324,2.086,325,2.968,326,2.086,327,2.086,328,2.086,329,2.086,330,1.809,331,2.756,332,2.086,333,2.086,334,1.937,335,2.086,336,2.086,337,2.086,338,1.937,339,2.086,340,2.968,341,2.968,342,2.086,343,2.086,344,2.086]],["title/interfaces/LogInDto.html",[261,1.262,279,2.064]],["body/interfaces/LogInDto.html",[3,0.144,4,0.126,7,0.126,12,1.353,14,0.339,15,0.019,16,0.182,17,0.275,18,0.201,25,0.566,38,0.618,45,0.683,71,0.011,72,0.011,90,1.428,97,1.809,98,1.809,103,1.285,105,1.809,106,1.598,107,1.809,115,1.809,116,2.195,121,1.728,187,0.35,190,0.588,193,1.106,196,0.529,197,0.466,206,2.147,209,1.18,211,1.428,214,1.808,215,2.756,232,2.812,235,1.428,261,1.996,262,1.809,263,1.697,264,1.937,265,1.18,266,2.086,267,2.15,268,2.574,269,2.086,270,1.937,271,1.809,272,2.086,273,2.365,274,1.937,275,2.968,276,2.086,277,1.809,278,1.809,279,3.265,280,3.45,281,3.265,282,2.574,283,1.937,284,1.809,285,1.809,286,2.086,287,1.926,288,2.086,289,2.086,290,2.086,291,2.086,292,1.509,293,2.086,294,2.086,295,2.086,296,2.968,297,2.086,298,2.086,299,2.416,300,1.125,301,2.968,302,2.086,303,2.086,304,2.086,305,2.086,306,2.086,307,3.063,308,2.086,309,2.968,310,2.968,311,3.455,312,2.756,313,2.968,314,2.756,315,3.208,316,2.086,317,1.441,318,3.455,319,3.455,320,2.086,321,2.086,322,2.086,323,1.598,324,2.086,325,2.968,326,2.086,327,2.086,328,2.086,329,2.086,330,1.809,331,2.756,332,2.086,333,2.086,334,1.937,335,2.086,336,2.086,337,2.086,338,1.937,339,2.086,340,2.968,341,2.968,342,2.086,343,2.086,344,2.086]],["title/injectables/Logger.html",[209,0.946,273,1.629]],["body/injectables/Logger.html",[3,0.221,4,0.193,7,0.193,12,2.076,14,0.249,15,0.019,16,0.279,17,0.221,18,0.308,25,0.815,71,0.015,72,0.015,187,0.537,188,1.357,194,1.333,196,1.085,197,0.671,198,1.333,205,1.471,209,1.568,211,2.19,273,2.7,300,1.621,354,2.603,380,3.21,528,3.945,654,4.277,655,6.136,656,6.136,657,4.976,658,6.654,659,6.136,660,4.976,661,6.136,662,4.976,663,4.976,664,4.976,665,4.976]],["title/components/LoginFormComponent.html",[0,0.229,42,0.859]],["body/components/LoginFormComponent.html",[0,0.27,1,0.528,2,0.996,3,0.101,4,0.088,5,0.671,6,0.671,7,0.088,9,0.64,10,1.925,11,1.915,13,0.671,14,0.295,15,0.019,16,0.127,17,0.101,18,0.141,19,0.671,20,1.045,21,1.045,22,0.554,23,1.448,24,0.671,25,0.602,26,0.671,27,0.528,28,0.671,29,0.528,30,0.581,31,1.112,32,1.448,33,0.554,34,0.671,35,0.554,36,0.671,37,0.528,38,0.434,39,0.671,40,0.528,41,0.671,42,1.14,43,1.555,44,0.528,45,0.479,46,0.528,47,0.671,48,0.528,49,0.671,50,0.528,51,0.581,52,0.554,53,0.671,54,0.554,55,0.671,56,0.61,57,0.916,58,1.045,59,0.554,60,0.671,61,0.554,62,0.554,63,0.528,64,0.671,65,0.528,66,0.61,67,0.64,68,0.528,69,0.64,70,0.671,71,0.009,72,0.009,100,0.704,101,0.704,116,0.739,120,1.723,142,0.856,187,0.382,188,0.783,190,0.642,192,3.282,193,2.006,194,1.22,196,0.371,197,0.537,198,1.066,204,2.597,205,0.783,210,1.268,212,1.045,214,1.496,217,1.815,252,4.365,257,1.358,265,0.905,267,1.448,273,2.59,274,1.358,280,3.143,281,3.394,284,1.975,300,1.06,317,0.95,330,1.268,352,3.338,369,1.268,371,0.814,373,1.462,374,1.637,375,4.249,376,1.268,377,3.338,378,1.268,379,2.718,380,2.276,381,2.797,382,1.848,383,3.428,384,1.815,385,2.049,386,1.956,389,2.277,390,0.856,391,0.949,392,0.739,393,0.856,404,1.745,433,2.024,437,1.358,442,2.718,511,1.588,512,2.718,514,1.588,528,3.421,532,3.338,533,3.338,643,2.718,666,5.375,667,3.338,668,4.351,669,3.767,670,2.718,671,3.338,672,1.745,673,3.767,674,3.543,675,2.718,676,1.956,677,1.956,678,2.275,679,2.718,680,3.767,681,3.045,682,2.275,683,1.745,684,1.956,685,1.745,686,1.745,687,1.956,688,1.956,689,1.956,690,3.428,691,2.275,692,2.275,693,2.275,694,2.275,695,2.275,696,1.956,697,2.275,698,1.956,699,3.045,700,1.956,701,1.956,702,2.718,703,2.718,704,2.718,705,2.718,706,3.767,707,2.718,708,2.718,709,3.543,710,1.956,711,4.324,712,1.956,713,1.956,714,1.956,715,1.956,716,1.956,717,1.956,718,1.956,719,3.045,720,3.045,721,3.045,722,1.956,723,3.045,724,1.956,725,1.956,726,1.956,727,1.588,728,1.956,729,3.74,730,4.797,731,4.575,732,4.222,733,1.745,734,3.74,735,4.222,736,1.956,737,3.74]],["title/components/LogoutFormComponent.html",[0,0.229,44,0.859]],["body/components/LogoutFormComponent.html",[0,0.364,1,0.891,2,1.459,3,0.17,4,0.149,5,1.132,6,1.132,7,0.149,9,1.08,10,2.044,11,2.04,13,1.132,14,0.295,15,0.018,16,0.215,17,0.17,18,0.238,19,1.132,20,1.53,21,1.53,22,0.935,23,1.857,24,1.132,25,0.772,26,1.132,27,0.891,28,1.132,29,0.891,30,0.981,31,0.981,32,1.857,33,0.935,34,1.132,35,0.935,36,1.132,37,0.891,38,0.732,39,1.132,40,0.891,41,1.132,42,0.891,43,0.981,44,1.462,45,1.238,46,0.891,47,1.132,48,0.891,49,1.132,50,0.891,51,0.981,52,0.935,53,1.132,54,0.935,55,1.132,56,1.029,57,1.238,58,1.53,59,0.935,60,1.132,61,0.935,62,0.935,63,0.891,64,1.132,65,0.891,66,1.029,67,1.08,68,0.891,69,1.08,70,1.132,71,0.013,72,0.013,142,1.445,187,0.414,188,1.148,190,0.695,192,3.864,193,2.31,194,1.04,196,0.626,197,0.387,198,0.77,205,0.849,210,2.141,212,1.53,213,1.521,214,1.08,259,4.103,300,1.264,373,2.469,374,2.212,375,3.623,382,2.37,402,3.301,498,2.681,738,5.053,739,3.84,740,3.84,741,3.84]],["title/components/ModalComponent.html",[0,0.229,46,0.859]],["body/components/ModalComponent.html",[0,0.342,1,0.504,2,0.96,3,0.096,4,0.084,5,0.64,6,0.64,7,0.084,9,0.611,10,1.912,11,1.902,13,0.64,14,0.24,15,0.019,16,0.122,17,0.096,18,0.135,19,0.64,20,1.007,21,1.007,22,0.529,23,1.412,24,0.64,25,0.709,26,0.64,27,0.504,28,0.64,29,0.504,30,0.555,31,0.555,32,1.412,33,0.529,34,0.64,35,0.529,36,0.64,37,0.504,38,0.414,39,0.64,40,0.504,41,0.64,42,0.504,43,0.555,44,0.504,45,0.457,46,1.112,47,0.64,48,0.504,49,0.64,50,0.504,51,0.555,52,0.529,53,0.64,54,0.529,55,0.64,56,0.582,57,0.889,58,1.007,59,0.529,60,0.64,61,0.529,62,0.529,63,0.504,64,0.64,65,0.504,66,0.582,67,0.611,68,1.112,69,1.554,70,0.64,71,0.008,72,0.008,88,1.07,103,0.86,104,1.296,113,2.621,121,1.478,187,0.234,188,0.755,190,0.619,194,1.31,196,0.781,197,0.702,198,0.959,205,1.151,212,1.007,214,1.626,217,1.425,265,0.873,267,1.412,287,1.997,300,1.46,312,2.039,317,1.482,330,1.905,369,1.512,371,0.777,374,1.802,376,1.223,378,1.223,380,1.787,382,1.802,405,1.666,433,1.01,434,2.637,462,1.516,489,3.673,496,3.673,595,3.24,742,1.666,743,4.223,744,3.416,745,4.789,746,3.416,747,3.416,748,4.223,749,3.766,750,4.972,751,4.182,752,2.172,753,5.207,754,5.784,755,3.416,756,2.172,757,4.437,758,2.172,759,4.437,760,2.172,761,2.172,762,3.416,763,5.298,764,4.972,765,2.172,766,3.416,767,3.416,768,4.972,769,2.172,770,2.172,771,2.172,772,2.172,773,2.172,774,2.172,775,2.172,776,3.416,777,3.416,778,3.416,779,3.342,780,3.718,781,2.172,782,2.172,783,2.172,784,2.172,785,2.172,786,3.416,787,2.172,788,2.172,789,2.172,790,2.172,791,2.172,792,3.63,793,2.172,794,2.172,795,3.416,796,4.223,797,4.223,798,2.172,799,1.867,800,2.172,801,2.172,802,2.172,803,2.172,804,3.416,805,2.172,806,2.172,807,2.172,808,2.172,809,3.416,810,3.416,811,3.416,812,2.172,813,2.172,814,5.529,815,3.416,816,4.789,817,3.416,818,2.172,819,4.789,820,2.172,821,4.223,822,3.63,823,3.416,824,3.416,825,3.416,826,2.172,827,2.172,828,2.172,829,4.223,830,2.621,831,2.172,832,3.416,833,2.172,834,2.172,835,2.172,836,2.172]],["title/directives/ModalDirective.html",[22,0.902,68,0.859]],["body/directives/ModalDirective.html",[3,0.234,4,0.205,7,0.205,9,1.485,10,1.705,14,0.265,15,0.018,16,0.296,17,0.234,18,0.327,22,1.55,25,0.647,67,1.485,68,1.477,69,1.789,71,0.015,72,0.015,187,0.57,190,0.956,194,1.275,196,0.861,197,0.642,198,1.058,265,1.626,595,4.881,799,6.506,837,4.539,838,5.281,839,5.281,840,5.281,841,5.281]],["title/injectables/ModalService.html",[209,0.946,842,1.937]],["body/injectables/ModalService.html",[3,0.183,4,0.159,7,0.159,14,0.305,15,0.019,16,0.23,17,0.27,18,0.255,25,0.666,46,0.954,71,0.013,72,0.013,88,2.025,103,1.628,104,2.454,116,1.335,121,1.051,187,0.444,188,1.201,190,0.745,194,1.219,196,0.992,197,0.73,198,1.088,205,1.201,209,1.388,213,1.628,217,2.266,267,1.984,283,3.242,300,1.002,317,1.102,354,2.151,369,1.472,434,2.677,644,5.229,749,3.863,750,5.563,751,4.517,757,4.964,759,4.964,763,5.229,779,4.246,822,4.669,842,2.842,843,3.154,844,6.472,845,4.112,846,6.472,847,4.112,848,5.432,849,4.112,850,4.112,851,4.112,852,4.112,853,5.432,854,6.084,855,5.432,856,4.112,857,4.112,858,5.432,859,4.112,860,4.112,861,4.112,862,4.112,863,4.112,864,4.112]],["title/guards/NoAuthGuard.html",[184,2.84,347,2.584]],["body/guards/NoAuthGuard.html",[3,0.198,4,0.173,7,0.173,12,1.865,14,0.317,15,0.019,16,0.25,17,0.198,18,0.277,25,0.776,71,0.014,72,0.014,116,1.862,121,1.142,142,1.682,164,4.296,185,3.429,187,0.482,188,1.268,189,5.744,190,0.809,191,3.429,192,3.943,193,2.451,194,1.269,196,1.033,197,0.639,198,1.269,200,6.181,201,5.744,202,6.181,204,2.668,205,1.268,207,4.931,209,1.466,210,2.492,211,1.967,212,1.318,213,1.77,214,1.257,221,3.842,338,3.424,347,4.004,865,5.744,866,3.842,867,4.47,868,5.736,869,6.334,870,4.47,871,4.47,872,4.47,873,4.47]],["title/components/ProfileComponent.html",[0,0.229,48,0.859]],["body/components/ProfileComponent.html",[0,0.35,1,0.827,2,1.386,3,0.158,4,0.138,5,1.05,6,1.05,7,0.138,9,1.001,10,2.03,11,2.025,13,1.05,14,0.306,15,0.019,16,0.199,17,0.158,18,0.221,19,1.05,20,1.453,21,1.453,22,0.867,23,1.799,24,1.05,25,0.748,26,1.05,27,0.827,28,1.05,29,0.827,30,0.91,31,0.91,32,1.799,33,0.867,34,1.05,35,0.867,36,1.05,37,0.827,38,0.679,39,1.05,40,0.827,41,1.05,42,0.827,43,0.91,44,0.827,45,0.75,46,0.827,47,1.05,48,1.416,49,1.05,50,0.827,51,0.91,52,0.867,53,1.05,54,0.867,55,1.05,56,0.955,57,1.19,58,1.453,59,0.867,60,1.05,61,0.867,62,0.867,63,0.827,64,1.05,65,0.827,66,0.955,67,1.001,68,0.827,69,1.001,70,1.05,71,0.012,72,0.012,100,1.102,101,1.102,187,0.384,188,1.09,190,0.645,194,1.133,196,0.581,197,0.497,198,0.714,205,0.787,212,1.453,213,1.41,265,1.26,300,1.201,371,1.275,374,2.127,376,1.764,378,1.764,382,2.296,384,2.358,385,2.545,389,3.168,390,1.34,391,1.485,392,1.156,393,1.34,511,2.486,512,3.781,514,2.486,527,4.237,874,3.061,875,5.653,876,4.929,877,6.625,878,3.561,879,4.624,880,4.929,881,3.561,882,3.561,883,3.561,884,3.561,885,4.929,886,4.929]],["title/interfaces/SignUpDto.html",[261,1.262,282,2.064]],["body/interfaces/SignUpDto.html",[3,0.144,4,0.125,7,0.125,12,1.349,14,0.339,15,0.019,16,0.181,17,0.274,18,0.2,25,0.757,38,0.616,45,0.681,71,0.011,72,0.011,90,1.424,97,1.804,98,1.804,103,1.281,105,1.804,106,1.593,107,1.804,115,1.804,116,2.194,121,1.727,187,0.349,190,0.586,193,1.102,196,0.527,197,0.465,206,2.143,209,1.177,211,1.424,214,1.806,215,2.75,232,2.807,235,1.424,261,1.993,262,1.804,263,1.692,264,1.931,265,1.177,266,2.079,267,2.149,268,2.569,269,2.079,270,1.931,271,1.804,272,2.079,273,2.361,274,1.931,275,2.962,276,2.079,277,1.804,278,1.804,279,3.261,280,2.569,281,1.804,282,2.992,283,2.75,284,3.261,285,1.804,286,2.079,287,1.922,288,2.079,289,2.079,290,2.079,291,2.079,292,1.504,293,2.079,294,2.079,295,2.079,296,2.962,297,2.079,298,2.079,299,2.41,300,1.122,301,2.962,302,2.079,303,2.079,304,2.079,305,2.079,306,2.079,307,3.059,308,2.079,309,2.962,310,2.962,311,3.45,312,2.75,313,2.962,314,2.75,315,3.203,316,2.079,317,1.438,318,3.45,319,3.45,320,2.079,321,2.079,322,2.079,323,1.593,324,2.079,325,2.962,326,2.079,327,2.079,328,2.079,329,2.079,330,1.804,331,2.75,332,2.079,333,2.079,334,1.931,335,2.079,336,2.079,337,2.079,338,1.931,339,2.079,340,2.962,341,2.962,342,2.079,343,2.079,344,2.079]],["title/components/SignUpFormComponent.html",[0,0.229,50,0.859]],["body/components/SignUpFormComponent.html",[0,0.263,1,0.509,2,0.967,3,0.097,4,0.085,5,0.646,6,0.646,7,0.085,9,0.616,10,1.914,11,1.905,13,0.646,14,0.278,15,0.019,16,0.123,17,0.097,18,0.136,19,0.646,20,1.015,21,1.015,22,0.534,23,1.419,24,0.646,25,0.775,26,0.646,27,0.509,28,0.646,29,0.509,30,0.56,31,1.086,32,1.419,33,0.534,34,0.646,35,0.534,36,0.646,37,0.509,38,0.418,39,0.646,40,0.509,41,0.646,42,0.509,43,0.56,44,0.509,45,0.461,46,0.509,47,0.646,48,0.509,49,0.646,50,1.117,51,1.536,52,0.534,53,0.646,54,0.534,55,0.646,56,0.587,57,0.894,58,1.015,59,0.534,60,0.646,61,0.534,62,0.534,63,0.509,64,0.646,65,0.509,66,0.587,67,0.616,68,0.509,69,0.616,70,0.646,71,0.008,72,0.008,100,0.678,101,0.678,116,0.711,120,1.682,123,2.64,142,0.825,187,0.371,188,0.761,190,0.623,192,3.236,193,1.978,194,1.204,196,0.357,197,0.527,198,1.048,204,2.536,205,0.761,210,1.222,212,1.015,214,1.353,217,1.772,254,4.315,257,1.308,265,0.879,267,1.542,280,3.094,281,3.351,284,3.351,300,1.035,317,0.922,323,2.734,352,3.259,369,1.232,371,0.785,373,1.409,374,1.599,375,4.195,376,1.232,377,3.259,378,1.232,379,2.64,380,2.222,381,2.731,382,1.811,383,3.359,384,1.772,385,2.007,390,0.825,391,0.914,392,0.711,393,0.825,404,1.681,433,1.976,437,1.308,442,2.64,511,1.53,513,2.958,514,1.53,528,2.212,529,4.011,532,3.259,533,3.259,643,2.64,667,3.259,669,3.692,670,2.64,671,3.259,672,1.681,673,3.692,675,2.64,676,1.884,677,1.884,679,2.64,680,4.611,681,2.958,683,1.681,684,1.884,685,2.64,686,1.681,687,1.884,688,1.884,689,1.884,690,3.359,696,1.884,698,1.884,699,2.958,700,1.884,701,1.884,702,2.64,703,2.64,704,2.64,705,2.64,706,4.611,707,2.64,708,2.64,710,1.884,711,4.257,712,1.884,713,1.884,714,1.884,715,1.884,716,1.884,717,1.884,718,1.884,719,2.958,720,2.958,721,2.958,722,1.884,723,2.958,724,1.884,725,1.884,726,1.884,727,1.53,728,1.884,729,3.652,730,4.742,731,4.495,732,4.137,733,1.681,734,3.652,735,4.137,736,1.884,737,3.652,887,5.314,888,4.248,889,3.441,890,2.192,891,2.192,892,3.441,893,2.192,894,1.884,895,2.192,896,2.192,897,2.192,898,2.192,899,2.192,900,1.884,901,5.55,902,2.958,903,3.441,904,3.441]],["title/components/SocialComponent.html",[0,0.229,52,0.902]],["body/components/SocialComponent.html",[0,0.303,1,0.637,2,1.149,3,0.122,4,0.106,5,0.809,6,0.809,7,0.106,9,0.772,10,1.973,11,1.966,13,0.809,14,0.271,15,0.019,16,0.154,17,0.122,18,0.17,19,0.809,20,1.205,21,1.205,22,0.669,23,1.596,24,0.809,25,0.709,26,0.809,27,0.637,28,0.809,29,0.637,30,0.701,31,0.701,32,1.596,33,0.669,34,0.809,35,0.669,36,0.809,37,0.637,38,0.523,39,0.809,40,0.637,41,0.809,42,0.637,43,1.248,44,0.637,45,0.578,46,0.637,47,0.809,48,0.637,49,0.809,50,0.637,51,0.701,52,1.318,53,0.809,54,0.669,55,0.809,56,0.736,57,1.028,58,1.205,59,0.669,60,0.809,61,0.669,62,0.669,63,0.637,64,0.809,65,0.637,66,0.736,67,0.772,68,0.637,69,0.772,70,0.809,71,0.01,72,0.01,142,1.033,187,0.296,188,0.904,190,0.497,192,3.503,193,2.067,194,0.979,196,0.666,197,0.492,198,0.819,205,0.607,210,1.53,213,1.087,214,0.772,265,1.044,300,0.669,317,0.736,349,1.764,369,0.983,371,0.983,376,1.463,378,1.463,498,1.916,525,2.359,579,5.625,580,5.871,647,2.359,652,3.899,730,5.625,905,2.359,906,4.087,907,4.884,908,4.087,909,4.087,910,4.087,911,4.151,912,2.745,913,2.745,914,2.745,915,2.745,916,4.087,917,2.745,918,2.745,919,2.105,920,2.745,921,4.087,922,2.745,923,4.087,924,1.916,925,4.087,926,2.745,927,4.087,928,2.745,929,4.087,930,2.745,931,4.087,932,4.087,933,2.745,934,4.087,935,2.745,936,4.087,937,2.745,938,4.087,939,4.087,940,2.745,941,4.087,942,2.745,943,4.087,944,2.745,945,4.087,946,2.745,947,4.087,948,2.745,949,4.087,950,2.745,951,4.087,952,2.745,953,4.087,954,2.745,955,4.087,956,2.745,957,4.087,958,2.745,959,4.087]],["title/interfaces/SocialService.html",[261,1.262,960,2.584]],["body/interfaces/SocialService.html",[3,0.207,4,0.18,7,0.18,14,0.233,15,0.019,17,0.287,71,0.014,72,0.014,120,2.33,121,1.189,187,0.502,197,0.761,206,3.002,217,1.941,261,1.586,263,2.434,265,1.504,267,1.903,349,4.149,351,4.505,390,1.751,392,1.511,393,1.751,434,3.193,484,3.569,652,2.991,911,5.203,924,4.505,960,4.505,961,3.248,962,6.238,963,6.238,964,5.83,965,5.058,966,5.058,967,5.058]],["title/interfaces/Task.html",[57,0.78,261,1.262]],["body/interfaces/Task.html",[3,0.23,4,0.201,7,0.201,15,0.018,17,0.23,57,1.326,71,0.015,72,0.015,187,0.56,197,0.728,206,3.153,261,1.769,263,2.716,265,1.609,267,2.164,422,4.381,432,4.92,434,3.102,450,4.92,451,6.059,452,6.059,968,4.463]],["title/components/TaskComponent.html",[0,0.229,54,0.902]],["body/components/TaskComponent.html",[0,0.328,1,0.731,2,1.271,3,0.14,4,0.122,5,0.929,6,0.929,7,0.122,9,0.886,10,2.005,11,1.998,13,0.929,14,0.319,15,0.019,16,0.176,17,0.14,18,0.195,19,0.929,20,1.333,21,1.333,22,0.767,23,1.704,24,0.929,25,0.78,26,0.929,27,0.731,28,0.929,29,0.731,30,0.805,31,0.805,32,1.704,33,0.767,34,0.929,35,0.767,36,0.929,37,0.731,38,0.6,39,0.929,40,0.731,41,0.929,42,0.731,43,0.805,44,0.731,45,0.663,46,0.731,47,0.929,48,0.731,49,0.929,50,0.731,51,0.805,52,0.767,53,0.929,54,1.407,55,0.929,56,1.549,57,1.587,58,1.333,59,0.767,60,0.929,61,0.767,62,0.767,63,0.731,64,0.929,65,0.731,66,0.844,67,0.886,68,0.731,69,0.886,70,0.929,71,0.011,72,0.011,100,0.974,101,0.974,187,0.34,188,1,190,0.57,194,1.226,196,0.862,197,0.582,198,1.059,205,1.169,212,1.333,213,1.247,300,1.407,371,1.128,374,1.99,376,1.618,378,1.618,382,2.174,384,2.205,385,2.41,390,1.185,391,1.314,392,1.023,393,1.185,433,1.465,437,1.88,467,2.199,727,3.69,749,2.698,780,2.906,842,3.331,969,2.707,970,5.287,971,4.52,972,4.52,973,4.52,974,2.707,975,4.52,976,4.52,977,3.15,978,4.52,979,3.15,980,3.15,981,2.707,982,3.886,983,2.199,984,1.756,985,2.199,986,2.707,987,3.15,988,3.15,989,4.52,990,3.886,991,4.545,992,2.707,993,3.886,994,3.886,995,3.886,996,3.886,997,2.707,998,2.707,999,2.416]],["title/components/TaskEditorComponent.html",[0,0.229,56,0.992]],["body/components/TaskEditorComponent.html",[0,0.356,1,0.852,2,1.415,3,0.163,4,0.142,5,1.082,6,1.082,7,0.142,9,1.032,10,2.036,11,2.031,13,1.082,14,0.252,15,0.018,16,0.205,17,0.163,18,0.227,19,1.082,20,1.484,21,1.484,22,0.894,23,1.822,24,1.082,25,0.704,26,1.082,27,0.852,28,1.082,29,0.852,30,0.938,31,0.938,32,1.822,33,0.894,34,1.082,35,0.894,36,1.082,37,0.852,38,0.699,39,1.082,40,0.852,41,1.082,42,0.852,43,0.938,44,0.852,45,0.773,46,0.852,47,1.082,48,0.852,49,1.082,50,0.852,51,0.938,52,0.894,53,1.082,54,0.894,55,1.082,56,1.656,57,1.569,58,1.484,59,0.894,60,1.082,61,0.894,62,0.894,63,0.852,64,1.082,65,0.852,66,0.984,67,1.032,68,0.852,69,1.032,70,1.082,71,0.012,72,0.012,187,0.396,188,1.113,190,1.04,194,1.151,197,0.37,205,0.812,212,1.484,300,1.226,323,2.479,371,1.314,374,2.161,376,1.802,378,1.802,382,2.325,434,2.215,450,3.513,467,2.562,635,3.86,707,3.86,749,3.004,780,3.235,902,4.326,984,3.445,1000,4.313,1001,2.815,1002,4.326,1003,4.937,1004,4.326,1005,5.033,1006,3.67,1007,5.033,1008,5.033,1009,4.326]],["title/interfaces/TaskList.html",[261,1.262,420,1.937]],["body/interfaces/TaskList.html",[3,0.237,4,0.207,7,0.207,14,0.268,15,0.018,17,0.237,57,1.499,71,0.016,72,0.016,165,3.724,187,0.577,197,0.692,261,1.822,263,2.797,265,1.638,267,2.024,420,3.353,422,4.098,432,4.969,434,3.132,1010,4.595,1011,4.595,1012,5.346]],["title/components/TaskListComponent.html",[0,0.229,59,0.902]],["body/components/TaskListComponent.html",[0,0.289,1,0.59,2,1.085,3,0.113,4,0.099,5,0.75,6,0.75,7,0.099,9,0.715,10,1.954,11,1.946,13,0.75,14,0.307,15,0.019,16,0.142,17,0.113,18,0.158,19,0.75,20,1.138,21,1.138,22,0.62,23,1.536,24,0.75,25,0.792,26,0.75,27,0.59,28,0.75,29,0.59,30,0.65,31,0.65,32,1.536,33,0.62,34,0.75,35,0.62,36,0.75,37,0.59,38,0.485,39,0.75,40,0.59,41,0.75,42,0.59,43,0.65,44,0.59,45,0.536,46,0.59,47,0.75,48,0.59,49,0.75,50,0.59,51,0.65,52,0.62,53,0.75,54,0.62,55,0.75,56,0.682,57,1.496,58,1.138,59,1.269,60,0.75,61,1.269,62,1.574,63,0.59,64,0.75,65,0.59,66,0.682,67,0.715,68,0.59,69,0.715,70,0.75,71,0.009,72,0.009,100,0.787,101,0.787,165,2.019,187,0.274,188,0.854,190,0.461,194,1.295,196,0.961,197,0.636,198,1.181,205,1.303,212,1.138,213,1.007,287,1.061,300,1.492,371,0.911,374,1.756,376,1.382,378,1.382,382,1.96,384,1.946,385,2.172,390,0.957,391,1.061,392,0.826,393,0.957,420,3.923,433,2.17,437,1.518,455,1.951,465,1.635,466,1.635,476,2.186,490,3.318,575,2.186,576,2.186,578,2.186,579,1.951,580,1.951,727,3.256,749,2.304,751,2.694,779,3.256,780,2.481,830,2.961,842,3.084,974,2.186,981,2.186,982,3.318,983,1.775,984,1.418,985,1.775,986,2.186,990,3.318,991,4.01,992,2.186,993,3.318,994,3.318,995,3.318,996,3.318,997,2.186,998,2.186,999,1.951,1000,4.599,1013,5.054,1014,2.186,1015,4.665,1016,3.86,1017,3.86,1018,3.86,1019,3.86,1020,3.318,1021,3.86,1022,4.665,1023,3.86,1024,2.544,1025,3.86,1026,2.544,1027,3.86,1028,2.544,1029,3.86,1030,2.544,1031,2.544,1032,3.318,1033,2.544,1034,3.86,1035,2.544,1036,3.318,1037,3.318,1038,2.544,1039,2.961,1040,2.544,1041,2.544,1042,2.186,1043,3.318,1044,2.544,1045,2.544,1046,2.544,1047,2.544,1048,3.86,1049,3.86,1050,2.961,1051,4.665]],["title/components/TaskListEditorComponent.html",[0,0.229,61,0.902]],["body/components/TaskListEditorComponent.html",[0,0.284,1,0.574,2,1.062,3,0.11,4,0.096,5,0.729,6,0.729,7,0.096,9,0.695,10,1.947,11,1.939,13,0.729,14,0.292,15,0.019,16,0.138,17,0.11,18,0.153,19,0.729,20,1.114,21,1.114,22,0.603,23,1.514,24,0.729,25,0.629,26,0.729,27,0.574,28,0.729,29,0.574,30,0.632,31,0.632,32,1.514,33,0.603,34,0.729,35,0.603,36,0.729,37,0.574,38,0.471,39,0.729,40,0.574,41,0.729,42,0.574,43,0.632,44,0.574,45,0.521,46,0.574,47,0.729,48,0.574,49,0.729,50,0.574,51,0.632,52,0.603,53,0.729,54,0.603,55,0.729,56,0.663,57,1.42,58,1.114,59,0.603,60,0.729,61,1.25,62,1.829,63,0.574,64,0.729,65,0.574,66,0.663,67,0.695,68,0.574,69,0.695,70,0.729,71,0.009,72,0.009,100,0.765,101,0.765,116,1.227,120,1.816,121,1.172,129,1.726,187,0.267,188,0.836,190,0.448,194,1.284,196,0.403,197,0.518,198,0.919,205,0.836,212,1.114,213,0.979,214,0.695,217,1.913,257,1.476,265,0.966,267,1.352,287,1.032,299,2.399,300,1.25,317,1.229,369,1.353,371,0.885,374,1.726,376,1.353,378,1.353,380,2.893,381,2.948,382,1.932,384,1.913,385,2.141,389,2.429,390,0.931,391,1.032,392,0.803,393,0.931,420,3.173,433,1.757,434,2.878,465,1.59,466,1.59,667,3.518,669,3.938,670,2.899,671,3.518,672,1.897,673,3.938,675,2.899,679,2.899,680,2.899,683,1.897,685,2.899,686,1.897,690,3.583,702,2.899,703,2.899,704,2.899,705,2.899,706,2.899,708,2.899,749,2.256,751,2.638,779,3.201,780,2.429,830,2.899,894,2.126,984,3.647,1000,4.565,1001,1.897,1002,3.248,1003,3.942,1004,3.248,1009,3.942,1039,3.518,1042,3.942,1052,4.586,1053,3.382,1054,3.779,1055,2.474,1056,2.474,1057,2.474,1058,2.474,1059,2.474,1060,2.474,1061,2.474,1062,2.474,1063,1.897,1064,2.474,1065,2.474,1066,2.474,1067,2.474,1068,3.779,1069,2.474,1070,2.474,1071,2.474,1072,2.474,1073,2.474,1074,2.474,1075,2.474,1076,2.474,1077,2.474,1078,2.474,1079,2.474,1080,2.474]],["title/components/TasksComponent.html",[0,0.229,63,0.859]],["body/components/TasksComponent.html",[0,0.304,1,0.643,2,1.157,3,0.123,4,0.107,5,0.817,6,0.817,7,0.107,9,0.779,10,1.975,11,1.968,13,0.817,14,0.324,15,0.019,16,0.155,17,0.123,18,0.172,19,0.817,20,1.213,21,1.213,22,0.675,23,1.603,24,0.817,25,0.746,26,0.817,27,0.643,28,0.817,29,0.643,30,0.708,31,0.708,32,1.603,33,0.675,34,0.817,35,0.675,36,0.817,37,0.643,38,0.528,39,0.817,40,0.643,41,0.817,42,0.643,43,0.708,44,0.643,45,0.583,46,0.643,47,0.817,48,0.643,49,0.817,50,0.643,51,0.708,52,0.675,53,0.817,54,0.675,55,0.817,56,0.742,57,1.393,58,1.213,59,0.675,60,0.817,61,1.196,62,1.577,63,1.262,64,0.817,65,0.643,66,0.742,67,0.779,68,0.643,69,0.779,70,0.817,71,0.01,72,0.01,100,0.857,101,0.857,120,1.944,165,2.153,187,0.299,188,0.91,190,0.745,194,1.297,196,0.8,197,0.548,198,0.984,205,1.284,212,1.213,214,1.157,217,1.716,265,1.051,287,1.155,299,1.449,300,1.577,317,1.103,369,1.473,371,0.991,374,1.848,376,1.473,378,1.473,380,1.449,381,3.156,382,2.045,384,2.048,385,2.267,389,1.78,390,1.042,391,1.155,392,0.899,393,1.042,394,2.38,411,3.156,420,3.718,433,1.914,465,1.78,466,1.78,556,3.537,573,3.537,690,3.427,842,3.297,900,2.38,983,1.933,984,1.544,985,1.933,1020,3.537,1032,3.537,1036,3.537,1037,2.38,1039,2.124,1043,2.38,1050,3.766,1053,3.393,1063,2.124,1081,2.38,1082,4.91,1083,4.115,1084,5.808,1085,4.672,1086,4.672,1087,4.115,1088,2.769,1089,4.115,1090,2.769,1091,2.769,1092,2.769,1093,4.115,1094,2.769,1095,2.769,1096,2.769,1097,4.115,1098,2.769,1099,2.769,1100,2.769,1101,4.115,1102,2.769,1103,2.769,1104,2.769,1105,2.769,1106,2.769,1107,2.769,1108,4.115]],["title/modules/TasksModule.html",[73,1.629,151,2.064]],["body/modules/TasksModule.html",[3,0.168,4,0.147,7,0.147,14,0.373,15,0.019,16,0.212,17,0.168,18,0.235,46,1.567,54,1.644,57,1.082,59,1.644,61,1.644,62,1.252,63,1.567,68,1.567,71,0.012,72,0.012,75,1.425,76,2.532,82,2.866,83,2.111,84,1.761,86,3.304,87,2.262,88,1.865,89,2.904,90,1.666,91,2.262,99,3.304,100,1.171,101,1.171,102,3.943,103,1.499,104,2.26,108,2.434,120,1.499,136,4.419,151,4.247,165,1.981,250,3.588,251,2.26,256,4.419,257,2.26,408,2.643,842,3.531,983,2.643,984,2.111,985,2.643,999,2.904,1013,2.904,1053,3.763,1063,2.904,1109,3.255,1110,3.255,1111,3.255,1112,3.255,1113,4.339,1114,3.786,1115,3.255,1116,3.786,1117,3.786,1118,3.786,1119,3.786,1120,3.786,1121,3.786,1122,3.786,1123,3.786,1124,3.786]],["title/modules/TasksRoutingModule.html",[73,1.629,1113,2.38]],["body/modules/TasksRoutingModule.html",[0,0.335,3,0.24,4,0.209,7,0.209,14,0.346,15,0.019,16,0.302,17,0.24,18,0.335,63,1.497,71,0.016,72,0.016,75,2.032,87,2.376,91,2.838,121,1.38,138,3.011,140,4.145,141,4.432,142,2.032,159,3.471,172,3.471,353,3.769,1113,4.145,1115,4.642,1125,5.4]],["title/injectables/TasksService.html",[209,0.946,1053,2.064]],["body/injectables/TasksService.html",[3,0.159,4,0.139,7,0.139,14,0.341,15,0.019,16,0.201,17,0.22,18,0.222,25,0.75,38,0.945,57,1.399,62,1.383,71,0.012,72,0.012,90,1.58,116,1.987,121,1.74,165,2.593,187,0.387,188,1.096,190,0.65,194,1.287,196,0.998,197,0.617,198,1.227,205,1.354,209,1.267,213,1.422,214,1.009,232,3.684,235,1.58,267,1.674,268,3.413,273,2.996,277,2.002,278,2.002,292,1.67,307,3.203,334,2.959,354,1.879,411,2.754,420,3.798,422,3.389,432,4.273,434,2.181,464,3.087,465,2.308,466,2.308,467,2.506,472,4.88,1053,2.764,1085,4.261,1086,5.262,1126,2.754,1127,4.957,1128,4.957,1129,3.087,1130,3.591,1131,4.957,1132,3.591,1133,4.957,1134,3.591,1135,3.591,1136,4.957,1137,3.591,1138,2.506,1139,4.957,1140,4.957,1141,3.591,1142,5.677,1143,3.591,1144,5.677,1145,4.261,1146,3.591,1147,4.957,1148,3.591,1149,4.957,1150,3.591,1151,3.591,1152,3.591,1153,3.591,1154,3.591]],["title/components/UsersComponent.html",[0,0.229,65,0.859]],["body/components/UsersComponent.html",[0,0.386,1,1,2,1.575,3,0.191,4,0.167,5,1.271,6,1.271,7,0.167,9,1.211,10,2.065,11,2.061,13,1.652,14,0.216,15,0.018,16,0.241,17,0.191,18,0.267,19,1.271,20,1.652,21,1.652,22,1.05,23,1.943,24,1.271,25,0.763,26,1.271,27,1,28,1.271,29,1,30,1.101,31,1.101,32,1.943,33,1.05,34,1.271,35,1.05,36,1.271,37,1,38,0.821,39,1.271,40,1,41,1.271,42,1,43,1.101,44,1,45,0.907,46,1,47,1.271,48,1,49,1.271,50,1,51,1.101,52,1.05,53,1.271,54,1.05,55,1.271,56,1.155,57,1.311,58,1.652,59,1.05,60,1.271,61,1.05,62,1.05,63,1,64,1.271,65,1.53,66,1.668,67,1.211,68,1,69,1.211,70,1.271,71,0.014,72,0.014,1155,3.704]],["title/modules/UsersModule.html",[73,1.629,148,2.064]],["body/modules/UsersModule.html",[3,0.217,4,0.189,7,0.189,14,0.363,15,0.019,16,0.273,17,0.217,18,0.303,48,1.679,65,1.679,66,1.309,71,0.015,72,0.015,75,1.839,76,2.988,82,3.383,83,2.724,84,2.272,86,3.9,87,2.67,91,2.67,99,3.9,100,1.511,101,1.511,108,3.141,148,4.194,250,4.235,251,2.916,1156,4.199,1157,4.199,1158,4.199,1159,4.65,1160,4.886,1161,4.199,1162,4.199]],["title/modules/UsersRoutingModule.html",[73,1.629,1159,2.38]],["body/modules/UsersRoutingModule.html",[0,0.388,3,0.228,4,0.199,7,0.199,14,0.361,15,0.019,16,0.288,17,0.228,18,0.319,48,1.453,65,1.453,71,0.015,72,0.015,75,1.935,87,2.263,91,2.755,121,1.314,138,2.867,140,4.025,141,4.34,142,1.935,143,3.737,159,4.025,164,3.305,172,3.305,348,4.42,353,3.589,1159,4.025,1161,4.42,1162,4.42,1163,5.142,1164,5.142]],["title/injectables/UsersService.html",[209,0.946,879,2.584]],["body/injectables/UsersService.html",[3,0.221,4,0.193,7,0.193,12,2.076,14,0.333,15,0.019,16,0.279,17,0.272,18,0.308,25,0.61,38,1.169,71,0.015,72,0.015,90,2.19,116,1.615,121,1.568,187,0.537,188,1.357,190,0.901,194,1.23,196,0.811,197,0.502,198,0.997,205,1.1,209,1.568,211,2.19,213,1.97,268,3.873,277,2.774,278,2.774,292,2.314,307,2.603,315,2.97,317,1.334,354,2.603,879,4.283,1129,4.277,1138,3.473,1145,4.277,1165,3.817,1166,6.946,1167,4.976,1168,4.976,1169,4.976,1170,4.976]],["title/coverage.html",[1171,4.352]],["body/coverage.html",[0,0.455,1,0.683,7,0.114,8,2.53,15,0.019,22,0.717,27,0.683,29,0.683,31,1.1,33,0.717,35,0.717,37,0.683,40,0.683,42,0.683,44,0.683,46,0.683,48,0.683,50,0.683,52,0.717,54,0.717,56,0.789,57,0.62,59,0.717,61,0.717,62,1.048,63,0.683,65,0.683,68,0.683,71,0.01,72,0.01,85,3.004,88,1.45,113,4.568,122,2.258,125,2.054,137,4.294,138,3.121,143,1.757,145,1.641,148,1.641,151,1.641,154,1.641,156,2.4,183,2.53,184,3.301,186,2.53,193,1.003,197,0.297,209,1.642,222,2.53,223,2.258,225,2.53,252,2.054,254,2.054,259,2.054,260,2.054,261,2.19,262,1.641,264,3.555,271,1.641,273,1.295,279,1.641,282,1.641,285,1.641,287,1.228,347,2.054,372,2.53,373,3.598,392,0.955,408,2.054,409,2.53,410,2.53,420,1.54,433,3.611,475,2.53,480,2.258,488,2.53,535,2.766,536,2.53,545,2.054,594,2.53,608,2.53,652,1.892,653,2.53,654,2.53,666,2.53,738,2.53,742,2.258,837,2.53,842,1.54,843,2.258,865,2.53,866,2.53,874,2.53,879,2.054,887,2.53,905,2.53,960,2.054,961,3.004,968,2.53,969,2.53,984,2.4,1000,3.551,1001,3.301,1010,2.53,1011,2.53,1013,2.258,1014,2.53,1053,1.641,1081,2.53,1126,3.301,1138,3.004,1155,2.53,1165,3.301,1171,2.53,1172,2.943,1173,2.943,1174,2.53,1175,7.128,1176,7.423,1177,6.719,1178,4.304,1179,2.943,1180,6.425,1181,4.304,1182,5.088,1183,2.53,1184,2.53,1185,5.597,1186,2.943,1187,2.943,1188,5.088,1189,2.943,1190,2.53,1191,3.699,1192,2.53,1193,2.53,1194,3.699,1195,2.53,1196,2.53,1197,4.373,1198,2.53,1199,2.53,1200,2.53,1201,2.943,1202,2.943]],["title/dependencies.html",[76,2.195,1203,2.654]],["body/dependencies.html",[15,0.019,16,0.269,71,0.015,72,0.015,76,2.369,88,2.959,93,4.573,94,4.193,97,2.681,98,2.681,100,1.488,101,1.488,103,2.595,104,2.871,106,2.959,107,2.681,142,1.81,179,3.357,181,4.134,235,2.116,251,2.871,257,2.871,390,2.261,391,2.006,392,2.127,393,2.261,484,3.689,601,4.134,603,4.134,792,4.134,1204,4.809,1205,7.453,1206,4.809,1207,4.809,1208,4.809,1209,4.809,1210,4.809,1211,4.809,1212,6.008,1213,4.809,1214,4.809,1215,4.809,1216,4.809,1217,4.809,1218,4.809,1219,4.809,1220,4.809,1221,4.809,1222,4.809,1223,4.809,1224,4.809,1225,4.809]],["title/miscellaneous/functions.html",[919,3.418,1226,1.843]],["body/miscellaneous/functions.html",[10,1.664,15,0.018,25,0.894,71,0.015,72,0.015,85,3.538,88,3.305,114,4.358,115,3.741,125,4.332,187,0.547,196,1.14,197,0.676,198,1.401,267,2.152,317,1.664,919,3.889,1193,4.358,1197,4.358,1198,5.335,1199,5.335,1200,5.335,1226,3.026,1227,5.069,1228,6.709,1229,4.358,1230,5.069,1231,6.991,1232,6.207,1233,5.069,1234,5.069,1235,6.207,1236,5.069]],["title/index.html",[187,0.333,629,2.654,1237,3.087]],["body/index.html",[0,0.402,4,0.182,11,1.261,15,0.014,25,0.576,71,0.014,72,0.014,84,2.188,103,2.88,179,4.136,212,1.387,287,1.962,462,4.528,540,3.283,635,4.976,733,3.608,1050,3.608,1203,4.044,1238,4.704,1239,5.925,1240,4.704,1241,6.487,1242,4.704,1243,4.704,1244,4.704,1245,7.018,1246,4.704,1247,4.704,1248,4.704,1249,4.704,1250,4.704,1251,4.704,1252,4.704,1253,4.704,1254,4.704,1255,6.487,1256,4.704,1257,6.809,1258,4.704,1259,4.704,1260,4.704,1261,4.704,1262,5.925,1263,5.925,1264,6.809,1265,4.704,1266,5.925,1267,5.925,1268,4.704,1269,7.165,1270,4.704,1271,4.704,1272,4.704,1273,5.925,1274,4.704,1275,4.704,1276,4.704,1277,4.704,1278,6.487,1279,4.704,1280,4.704,1281,4.704,1282,3.608,1283,4.704,1284,4.704]],["title/modules.html",[75,1.905]],["body/modules.html",[15,0.015,71,0.015,72,0.015,74,3.403,75,1.992,81,3.403,94,5.147,145,2.952,148,2.952,151,2.952,154,2.952,173,3.695,248,3.403,392,2.394,589,3.403,1113,3.403,1159,3.403,1285,7.374,1286,7.647,1287,7.26,1288,7.26]],["title/overview.html",[1282,3.883]],["body/overview.html",[1,1.649,2,1.053,15,0.019,22,0.913,27,1.347,29,1.347,33,1.414,35,1.414,37,1.347,40,1.347,42,1.347,44,1.347,46,1.347,48,1.347,50,1.347,52,1.414,54,1.414,59,1.414,61,1.414,63,1.347,65,1.347,68,1.347,71,0.012,72,0.012,74,4.758,75,1.41,76,2.514,77,3.221,78,3.221,79,3.221,80,3.221,81,3.732,82,2.846,83,2.089,84,1.743,145,4.166,148,3.907,151,4.222,154,3.752,173,4.552,174,3.221,185,2.874,245,3.221,246,3.221,247,3.221,248,3.732,263,1.96,354,1.96,437,2.237,440,3.221,459,4.387,586,3.221,587,3.221,588,3.221,589,3.732,842,3.037,1053,3.237,1109,3.221,1110,3.221,1111,3.221,1112,3.221,1113,3.732,1156,3.221,1157,3.221,1158,3.221,1159,3.732,1282,2.874,1289,3.747,1290,3.747]],["title/miscellaneous/typealiases.html",[1226,1.843,1291,4.455]],["body/miscellaneous/typealiases.html",[15,0.018,71,0.016,72,0.016,187,0.607,197,0.567,349,3.616,351,3.926,742,4.315,757,5.068,759,5.068,764,5.679,768,5.679,843,4.315,911,5.068,924,3.926,961,3.926,1226,3.358,1292,5.625,1293,6.607,1294,4.835,1295,6.607]],["title/miscellaneous/variables.html",[1226,1.843,1296,3.83]],["body/miscellaneous/variables.html",[12,1.087,15,0.019,71,0.01,72,0.01,85,1.818,95,2.239,105,1.453,116,0.846,120,1.874,122,3.015,123,1.998,124,2.239,125,1.818,126,2.239,137,1.998,138,3.155,145,2.192,146,2.239,147,2.239,148,2.192,149,2.239,150,2.239,151,2.192,152,2.239,153,2.239,154,2.192,155,2.239,156,1.453,157,2.239,158,2.239,187,0.281,197,0.688,211,1.146,217,1.974,267,1.396,271,2.192,287,1.087,292,2.631,299,1.363,307,1.363,317,1.85,349,2.527,351,2.744,369,2.471,392,1.276,405,1.998,434,2.083,480,3.015,485,1.998,584,2.239,652,2.527,711,1.998,924,2.744,960,1.818,961,1.818,962,4.532,963,4.069,964,2.239,965,2.239,966,2.239,967,2.239,1126,1.998,1138,4.152,1165,1.998,1174,2.239,1183,2.239,1184,3.379,1190,2.239,1191,4.532,1192,2.239,1194,2.239,1195,3.379,1196,3.379,1226,1.555,1229,2.239,1294,2.239,1296,2.239,1297,2.605,1298,2.605,1299,2.605,1300,5.272,1301,3.931,1302,2.605,1303,2.605,1304,2.605,1305,2.605,1306,2.605,1307,2.605,1308,2.605,1309,2.605,1310,2.605,1311,4.734,1312,3.931,1313,2.605,1314,2.605,1315,2.605,1316,3.931,1317,3.931,1318,2.605,1319,2.605,1320,2.605,1321,2.605,1322,2.605,1323,2.605,1324,2.605,1325,2.605,1326,2.605,1327,2.605,1328,2.605,1329,2.605,1330,2.605,1331,2.605,1332,2.605,1333,2.605,1334,2.605,1335,2.605,1336,2.605,1337,2.605,1338,2.605,1339,2.605,1340,2.605,1341,2.605,1342,2.605,1343,2.605,1344,2.605,1345,2.605,1346,2.605,1347,2.605,1348,2.605,1349,2.605,1350,2.605,1351,2.605,1352,2.605,1353,3.931,1354,2.605,1355,2.605,1356,2.605,1357,2.605,1358,2.605,1359,2.605,1360,2.605,1361,2.605,1362,2.605,1363,2.605,1364,2.605,1365,2.605,1366,2.605,1367,2.605,1368,2.605,1369,2.605,1370,2.605,1371,2.605,1372,2.605,1373,2.605,1374,2.605,1375,2.605,1376,2.605,1377,2.605,1378,2.605,1379,2.605,1380,2.605,1381,2.605,1382,2.605,1383,2.605,1384,2.605,1385,2.605,1386,2.605,1387,2.605,1388,2.605,1389,2.605,1390,2.605,1391,2.605,1392,2.605,1393,2.605,1394,2.605,1395,2.605,1396,2.605,1397,2.605,1398,2.605,1399,2.605,1400,2.605,1401,2.605,1402,2.605,1403,2.605,1404,2.605,1405,2.605,1406,2.605,1407,2.605,1408,2.605,1409,2.605,1410,2.605,1411,2.605,1412,2.605,1413,2.605,1414,2.605,1415,3.931,1416,2.605,1417,2.605,1418,2.605,1419,2.605,1420,2.605,1421,2.605,1422,2.605,1423,2.605,1424,2.605,1425,2.605,1426,2.605,1427,2.605,1428,2.605,1429,2.605,1430,2.605,1431,2.605,1432,2.605,1433,2.605,1434,2.605,1435,2.605,1436,2.605,1437,2.605,1438,2.605,1439,2.605,1440,2.605,1441,2.605,1442,2.605,1443,2.605,1444,2.605,1445,2.605,1446,2.605,1447,2.605,1448,2.605,1449,2.605,1450,2.605,1451,2.605,1452,2.605,1453,2.605,1454,2.605,1455,2.605,1456,2.605,1457,2.605,1458,2.605,1459,2.605,1460,2.605,1461,2.605,1462,2.605,1463,2.605,1464,2.605,1465,2.605,1466,2.605,1467,2.605,1468,2.605,1469,2.605,1470,2.605,1471,2.605,1472,2.605,1473,2.605,1474,2.605,1475,2.605,1476,2.605,1477,2.605,1478,2.605,1479,2.605,1480,2.605,1481,2.605,1482,2.605,1483,2.605,1484,2.605,1485,2.605,1486,2.605,1487,2.605,1488,2.605,1489,2.605,1490,2.605,1491,2.605,1492,2.605,1493,2.605,1494,2.605,1495,2.605,1496,2.605,1497,2.605,1498,2.605,1499,2.605,1500,2.605,1501,2.605,1502,2.605,1503,2.605,1504,2.605,1505,2.605,1506,2.605,1507,2.605,1508,2.605,1509,2.605,1510,2.605,1511,2.605,1512,2.605,1513,2.605,1514,2.605,1515,2.605,1516,2.605,1517,2.605,1518,2.605,1519,2.605,1520,2.605,1521,2.605,1522,2.605,1523,2.605,1524,2.605,1525,2.605,1526,2.605,1527,2.605,1528,2.605,1529,2.605,1530,2.605,1531,2.605,1532,2.605,1533,2.605,1534,2.605,1535,2.605,1536,2.605,1537,2.605,1538,2.605,1539,2.605,1540,2.605,1541,2.605,1542,2.605]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":433,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["0.1754",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3332",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.33s",{"_index":996,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["0.6852",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.719c",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.754",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.85",{"_index":728,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["0.9",{"_index":585,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["0.9.0",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["0.9988",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["00acee",{"_index":921,"title":{},"body":{"components/SocialComponent.html":{}}}],["00aff0",{"_index":943,"title":{},"body":{"components/SocialComponent.html":{}}}],["08b2f5",{"_index":923,"title":{},"body":{"components/SocialComponent.html":{}}}],["0e76a8",{"_index":936,"title":{},"body":{"components/SocialComponent.html":{}}}],["0s",{"_index":994,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["1",{"_index":437,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"overview.html":{}}}],["1.006",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.12.0",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["1.12.1",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["1.2.35",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.287",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.416",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.43",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.939",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.09",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.16",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.31",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.56",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.74",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":456,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["1000",{"_index":1124,"title":{},"body":{"modules/TasksModule.html":{}}}],["101.9",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["102.1",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10rem",{"_index":583,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["11",{"_index":1289,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["11.05",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.13",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.17",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.45",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.56",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.68",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.82",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112.4",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["114.3",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["118",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["119.4",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":642,"title":{},"body":{"components/IndexComponent.html":{}}}],["12.1.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["12.15",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["12.2.10",{"_index":1243,"title":{},"body":{"index.html":{}}}],["12.27",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.31",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.36",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.53",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.65",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.72",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.84",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["121.8",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["124.1",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12e",{"_index":793,"title":{},"body":{"components/ModalComponent.html":{}}}],["13.05",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.66",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.94",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["131.2",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138.8",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.09",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.28",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.87",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["148.9",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.05",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.14",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.15",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.42",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.46",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.63",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.46",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.94",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.06",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.41",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.54",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.79",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["171515",{"_index":939,"title":{},"body":{"components/SocialComponent.html":{}}}],["18.03",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.22",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.27",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.28",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.45",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.49",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.81",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.92",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["181.5",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":1290,"title":{},"body":{"overview.html":{}}}],["19.01",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.24",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.33",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.39",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.46",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.47",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.74",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.79",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":440,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["2.139",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.235",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["2.519",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.552",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.561",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.931",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.28",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.75",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.83",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":455,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["200px",{"_index":714,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["21.13",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.44",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.62",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.18",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.35",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.48",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.63",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.83",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.49",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.18",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.7",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.37",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.53",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.68",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.75",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1007,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["25a0ca",{"_index":947,"title":{},"body":{"components/SocialComponent.html":{}}}],["26.13",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.14",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.42",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.71",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.23",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.7",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.75",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.04",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.36",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.58",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.8",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":732,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["3",{"_index":443,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["3.334",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.345",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.394",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.495",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.74",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.865",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.937zm36.82",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.982",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.1",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.13",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.46",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.92",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":454,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["31.15",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.26",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.38",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.54z",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.73",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.15",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.29",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.32",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.65",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350px",{"_index":712,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["37.7",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.96",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.36",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b5998",{"_index":925,"title":{},"body":{"components/SocialComponent.html":{}}}],["3d9ae8",{"_index":945,"title":{},"body":{"components/SocialComponent.html":{}}}],["3f729b",{"_index":953,"title":{},"body":{"components/SocialComponent.html":{}}}],["3px",{"_index":735,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["4",{"_index":446,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["4.085",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.086",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.15.2",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["4.435",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.617",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.725",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.38",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.65",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.67",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.86",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.9",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4000",{"_index":453,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["404",{"_index":592,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["41.57",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.67",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.38",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.43",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.49",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.63",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.85",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.34",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.53",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.69",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44.54",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["448",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.79",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.82",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.45",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.85",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.41",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.39",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.64",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.85",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.88",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48.94",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.77",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4966a5",{"_index":927,"title":{},"body":{"components/SocialComponent.html":{}}}],["4d7198",{"_index":929,"title":{},"body":{"components/SocialComponent.html":{}}}],["5",{"_index":457,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["5.0.2",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["5.15.3",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["5.288",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.656",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.863",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":551,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["51",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.71",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.33",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53.08",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.73",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54.99",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.36",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.67",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["577ea7",{"_index":931,"title":{},"body":{"components/SocialComponent.html":{}}}],["6",{"_index":458,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["6.202",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.288",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.539",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["6.692",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6c2.612",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.832",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.42",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.63",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.08",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.21",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67.36",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":459,"title":{},"body":{"injectables/FakeTasksService.html":{},"overview.html":{}}}],["7.03",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.155",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.207",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.383",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.91",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.939",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.16",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73.29",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.04",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.45",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.35",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.66",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":643,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["8.13",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.823",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.849",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.93",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.69",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.077",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.903",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.918",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.929",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.62",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.79",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.25",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.06",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.61",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_route",{"_index":871,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["_state",{"_index":869,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["a4c639",{"_index":941,"title":{},"body":{"components/SocialComponent.html":{}}}],["abstractcontrol",{"_index":685,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["access_token",{"_index":266,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["accessors",{"_index":670,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["account",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":383,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["activemodal",{"_index":745,"title":{},"body":{"components/ModalComponent.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":1050,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["address",{"_index":901,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["addtask",{"_index":1017,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtask(tasklist",{"_index":1025,"title":{},"body":{"components/TaskListComponent.html":{}}}],["addtasklist",{"_index":1085,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["addtasklist(title",{"_index":1131,"title":{},"body":{"injectables/TasksService.html":{}}}],["again",{"_index":407,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["aliases",{"_index":1292,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alpha",{"_index":526,"title":{},"body":{"components/HeaderComponent.html":{}}}],["anchorscrolling",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["android",{"_index":940,"title":{},"body":{"components/SocialComponent.html":{}}}],["angular",{"_index":462,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"index.html":{}}}],["angular/advance",{"_index":791,"title":{},"body":{"components/ModalComponent.html":{}}}],["angular/animations",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":292,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["api/auth/${type",{"_index":915,"title":{},"body":{"components/SocialComponent.html":{}}}],["api_prefix",{"_index":271,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibase",{"_index":1121,"title":{},"body":{"modules/TasksModule.html":{}}}],["apiprefix",{"_index":1138,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiprefix}/tasks/list",{"_index":1139,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${id",{"_index":1150,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/tasks/list/${tasklist.id",{"_index":1152,"title":{},"body":{"injectables/TasksService.html":{}}}],["apiprefix}/users/@me",{"_index":1169,"title":{},"body":{"injectables/UsersService.html":{}}}],["apis/common",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["apis/universal",{"_index":181,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.module",{"_index":182,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/api",{"_index":272,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["app/auth/auth.guard",{"_index":1164,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["app/auth/auth.service",{"_index":508,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["app/logger/logger",{"_index":274,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["apple",{"_index":948,"title":{},"body":{"components/SocialComponent.html":{}}}],["application",{"_index":639,"title":{},"body":{"components/IndexComponent.html":{}}}],["applications",{"_index":651,"title":{},"body":{"components/IndexComponent.html":{}}}],["appmodule",{"_index":74,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":173,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":658,"title":{},"body":{"injectables/Logger.html":{}}}],["array.isarray(error?.message",{"_index":698,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["artifacts",{"_index":1258,"title":{},"body":{"index.html":{}}}],["auth",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{}}}],["auth'},{'name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["auth.component",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.guard",{"_index":346,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["auth.guard.ts",{"_index":866,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":867,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":870,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.guard.ts:20",{"_index":872,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["auth.service",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["auth/auth.guard",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth0/angular",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["authcomponent",{"_index":27,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":143,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":223,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authmodule",{"_index":145,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authresponse",{"_index":262,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["authroutingmodule",{"_index":248,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":193,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"coverage.html":{}}}],["authstatus",{"_index":289,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authstatussource",{"_index":286,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["authsubscription",{"_index":493,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["auto",{"_index":534,"title":{},"body":{"components/HeaderComponent.html":{}}}],["automatically",{"_index":1250,"title":{},"body":{"index.html":{}}}],["available",{"_index":1288,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":650,"title":{},"body":{"components/IndexComponent.html":{}}}],["back",{"_index":573,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["background",{"_index":579,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["bearer",{"_index":242,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":276,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["behaviorsubject(false",{"_index":288,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["beta.2",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["bg",{"_index":577,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["bindinputs",{"_index":746,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindinputs(componentinstance",{"_index":762,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs",{"_index":747,"title":{},"body":{"components/ModalComponent.html":{}}}],["bindoutputs(componentinstance",{"_index":767,"title":{},"body":{"components/ModalComponent.html":{}}}],["block",{"_index":725,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["boolean",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap/ng",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["bootstrap/scss/functions",{"_index":575,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["bootstrap/scss/variables",{"_index":576,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["border",{"_index":730,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["bottom",{"_index":737,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["brands",{"_index":484,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/SocialService.html":{},"dependencies.html":{}}}],["browse",{"_index":1286,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/IndexComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":811,"title":{},"body":{"components/ModalComponent.html":{}}}],["build",{"_index":1257,"title":{},"body":{"index.html":{}}}],["button",{"_index":990,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["c4302b",{"_index":938,"title":{},"body":{"components/SocialComponent.html":{}}}],["c8232c",{"_index":955,"title":{},"body":{"components/SocialComponent.html":{}}}],["calmness",{"_index":628,"title":{},"body":{"components/IndexComponent.html":{}}}],["canactivate",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"modules/UsersRoutingModule.html":{}}}],["canactivate(_route",{"_index":868,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["canactivate(route",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivatechild",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["canactivatechild(route",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["capabilities",{"_index":1276,"title":{},"body":{"index.html":{}}}],["card",{"_index":1051,"title":{},"body":{"components/TaskListComponent.html":{}}}],["catcherror(error",{"_index":1149,"title":{},"body":{"injectables/TasksService.html":{}}}],["cdcdcd",{"_index":949,"title":{},"body":{"components/SocialComponent.html":{}}}],["centered",{"_index":860,"title":{},"body":{"injectables/ModalService.html":{}}}],["change",{"_index":1252,"title":{},"body":{"index.html":{}}}],["characters",{"_index":707,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["check",{"_index":1281,"title":{},"body":{"index.html":{}}}],["children",{"_index":348,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["choice",{"_index":1272,"title":{},"body":{"index.html":{}}}],["clarity",{"_index":627,"title":{},"body":{"components/IndexComponent.html":{}}}],["class",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["class=\"text",{"_index":702,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cli",{"_index":1241,"title":{},"body":{"index.html":{}}}],["client",{"_index":1238,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":238,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["closeall",{"_index":844,"title":{},"body":{"injectables/ModalService.html":{}}}],["closed)=\"errors",{"_index":705,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":174,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":175,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule",{"_index":586,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_declarations",{"_index":588,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_httpstatusmodule_imports",{"_index":587,"title":{},"body":{"modules/HttpStatusModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1109,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":1112,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1110,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":1111,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1156,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1158,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1157,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":540,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"index.html":{}}}],["collapsed",{"_index":494,"title":{},"body":{"components/HeaderComponent.html":{}}}],["color",{"_index":580,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/SocialComponent.html":{},"components/TaskListComponent.html":{}}}],["command",{"_index":1273,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["compiler",{"_index":810,"title":{},"body":{"components/ModalComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["componentfactory",{"_index":778,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.inputs",{"_index":806,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory.outputs",{"_index":808,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['inputs",{"_index":784,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactory['outputs",{"_index":785,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfactoryresolver",{"_index":754,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentfixture",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componentinputs",{"_index":764,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentinputs.foreach",{"_index":818,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinputs.some",{"_index":813,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance",{"_index":766,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentinstance[propname",{"_index":821,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs",{"_index":768,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["componentoutputs.foreach",{"_index":823,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentoutputs.some",{"_index":828,"title":{},"body":{"components/ModalComponent.html":{}}}],["componentref",{"_index":802,"title":{},"body":{"components/ModalComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":750,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["connect",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["connect(type",{"_index":329,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["connectaccountformcomponent",{"_index":29,"title":{"components/ConnectAccountFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["console.debug(usersservice.name",{"_index":1170,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error('adding",{"_index":1105,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.error('failed",{"_index":1077,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error('saved",{"_index":1076,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.error(...args",{"_index":665,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log('add",{"_index":515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('adding",{"_index":1103,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log('deleted",{"_index":1046,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('edited",{"_index":1041,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log('modal",{"_index":786,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log('remove",{"_index":523,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('saved",{"_index":1074,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["console.log('update",{"_index":518,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('user",{"_index":898,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["console.log(...args",{"_index":663,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log(`binding",{"_index":804,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.log(error",{"_index":900,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TasksComponent.html":{}}}],["console.warn(...args",{"_index":664,"title":{},"body":{"injectables/Logger.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(@optional",{"_index":604,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(activemodal",{"_index":752,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(api",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":498,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LogoutFormComponent.html":{},"components/SocialComponent.html":{}}}],["constructor(fb",{"_index":672,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["constructor(http",{"_index":1129,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(httpstatus",{"_index":544,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["constructor(library",{"_index":481,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(logger",{"_index":416,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["constructor(modalservice",{"_index":974,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["constructor(ngbmodalservice",{"_index":845,"title":{},"body":{"injectables/ModalService.html":{}}}],["constructor(private",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/LogoutFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(public",{"_index":841,"title":{},"body":{"directives/ModalDirective.html":{}}}],["constructor(res",{"_index":597,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["constructor(router",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"guards/NoAuthGuard.html":{}}}],["constructor(tasksservice",{"_index":1088,"title":{},"body":{"components/TasksComponent.html":{}}}],["constructor(usersservice",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(viewcontainerref",{"_index":838,"title":{},"body":{"directives/ModalDirective.html":{}}}],["context",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":729,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["control.value",{"_index":1068,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["control:focus",{"_index":724,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["core",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1171,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":709,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["createdb",{"_index":412,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["createddate",{"_index":452,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["data",{"_index":350,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["data).pipe",{"_index":310,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["data.code",{"_index":563,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["data.message",{"_index":565,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["dataencapsulation",{"_index":1123,"title":{},"body":{"modules/TasksModule.html":{}}}],["db4a39",{"_index":932,"title":{},"body":{"components/SocialComponent.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["decorators",{"_index":775,"title":{},"body":{"components/ModalComponent.html":{}}}],["default",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["delay",{"_index":999,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{}}}],["delete",{"_index":1044,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetask",{"_index":972,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetask(task",{"_index":976,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetasklist",{"_index":1018,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetasklist(tasklist",{"_index":1027,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dependencies",{"_index":76,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":450,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{}}}],["dev",{"_index":1247,"title":{},"body":{"index.html":{}}}],["develop",{"_index":649,"title":{},"body":{"components/IndexComponent.html":{}}}],["developed",{"_index":640,"title":{},"body":{"components/IndexComponent.html":{}}}],["development",{"_index":1244,"title":{},"body":{"index.html":{}}}],["device",{"_index":634,"title":{},"body":{"components/IndexComponent.html":{}}}],["directive",{"_index":22,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1256,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1261,"title":{},"body":{"index.html":{}}}],["disable",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["display",{"_index":721,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["dist",{"_index":1260,"title":{},"body":{"index.html":{}}}],["document.referrer",{"_index":568,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["documentation",{"_index":653,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["dribbble",{"_index":950,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropbox",{"_index":944,"title":{},"body":{"components/SocialComponent.html":{}}}],["dropdown",{"_index":530,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dynamic",{"_index":792,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["e",{"_index":857,"title":{},"body":{"injectables/ModalService.html":{}}}],["e2e",{"_index":1270,"title":{},"body":{"index.html":{}}}],["e95343",{"_index":934,"title":{},"body":{"components/SocialComponent.html":{}}}],["ea4c89",{"_index":951,"title":{},"body":{"components/SocialComponent.html":{}}}],["edit",{"_index":1038,"title":{},"body":{"components/TaskListComponent.html":{}}}],["editor",{"_index":1002,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["editor.component",{"_index":985,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["editor.component.html",{"_index":1004,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.scss",{"_index":1003,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["editor.component.ts",{"_index":1001,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:10",{"_index":1005,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1006,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":1055,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":1056,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1060,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1059,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1054,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":1057,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":1061,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1058,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["editor/task",{"_index":984,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["edittask",{"_index":973,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittask(task",{"_index":978,"title":{},"body":{"components/TaskComponent.html":{}}}],["edittasklist",{"_index":1019,"title":{},"body":{"components/TaskListComponent.html":{}}}],["edittasklist(tasklist",{"_index":1029,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ef8236",{"_index":957,"title":{},"body":{"components/SocialComponent.html":{}}}],["element",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":284,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["enabled",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1269,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":602,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["environment",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiprefix",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":380,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["error(...args",{"_index":656,"title":{},"body":{"injectables/Logger.html":{}}}],["error(`output",{"_index":825,"title":{},"body":{"components/ModalComponent.html":{}}}],["error.message",{"_index":700,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["error?.message",{"_index":404,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["errors",{"_index":667,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["eslint",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["event",{"_index":856,"title":{},"body":{"injectables/ModalService.html":{}}}],["eventemitter",{"_index":779,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["events",{"_index":328,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["execute",{"_index":1266,"title":{},"body":{"index.html":{}}}],["existing",{"_index":904,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["export",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["express",{"_index":603,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["extends",{"_index":283,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{}}}],["f",{"_index":671,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["faangular",{"_index":479,"title":{},"body":{"components/FooterComponent.html":{}}}],["faarrowleft",{"_index":556,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TasksComponent.html":{}}}],["fac",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facebook",{"_index":924,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facebook:hover",{"_index":926,"title":{},"body":{"components/SocialComponent.html":{}}}],["facheck",{"_index":509,"title":{},"body":{"components/HeaderComponent.html":{}}}],["facodebranch",{"_index":617,"title":{},"body":{"components/IndexComponent.html":{}}}],["factory",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facubes",{"_index":618,"title":{},"body":{"components/IndexComponent.html":{}}}],["fafacebookf",{"_index":965,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fagoogle",{"_index":966,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fahome",{"_index":557,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["faiconlibrary",{"_index":385,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["failed",{"_index":701,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faketasksservice",{"_index":408,"title":{"injectables/FakeTasksService.html":{}},"body":{"injectables/FakeTasksService.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["false",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["fanestjs",{"_index":480,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fapencilalt",{"_index":981,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["faplus",{"_index":1036,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["fasave",{"_index":1062,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["fasigninalt",{"_index":510,"title":{},"body":{"components/HeaderComponent.html":{}}}],["faspinner",{"_index":389,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["fasquare",{"_index":511,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["faterminal",{"_index":619,"title":{},"body":{"components/IndexComponent.html":{}}}],["fatrash",{"_index":982,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["fauser",{"_index":512,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{}}}],["fauserplus",{"_index":513,"title":{},"body":{"components/HeaderComponent.html":{},"components/SignUpFormComponent.html":{}}}],["favk",{"_index":967,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":675,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["ff0084",{"_index":959,"title":{},"body":{"components/SocialComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1253,"title":{},"body":{"index.html":{}}}],["fillinput",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fillinput(fixture",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":733,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"index.html":{}}}],["fixme",{"_index":312,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["fixture",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flickr",{"_index":958,"title":{},"body":{"components/SocialComponent.html":{}}}],["floating",{"_index":715,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["focus",{"_index":716,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["font",{"_index":581,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["fontawesome",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["footer",{"_index":476,"title":{},"body":{"components/FooterComponent.html":{},"components/TaskListComponent.html":{}}}],["footer'},{'name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.html",{"_index":478,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":477,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":33,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":375,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form'},{'name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["form.component",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["form.component.html",{"_index":379,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.scss",{"_index":377,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts",{"_index":373,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":740,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form.component.ts:13",{"_index":388,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:14",{"_index":893,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:15",{"_index":386,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":682,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":891,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:22",{"_index":678,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":890,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:24",{"_index":674,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:25",{"_index":889,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["form.component.ts:26",{"_index":387,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["form.component.ts:37",{"_index":676,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:44",{"_index":684,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:48",{"_index":677,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["form.component.ts:9",{"_index":739,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["form/connect",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["form/login",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/logout",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["form/signup",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":673,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["fortawesome/angular",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":390,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["found",{"_index":593,"title":{},"body":{"modules/HttpStatusRoutingModule.html":{}}}],["foursquare",{"_index":946,"title":{},"body":{"components/SocialComponent.html":{}}}],["free",{"_index":623,"title":{},"body":{"components/IndexComponent.html":{}}}],["full",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["function",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["functions",{"_index":919,"title":{"miscellaneous/functions.html":{}},"body":{"components/SocialComponent.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1277,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1255,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1240,"title":{},"body":{"index.html":{}}}],["genid",{"_index":413,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["genid(tasks",{"_index":419,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["get(request",{"_index":423,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["getauthurl",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthurl(type",{"_index":324,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getelement",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getelement(fixture",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getf",{"_index":683,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["getname",{"_index":343,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["getprofile",{"_index":1166,"title":{},"body":{"injectables/UsersService.html":{}}}],["getpropertydescriptor",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpropertydescriptor(spyobj",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettasklist",{"_index":1127,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklist(id",{"_index":1133,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettasklists",{"_index":1086,"title":{},"body":{"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["getting",{"_index":629,"title":{"index.html":{}},"body":{"components/IndexComponent.html":{}}}],["getusername",{"_index":339,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["github",{"_index":647,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{}}}],["go",{"_index":1280,"title":{},"body":{"index.html":{}}}],["goback",{"_index":543,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["google",{"_index":349,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["google:hover",{"_index":933,"title":{},"body":{"components/SocialComponent.html":{}}}],["graph",{"_index":1287,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":578,"title":{},"body":{"components/HttpStatusComponent.html":{},"components/TaskListComponent.html":{}}}],["guard",{"_index":184,"title":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{},"overview.html":{}}}],["handler",{"_index":832,"title":{},"body":{"components/ModalComponent.html":{}}}],["handler(event",{"_index":836,"title":{},"body":{"components/ModalComponent.html":{}}}],["head",{"_index":631,"title":{},"body":{"components/IndexComponent.html":{}}}],["header",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskListComponent.html":{}}}],["header'},{'name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.html",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":35,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":240,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["height",{"_index":584,"title":{},"body":{"components/HttpStatusComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1278,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":992,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["homepage",{"_index":574,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["hosted",{"_index":646,"title":{},"body":{"components/IndexComponent.html":{}}}],["hover",{"_index":997,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":1249,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":268,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["httpclientinmemorywebapimodule.forfeature",{"_index":1120,"title":{},"body":{"modules/TasksModule.html":{}}}],["httpclientmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["httpevent",{"_index":233,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":229,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":234,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpparams",{"_index":269,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httpparams().appendall(parameters",{"_index":332,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["httprequest",{"_index":228,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://dev.to/this",{"_index":790,"title":{},"body":{"components/ModalComponent.html":{}}}],["httpstatus",{"_index":548,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["httpstatuscomponent",{"_index":37,"title":{"components/HttpStatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["httpstatusmodule",{"_index":154,"title":{"modules/HttpStatusModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HttpStatusModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["httpstatusroutingmodule",{"_index":589,"title":{"modules/HttpStatusRoutingModule.html":{}},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["httpstatusservice",{"_index":545,"title":{"injectables/HttpStatusService.html":{}},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["icon",{"_index":962,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":964,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconprefix",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icons",{"_index":393,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["id",{"_index":432,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":236,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implements",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["import",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["import('./auth/auth.module').then((m",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./http",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./tasks/tasks.module').then((m",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["import('./users/users.module').then((m",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":723,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["index",{"_index":187,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["index.component.html",{"_index":610,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.scss",{"_index":609,"title":{},"body":{"components/IndexComponent.html":{}}}],["index/index.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["indexcomponent",{"_index":40,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{}}}],["inherit",{"_index":998,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["initialize",{"_index":748,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialize(title",{"_index":770,"title":{},"body":{"components/ModalComponent.html":{}}}],["initialnavigation",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["inject",{"_index":270,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(api_prefix",{"_index":291,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(local_storage",{"_index":293,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["inject(response",{"_index":605,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["injectable",{"_index":209,"title":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"injectables/HttpStatusService.html":{},"injectables/Logger.html":{},"injectables/ModalService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken('prefix",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inmemorydbservice",{"_index":461,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["input",{"_index":780,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["inputs",{"_index":749,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["instagram",{"_index":952,"title":{},"body":{"components/SocialComponent.html":{}}}],["instance",{"_index":826,"title":{},"body":{"components/ModalComponent.html":{}}}],["instanceof",{"_index":824,"title":{},"body":{"components/ModalComponent.html":{}}}],["intercept",{"_index":226,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":227,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":222,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":224,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":261,"title":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"coverage.html":{}}}],["interfaces",{"_index":263,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"overview.html":{}}}],["internal",{"_index":554,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["invalid",{"_index":719,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["isauthorized",{"_index":495,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["isbackavailable",{"_index":541,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isdone",{"_index":451,"title":{},"body":{"injectables/FakeTasksService.html":{},"interfaces/Task.html":{}}}],["isenabled",{"_index":963,"title":{},"body":{"interfaces/SocialService.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["isloggedout",{"_index":338,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{}}}],["isplatformbrowser(this.platformid",{"_index":566,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":569,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["isready",{"_index":381,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["jwt",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwthelperservice",{"_index":275,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["jwtmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtoptionsfactory",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsfactory(storage",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["jwtoptionsprovider",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":285,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["jwtservice",{"_index":295,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["karma",{"_index":1268,"title":{},"body":{"index.html":{}}}],["key",{"_index":894,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["keyof",{"_index":822,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["l",{"_index":1107,"title":{},"body":{"components/TasksComponent.html":{}}}],["label",{"_index":726,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["last",{"_index":736,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["launch",{"_index":636,"title":{},"body":{"components/IndexComponent.html":{}}}],["layout",{"_index":1098,"title":{},"body":{"components/TasksComponent.html":{}}}],["left",{"_index":533,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["legend",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["library",{"_index":384,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(faangular",{"_index":486,"title":{},"body":{"components/FooterComponent.html":{}}}],["library.addicons(faarrowleft",{"_index":559,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["library.addicons(facubes",{"_index":620,"title":{},"body":{"components/IndexComponent.html":{}}}],["library.addicons(fapencilalt",{"_index":986,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["library.addicons(fasave",{"_index":1064,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["library.addicons(faspinner",{"_index":394,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/TasksComponent.html":{}}}],["library.addicons(fasquare",{"_index":514,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{}}}],["ligatures",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{}}}],["linear",{"_index":995,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["linkedin",{"_index":935,"title":{},"body":{"components/SocialComponent.html":{}}}],["list",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["list.component",{"_index":1116,"title":{},"body":{"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1016,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.scss",{"_index":1015,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":1014,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":1024,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:16",{"_index":1023,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:22",{"_index":1031,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:24",{"_index":1030,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:35",{"_index":1035,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:41",{"_index":1028,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:54",{"_index":1033,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts:60",{"_index":1026,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.id",{"_index":472,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["list.model",{"_index":466,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["list.model.ts",{"_index":1011,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["list.title",{"_index":1144,"title":{},"body":{"injectables/TasksService.html":{}}}],["list/task",{"_index":1013,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["lists",{"_index":411,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["lists.length",{"_index":1148,"title":{},"body":{"injectables/TasksService.html":{}}}],["literal",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":708,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["local_storage",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":294,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["localstorage.getitem('id_token",{"_index":237,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["location",{"_index":546,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["log",{"_index":528,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["log(...args",{"_index":659,"title":{},"body":{"injectables/Logger.html":{}}}],["logged",{"_index":695,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logger",{"_index":273,"title":{"injectables/Logger.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["logger/logger",{"_index":464,"title":{},"body":{"injectables/FakeTasksService.html":{},"injectables/TasksService.html":{}}}],["login",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":306,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["login(type",{"_index":910,"title":{},"body":{"components/SocialComponent.html":{}}}],["logindto",{"_index":279,"title":{"interfaces/LogInDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["loginform",{"_index":668,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":42,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["logoutformcomponent",{"_index":44,"title":{"components/LogoutFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":442,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["m.authmodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.httpstatusmodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.tasksmodule",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m.usersmodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["m263.7",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":487,"title":{},"body":{"components/FooterComponent.html":{}}}],["masonry",{"_index":1097,"title":{},"body":{"components/TasksComponent.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(...tasks.map((list",{"_index":471,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["matter",{"_index":633,"title":{},"body":{"components/IndexComponent.html":{}}}],["max",{"_index":710,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["memory",{"_index":463,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["mental",{"_index":624,"title":{},"body":{"components/IndexComponent.html":{}}}],["menu",{"_index":531,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":542,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":713,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["miscellaneous",{"_index":1226,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["modal.component",{"_index":852,"title":{},"body":{"injectables/ModalService.html":{}}}],["modal.component.html",{"_index":744,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":743,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.directive",{"_index":782,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.service",{"_index":783,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":1118,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.directive",{"_index":1119,"title":{},"body":{"modules/TasksModule.html":{}}}],["modal/modal.service",{"_index":983,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["modalcomponent",{"_index":46,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalcomponent).initialize",{"_index":863,"title":{},"body":{"injectables/ModalService.html":{}}}],["modaldirective",{"_index":68,"title":{"directives/ModalDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalref",{"_index":858,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalref.componentinstance",{"_index":862,"title":{},"body":{"injectables/ModalService.html":{}}}],["modalservice",{"_index":842,"title":{"injectables/ModalService.html":{}},"body":{"injectables/ModalService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["modern",{"_index":637,"title":{},"body":{"components/IndexComponent.html":{}}}],["module",{"_index":73,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}},"body":{}}],["modules",{"_index":75,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1279,"title":{},"body":{"index.html":{}}}],["name",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1248,"title":{},"body":{"index.html":{}}}],["need",{"_index":1274,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":485,"title":{},"body":{"components/FooterComponent.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["nestjs.ts",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":855,"title":{},"body":{"injectables/ModalService.html":{}}}],["new",{"_index":287,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/HttpStatusModule.html":{},"components/TaskListEditorComponent.html":{}}}],["next.handle(cloned",{"_index":243,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":244,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbactivemodal",{"_index":753,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodal",{"_index":846,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodalservice",{"_index":848,"title":{},"body":{"injectables/ModalService.html":{}}}],["ngbmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["ngifelse]=\"nolists",{"_index":1108,"title":{},"body":{"components/TasksComponent.html":{}}}],["ngifelse]=\"notasks",{"_index":1049,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ngmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["ngondestroy",{"_index":496,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["nguniversal/express",{"_index":601,"title":{},"body":{"injectables/HttpStatusService.html":{},"dependencies.html":{}}}],["noauthguard",{"_index":347,"title":{"guards/NoAuthGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["none",{"_index":722,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["null",{"_index":299,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":422,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"injectables/TasksService.html":{}}}],["object",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(userinputs).foreach((userinputkey",{"_index":812,"title":{},"body":{"components/ModalComponent.html":{}}}],["object.keys(useroutputs).foreach((useroutputkey",{"_index":827,"title":{},"body":{"components/ModalComponent.html":{}}}],["observable",{"_index":232,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["observe",{"_index":327,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["observer",{"_index":1073,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["of(null",{"_index":1151,"title":{},"body":{"injectables/TasksService.html":{}}}],["onaddtasklist",{"_index":1087,"title":{},"body":{"components/TasksComponent.html":{}}}],["onaddtasklist(tasklist",{"_index":1093,"title":{},"body":{"components/TasksComponent.html":{}}}],["ondelete",{"_index":1022,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ondeletetasklist",{"_index":1020,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondeletetasklist(tasklist",{"_index":1032,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["ondestroy",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{}}}],["onedittasklist",{"_index":1021,"title":{},"body":{"components/TaskListComponent.html":{}}}],["onedittasklist(tasklist",{"_index":1034,"title":{},"body":{"components/TaskListComponent.html":{}}}],["oninit",{"_index":374,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsave",{"_index":1039,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["onsubmit",{"_index":669,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["onto",{"_index":632,"title":{},"body":{"components/IndexComponent.html":{}}}],["opacity",{"_index":727,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["open",{"_index":644,"title":{},"body":{"components/IndexComponent.html":{},"injectables/ModalService.html":{}}}],["open(title",{"_index":850,"title":{},"body":{"injectables/ModalService.html":{}}}],["optional",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":622,"title":{},"body":{"components/IndexComponent.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"modules/HttpStatusModule.html":{},"components/IndexComponent.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":830,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["outputs",{"_index":751,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["overview",{"_index":1282,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":853,"title":{},"body":{"injectables/ModalService.html":{}}}],["package",{"_index":1203,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1284,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":331,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["params).subscribe",{"_index":401,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params.code",{"_index":399,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["params['to",{"_index":689,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["password",{"_index":281,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["patch(url",{"_index":1153,"title":{},"body":{"injectables/TasksService.html":{}}}],["path",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["pathmatch",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["payload",{"_index":340,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.name",{"_index":344,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["payload.username",{"_index":342,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["pinterest",{"_index":954,"title":{},"body":{"components/SocialComponent.html":{}}}],["pipe",{"_index":334,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{}}}],["pipe(takeuntil(this.subscription",{"_index":834,"title":{},"body":{"components/ModalComponent.html":{}}}],["platform",{"_index":1271,"title":{},"body":{"index.html":{}}}],["please",{"_index":902,"title":{},"body":{"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["post",{"_index":414,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(request",{"_index":428,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["post(url",{"_index":1141,"title":{},"body":{"injectables/TasksService.html":{}}}],["prefix",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preloadallmodules",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prettier/prettier",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpStatusModule.html":{}}}],["private",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":527,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.html",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":1162,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["profilecomponent",{"_index":48,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1239,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":265,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["propname",{"_index":819,"title":{},"body":{"components/ModalComponent.html":{}}}],["provide",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["public",{"_index":595,"title":{},"body":{"injectables/HttpStatusService.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["put",{"_index":415,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["put(request",{"_index":430,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["queryparams",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":731,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reactiveformsmodule",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"modules/TasksModule.html":{}}}],["record",{"_index":330,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"interfaces/SignUpDto.html":{}}}],["redirectto",{"_index":352,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["reference",{"_index":1283,"title":{},"body":{"index.html":{}}}],["regain",{"_index":626,"title":{},"body":{"components/IndexComponent.html":{}}}],["reload",{"_index":1251,"title":{},"body":{"index.html":{}}}],["req",{"_index":231,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HttpStatusComponent.html":{}}}],["req.clone",{"_index":239,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.referrer",{"_index":571,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["req.headers.set('authorization",{"_index":241,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":426,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["request.url",{"_index":474,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["requestinfo",{"_index":424,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["require",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":706,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["res",{"_index":570,"title":{},"body":{"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":314,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["rest",{"_index":648,"title":{},"body":{"components/IndexComponent.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":313,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["retry(2",{"_index":311,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["return",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["rewrite",{"_index":917,"title":{},"body":{"components/SocialComponent.html":{}}}],["right",{"_index":532,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/HttpStatusService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"guards/NoAuthGuard.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{}}}],["router",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConnectAccountFormComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"guards/NoAuthGuard.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{}}}],["routermodule",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":353,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["routes",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routesnapshot",{"_index":395,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.data.type",{"_index":397,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routesnapshot.queryparams",{"_index":398,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["routing.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HttpStatusRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1245,"title":{},"body":{"index.html":{}}}],["running",{"_index":1262,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":235,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":278,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["samevalue",{"_index":1069,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["save",{"_index":1009,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["scaffolding",{"_index":1254,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":861,"title":{},"body":{"injectables/ModalService.html":{}}}],["scrollpositionrestoration",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scss",{"_index":918,"title":{},"body":{"components/SocialComponent.html":{}}}],["see",{"_index":789,"title":{},"body":{"components/ModalComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/functions.html":{}}}],["serve",{"_index":1246,"title":{},"body":{"index.html":{}}}],["server",{"_index":179,"title":{},"body":{"modules/AppServerModule.html":{},"components/HttpStatusComponent.html":{},"dependencies.html":{},"index.html":{}}}],["serverapp",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":178,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service.title",{"_index":916,"title":{},"body":{"components/SocialComponent.html":{}}}],["services",{"_index":652,"title":{},"body":{"components/IndexComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setstatus",{"_index":596,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["setstatus(code",{"_index":599,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["settoken",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":298,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["shared/task",{"_index":465,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{}}}],["shared/task.model",{"_index":467,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"injectables/TasksService.html":{}}}],["sharereplay",{"_index":319,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["sign",{"_index":529,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"components/SignUpFormComponent.html":{}}}],["signed",{"_index":899,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signup",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["signup(data",{"_index":320,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["signupdto",{"_index":282,"title":{"interfaces/SignUpDto.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["signupform",{"_index":888,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["signupformcomponent",{"_index":50,"title":{"components/SignUpFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":582,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["skipwhenexpired",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["skype",{"_index":942,"title":{},"body":{"components/SocialComponent.html":{}}}],["social",{"_index":906,"title":{},"body":{"components/SocialComponent.html":{}}}],["social'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["social.component.html",{"_index":908,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.component.scss",{"_index":907,"title":{},"body":{"components/SocialComponent.html":{}}}],["social.model",{"_index":913,"title":{},"body":{"components/SocialComponent.html":{}}}],["social/social.component",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["socialcomponent",{"_index":52,"title":{"components/SocialComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["socialservice",{"_index":960,"title":{"interfaces/SocialService.html":{}},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["socialservicetype",{"_index":911,"title":{},"body":{"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":645,"title":{},"body":{"components/IndexComponent.html":{}}}],["solid",{"_index":391,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["space",{"_index":625,"title":{},"body":{"components/IndexComponent.html":{}}}],["spec\\.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spyobj",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../api.ts",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fontawesome",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../modal.component.ts",{"_index":1293,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../modal.service.ts",{"_index":1295,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../social.model.ts",{"_index":1294,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tasks.service.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utilities.ts",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/api.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.server.module.ts",{"_index":177,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/auth/auth",{"_index":345,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:25",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":225,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:7",{"_index":230,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":264,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:102",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:106",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:110",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:31",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:56",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:68",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:80",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:85",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:98",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/connect",{"_index":372,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/login",{"_index":666,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/logout",{"_index":738,"title":{},"body":{"components/LogoutFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/no",{"_index":865,"title":{},"body":{"guards/NoAuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/signup",{"_index":887,"title":{},"body":{"components/SignUpFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts",{"_index":905,"title":{},"body":{"components/SocialComponent.html":{},"coverage.html":{}}}],["src/app/auth/social/social.component.ts:12",{"_index":909,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.component.ts:16",{"_index":912,"title":{},"body":{"components/SocialComponent.html":{}}}],["src/app/auth/social/social.model.ts",{"_index":961,"title":{},"body":{"interfaces/SocialService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/fontawesome",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/footer/footer.component.ts",{"_index":475,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":483,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:13",{"_index":482,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:19",{"_index":505,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:21",{"_index":506,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":507,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":499,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:31",{"_index":501,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":503,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:48",{"_index":500,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/http",{"_index":535,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts",{"_index":608,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/index/index.component.ts:14",{"_index":616,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:16",{"_index":612,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:26",{"_index":614,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:33",{"_index":615,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/index/index.component.ts:37",{"_index":613,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/logger/logger.ts",{"_index":654,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["src/app/logger/logger.ts:13",{"_index":657,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:5",{"_index":660,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/logger/logger.ts:9",{"_index":662,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/tasks/fake",{"_index":409,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.component.ts",{"_index":742,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.component.ts:25",{"_index":761,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:26",{"_index":756,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:27",{"_index":758,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:28",{"_index":760,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:30",{"_index":755,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:33",{"_index":774,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:37",{"_index":773,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:41",{"_index":772,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:49",{"_index":771,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:72",{"_index":765,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.component.ts:91",{"_index":769,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/tasks/modal/modal.directive.ts",{"_index":837,"title":{},"body":{"directives/ModalDirective.html":{},"coverage.html":{}}}],["src/app/tasks/modal/modal.directive.ts:6",{"_index":839,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.directive.ts:7",{"_index":840,"title":{},"body":{"directives/ModalDirective.html":{}}}],["src/app/tasks/modal/modal.service.ts",{"_index":843,"title":{},"body":{"injectables/ModalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/modal/modal.service.ts:14",{"_index":847,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:17",{"_index":851,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/modal/modal.service.ts:36",{"_index":849,"title":{},"body":{"injectables/ModalService.html":{}}}],["src/app/tasks/shared/task",{"_index":1010,"title":{},"body":{"interfaces/TaskList.html":{},"coverage.html":{}}}],["src/app/tasks/shared/task.model.ts",{"_index":968,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/tasks/task",{"_index":1000,"title":{},"body":{"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts",{"_index":969,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts:14",{"_index":975,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:20",{"_index":980,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:22",{"_index":979,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/task/task.component.ts:26",{"_index":977,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/tasks",{"_index":1125,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/app/tasks/tasks.component.ts",{"_index":1081,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/tasks/tasks.component.ts:16",{"_index":1096,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:18",{"_index":1089,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:28",{"_index":1092,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:32",{"_index":1091,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:46",{"_index":1090,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:59",{"_index":1094,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.component.ts:69",{"_index":1095,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":1114,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.service.ts",{"_index":1126,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/tasks/tasks.service.ts:12",{"_index":1130,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:15",{"_index":1132,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:28",{"_index":1135,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:36",{"_index":1134,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/tasks/tasks.service.ts:46",{"_index":1137,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/users/profile/profile.component.ts",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/users/profile/profile.component.ts:12",{"_index":880,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/profile/profile.component.ts:18",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/users/users",{"_index":1163,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["src/app/users/users.component.ts",{"_index":1155,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/users/users.module.ts",{"_index":1160,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/users/users.service.ts",{"_index":1165,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.service.ts:11",{"_index":1168,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users/users.service.ts:8",{"_index":1167,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test.ts",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/utilities.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stackexchange",{"_index":956,"title":{},"body":{"components/SocialComponent.html":{}}}],["start",{"_index":703,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["started",{"_index":1237,"title":{"index.html":{}},"body":{}}],["state",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["state.url",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":777,"title":{},"body":{"components/ModalComponent.html":{}}}],["status",{"_index":537,"title":{},"body":{"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["status.component",{"_index":591,"title":{},"body":{"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{}}}],["status.component.html",{"_index":539,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.scss",{"_index":538,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts",{"_index":536,"title":{},"body":{"components/HttpStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:14",{"_index":552,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:15",{"_index":555,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:16",{"_index":553,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:17",{"_index":547,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:28",{"_index":550,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.component.ts:45",{"_index":549,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.module').then((m",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["status.module.ts",{"_index":590,"title":{},"body":{"modules/HttpStatusModule.html":{}}}],["status.service",{"_index":558,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["status.service.ts",{"_index":594,"title":{},"body":{"injectables/HttpStatusService.html":{},"coverage.html":{}}}],["status.service.ts:6",{"_index":598,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status.service.ts:9",{"_index":600,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["status/http",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HttpStatusComponent.html":{},"modules/HttpStatusModule.html":{},"modules/HttpStatusRoutingModule.html":{},"injectables/HttpStatusService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"miscellaneous/functions.html":{}}}],["storage.getitem('access_token",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["stored",{"_index":1259,"title":{},"body":{"index.html":{}}}],["string",{"_index":267,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":371,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["styleurls",{"_index":376,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe((event",{"_index":835,"title":{},"body":{"components/ModalComponent.html":{}}}],["subscribe(observer",{"_index":1079,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["subscription",{"_index":504,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["support",{"_index":1285,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":392,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["svgpathdata",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":763,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{}}}],["t[p",{"_index":854,"title":{},"body":{"injectables/ModalService.html":{}}}],["table",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":277,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tap((list",{"_index":1142,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((lists",{"_index":1146,"title":{},"body":{"injectables/TasksService.html":{}}}],["tap((value",{"_index":315,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/UsersService.html":{}}}],["task",{"_index":57,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["task.component.html",{"_index":971,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":970,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.description",{"_index":1008,"title":{},"body":{"components/TaskEditorComponent.html":{}}}],["task.model",{"_index":1012,"title":{},"body":{"interfaces/TaskList.html":{}}}],["task.title",{"_index":989,"title":{},"body":{"components/TaskComponent.html":{}}}],["task/task.component",{"_index":1117,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskcomponent",{"_index":54,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskeditorcomponent",{"_index":56,"title":{"components/TaskEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tasklist",{"_index":420,"title":{"interfaces/TaskList.html":{}},"body":{"injectables/FakeTasksService.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasklist.title",{"_index":1048,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tasklistcomponent",{"_index":59,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklisteditorcomponent",{"_index":61,"title":{"components/TaskListEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistform",{"_index":1052,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["tasklists",{"_index":1084,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["tasks.component",{"_index":1115,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks.component.html",{"_index":1083,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1082,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.length",{"_index":470,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service",{"_index":1063,"title":{},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{}}}],["tasks.service.ts",{"_index":410,"title":{},"body":{"injectables/FakeTasksService.html":{},"coverage.html":{}}}],["tasks.service.ts:10",{"_index":460,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:105",{"_index":417,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:109",{"_index":418,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:113",{"_index":421,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:117",{"_index":425,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:122",{"_index":429,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:127",{"_index":431,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasks.service.ts:78",{"_index":449,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["tasksapiurl",{"_index":1122,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskscomponent",{"_index":63,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmodule",{"_index":151,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tasksroutingmodule",{"_index":1113,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1053,"title":{"injectables/TasksService.html":{}},"body":{"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["technologies",{"_index":638,"title":{},"body":{"components/IndexComponent.html":{}}}],["template",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["templatename",{"_index":814,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":378,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["test",{"_index":1265,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1275,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1264,"title":{},"body":{"index.html":{}}}],["this.api}/auth/${type",{"_index":325,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/login",{"_index":308,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.api}/auth/signup",{"_index":321,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authservice.authstatus$.subscribe((isauthorized",{"_index":517,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authservice.connect(type",{"_index":400,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.authservice.getname",{"_index":522,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.isloggedin",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isloggedout",{"_index":873,"title":{},"body":{"guards/NoAuthGuard.html":{}}}],["this.authservice.login(this.loginform.value).subscribe",{"_index":693,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authservice.logout",{"_index":741,"title":{},"body":{"components/LogoutFormComponent.html":{}}}],["this.authservice.signup(this.signupform.value).subscribe",{"_index":897,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.authstatussource.asobservable",{"_index":290,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(false",{"_index":303,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(isloggedin",{"_index":297,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authstatussource.next(true",{"_index":305,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.authsubscription",{"_index":516,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.authsubscription?.unsubscribe",{"_index":524,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.bindinputs(componentref.instance",{"_index":805,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bindoutputs(componentref.instance",{"_index":807,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.canactivate(route",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"guards/NoAuthGuard.html":{}}}],["this.code",{"_index":562,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory",{"_index":798,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype",{"_index":795,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componenttype?.name",{"_index":817,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.error",{"_index":403,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.errors",{"_index":699,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.fb.group",{"_index":679,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.gettasklists",{"_index":1099,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":1140,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.http.get(url",{"_index":333,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.get(url).pipe",{"_index":1145,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["this.http.head(url",{"_index":326,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.http.post(url",{"_index":309,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.httpstatus.setstatus(this.code",{"_index":560,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.inputs",{"_index":796,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.isauthorized",{"_index":520,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.isbackavailable",{"_index":567,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.isloggedin",{"_index":296,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.isready",{"_index":690,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["this.jwtservice.decodetoken",{"_index":341,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.jwtservice.istokenexpired",{"_index":337,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.lists",{"_index":469,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.localstorage.removeitem('access_token",{"_index":302,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.localstorage.setitem('access_token",{"_index":304,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.location.back",{"_index":572,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.logger.log('user",{"_index":694,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.logger.log(`${request.method.touppercase",{"_index":473,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.logger.log(`added",{"_index":1143,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`connected",{"_index":335,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`fetched",{"_index":1147,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`logging",{"_index":316,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`signed",{"_index":322,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.logger.log(`updated",{"_index":1154,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(error",{"_index":697,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.controls",{"_index":691,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":692,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.message",{"_index":564,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.modal.viewcontainerref",{"_index":800,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.closeall",{"_index":1043,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open",{"_index":1037,"title":{},"body":{"components/TaskListComponent.html":{},"components/TasksComponent.html":{}}}],["this.modalservice.open('delete",{"_index":988,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.modalservice.open('edit",{"_index":987,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.name",{"_index":521,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ngbmodalservice.dismissall",{"_index":864,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.ngbmodalservice.open(modalcomponent",{"_index":859,"title":{},"body":{"injectables/ModalService.html":{}}}],["this.onaddtasklist(tasklist",{"_index":1102,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.ondelete.emit",{"_index":1047,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist",{"_index":1040,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onedittasklist(tasklist",{"_index":1045,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.onsave.emit(list",{"_index":1075,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.outputs",{"_index":797,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.redirectto",{"_index":688,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.res",{"_index":606,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.res.status(code",{"_index":607,"title":{},"body":{"injectables/HttpStatusService.html":{}}}],["this.route.data.subscribe((data",{"_index":561,"title":{},"body":{"components/HttpStatusComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":687,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.route.snapshot",{"_index":396,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":402,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/LogoutFormComponent.html":{}}}],["this.router.navigatebyurl(this.redirectto",{"_index":696,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["this.settoken(null",{"_index":336,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.settoken(value['access_token",{"_index":318,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["this.signupform.controls",{"_index":895,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.signupform.valid",{"_index":896,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["this.subscription.complete",{"_index":788,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.subscription.next(void",{"_index":787,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.tasklist",{"_index":1042,"title":{},"body":{"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["this.tasklist.title",{"_index":1065,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls",{"_index":1070,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.addvalidators((control",{"_index":1067,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.setvalue(title",{"_index":1066,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.controls.title.value",{"_index":1072,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklistform.valid",{"_index":1071,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasklists",{"_index":1101,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.filter((l",{"_index":1106,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasklists.push(tasklist",{"_index":1104,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks",{"_index":468,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[0",{"_index":435,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[1",{"_index":436,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[2",{"_index":438,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[3",{"_index":439,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[4",{"_index":444,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[5",{"_index":445,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[6",{"_index":447,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasks[7",{"_index":448,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["this.tasksservice.addtasklist(title).subscribe(observer",{"_index":1080,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.tasksservice.gettasklists().subscribe",{"_index":1100,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasksservice.updatetasklist",{"_index":1078,"title":{},"body":{"components/TaskListEditorComponent.html":{}}}],["this.title",{"_index":794,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.titleservice.settitle('todo",{"_index":621,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.updateauthstatus(isauthorized",{"_index":519,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["this.user",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.usersservice.getprofile().subscribe((user",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{}}}],["those",{"_index":630,"title":{},"body":{"components/IndexComponent.html":{}}}],["throw",{"_index":816,"title":{},"body":{"components/ModalComponent.html":{}}}],["title",{"_index":434,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/IndexComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListEditorComponent.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["titleservice",{"_index":611,"title":{},"body":{"components/IndexComponent.html":{}}}],["todo",{"_index":525,"title":{},"body":{"components/HeaderComponent.html":{},"components/SocialComponent.html":{}}}],["token",{"_index":301,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{}}}],["tokengetter",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltip",{"_index":720,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["top",{"_index":734,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["transition",{"_index":993,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/SignUpFormComponent.html":{},"interfaces/SocialService.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":406,"title":{},"body":{"components/ConnectAccountFormComponent.html":{}}}],["tslib",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":920,"title":{},"body":{"components/SocialComponent.html":{}}}],["twitter:hover",{"_index":922,"title":{},"body":{"components/SocialComponent.html":{}}}],["type",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"directives/ModalDirective.html":{},"injectables/ModalService.html":{},"guards/NoAuthGuard.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"interfaces/SocialService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"interfaces/TaskList.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type=\"danger",{"_index":704,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["typealiases",{"_index":1291,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":809,"title":{},"body":{"components/ModalComponent.html":{}}}],["undefined",{"_index":427,"title":{},"body":{"injectables/FakeTasksService.html":{},"components/HeaderComponent.html":{}}}],["unicode",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1263,"title":{},"body":{"index.html":{}}}],["universalmodule",{"_index":180,"title":{},"body":{"modules/AppServerModule.html":{}}}],["unknown",{"_index":405,"title":{},"body":{"components/ConnectAccountFormComponent.html":{},"components/ModalComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":323,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/TaskEditorComponent.html":{}}}],["updateauthstatus",{"_index":497,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updateauthstatus(isauthorized",{"_index":502,"title":{},"body":{"components/HeaderComponent.html":{},"components/IndexComponent.html":{}}}],["updatetasklist",{"_index":1128,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklist(tasklist",{"_index":1136,"title":{},"body":{"injectables/TasksService.html":{}}}],["url",{"_index":307,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":635,"title":{},"body":{"components/IndexComponent.html":{},"components/TaskEditorComponent.html":{},"index.html":{}}}],["usefactory",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.id",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.name",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userinputkey",{"_index":815,"title":{},"body":{"components/ModalComponent.html":{}}}],["userinputs",{"_index":757,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["userinputs[templatename",{"_index":820,"title":{},"body":{"components/ModalComponent.html":{}}}],["username",{"_index":280,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{}}}],["useroutputkey",{"_index":829,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs",{"_index":759,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModalService.html":{},"miscellaneous/typealiases.html":{}}}],["useroutputs[templatename",{"_index":833,"title":{},"body":{"components/ModalComponent.html":{}}}],["useroutputs[useroutputkey",{"_index":831,"title":{},"body":{"components/ModalComponent.html":{}}}],["users",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["users.component",{"_index":1161,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["users.service",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userscomponent",{"_index":65,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":148,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersroutingmodule",{"_index":1159,"title":{"modules/UsersRoutingModule.html":{}},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":879,"title":{"injectables/UsersService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["using",{"_index":641,"title":{},"body":{"components/IndexComponent.html":{}}}],["valid",{"_index":903,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators",{"_index":686,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["validators.email",{"_index":892,"title":{},"body":{"components/SignUpFormComponent.html":{}}}],["validators.minlength(8",{"_index":681,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["validators.required",{"_index":680,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"components/TaskListEditorComponent.html":{}}}],["value",{"_index":317,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"injectables/FakeTasksService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConnectAccountFormComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"components/IndexComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1296,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1242,"title":{},"body":{"index.html":{}}}],["very",{"_index":441,"title":{},"body":{"injectables/FakeTasksService.html":{}}}],["via",{"_index":1267,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":781,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild(modaldirective",{"_index":776,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref",{"_index":799,"title":{},"body":{"components/ModalComponent.html":{},"directives/ModalDirective.html":{}}}],["viewcontainerref.clear",{"_index":801,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":803,"title":{},"body":{"components/ModalComponent.html":{}}}],["visibility",{"_index":991,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["vk",{"_index":928,"title":{},"body":{"components/SocialComponent.html":{}}}],["vk:hover",{"_index":930,"title":{},"body":{"components/SocialComponent.html":{}}}],["vkontakte",{"_index":351,"title":{},"body":{"modules/AuthRoutingModule.html":{},"interfaces/SocialService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":300,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnectAccountFormComponent.html":{},"components/HeaderComponent.html":{},"components/HttpStatusComponent.html":{},"injectables/HttpStatusService.html":{},"components/IndexComponent.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"injectables/Logger.html":{},"components/LoginFormComponent.html":{},"components/LogoutFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModalService.html":{},"components/ProfileComponent.html":{},"interfaces/SignUpDto.html":{},"components/SignUpFormComponent.html":{},"components/SocialComponent.html":{},"components/TaskComponent.html":{},"components/TaskEditorComponent.html":{},"components/TaskListComponent.html":{},"components/TaskListEditorComponent.html":{},"components/TasksComponent.html":{}}}],["warn",{"_index":655,"title":{},"body":{"injectables/Logger.html":{}}}],["warn(...args",{"_index":661,"title":{},"body":{"injectables/Logger.html":{}}}],["web",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/FakeTasksService.html":{},"interfaces/JwtPayload.html":{},"interfaces/LogInDto.html":{},"interfaces/SignUpDto.html":{},"dependencies.html":{}}}],["width",{"_index":711,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{},"miscellaneous/variables.html":{}}}],["window.location.href",{"_index":914,"title":{},"body":{"components/SocialComponent.html":{}}}],["within",{"_index":717,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["youtube",{"_index":937,"title":{},"body":{"components/SocialComponent.html":{}}}],["z",{"_index":718,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignUpFormComponent.html":{}}}],["zone.js",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/HttpStatusModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n\n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n    \n      \n    \n    \n  `,\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            IndexComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { IndexComponent } from './index/index.component';\n\nexport function jwtOptionsFactory(storage: Storage) {\n  return {\n    tokenGetter: () => storage.getItem('access_token'),\n    skipWhenExpired: false,\n  };\n}\n\nconst jwtOptionsProvider = {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n};\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    IndexComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    HttpClientModule,\n    JwtModule.forRoot({ jwtOptionsProvider }),\n    FontAwesomeModule,\n    NgbModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { IndexComponent } from './index/index.component';\n\nconst authModule = () => import('./auth/auth.module').then((m) => m.AuthModule);\nconst usersModule = () => import('./users/users.module').then((m) => m.UsersModule);\nconst tasksModule = () => import('./tasks/tasks.module').then((m) => m.TasksModule);\nconst httpStatusModule = () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule);\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent, pathMatch: 'full' },\n  { path: 'auth', loadChildren: authModule },\n  { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n  { path: 'tasks', loadChildren: tasksModule, canActivate: [AuthGuard] },\n  { path: '**', loadChildren: httpStatusModule },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      initialNavigation: 'enabled',\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { UniversalModule } from '@ng-web-apis/universal';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n  imports: [AppModule, ServerModule, UniversalModule],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  template: `\n    \n      \n    \n  `,\n})\nexport class AuthComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isLoggedIn = this.authService.isLoggedIn();\n    if (isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], { queryParams: { to: state.url } });\n    return false;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const idToken = localStorage.getItem('id_token');\n\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + idToken),\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ConnectAccountFormComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            LogoutFormComponent\n                        \n                        \n                            SignUpFormComponent\n                        \n                        \n                            SocialComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SocialComponent } from './social/social.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthComponent } from './auth.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\n\n@NgModule({\n  declarations: [\n    LoginFormComponent,\n    SignUpFormComponent,\n    SocialComponent,\n    AuthComponent,\n    LogoutFormComponent,\n    ConnectAccountFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    NgbModule,\n    AuthRoutingModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { AuthGuard } from './auth.guard';\nimport { ConnectAccountFormComponent } from './connect-account-form/connect-account-form.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { LogoutFormComponent } from './logout-form/logout-form.component';\nimport { NoAuthGuard } from './no-auth.guard';\nimport { SignUpFormComponent } from './signup-form/signup-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      { path: 'login', component: LoginFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'signup', component: SignUpFormComponent, canActivate: [NoAuthGuard] },\n      { path: 'logout', component: LogoutFormComponent, canActivate: [AuthGuard] },\n      {\n        path: 'google',\n        component: ConnectAccountFormComponent,\n        data: { type: 'google' },\n        canActivate: [NoAuthGuard],\n      },\n      {\n        path: 'vkontakte',\n        component: ConnectAccountFormComponent,\n        data: { type: 'vkontakte' },\n        canActivate: [NoAuthGuard],\n      },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authStatus$\n                            \n                            \n                                    Private\n                                authStatusSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                getAuthUrl\n                            \n                            \n                                getName\n                            \n                            \n                                getUsername\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                setToken\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: string, localStorage: Storage, jwtService: JwtHelperService, logger: Logger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(type: string, parameters: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthUrl\n                        \n                    \n                \n            \n            \n                \ngetAuthUrl(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedOut\n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(data: LogInDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LogInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(data: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectAccountFormComponent.html":{"url":"components/ConnectAccountFormComponent.html","title":"component - ConnectAccountFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnectAccountFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/connect-account-form/connect-account-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-account-form\n            \n\n            \n                styleUrls\n                ./connect-account-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-account-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/connect-account-form/connect-account-form.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-connect-account-form',\n  templateUrl: './connect-account-form.component.html',\n  styleUrls: ['./connect-account-form.component.scss'],\n})\nexport class ConnectAccountFormComponent implements OnInit {\n  isReady = false;\n\n  error = '';\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner);\n  }\n\n  ngOnInit(): void {\n    const routeSnapshot = this.route.snapshot;\n    const type = routeSnapshot.data.type;\n    const params = routeSnapshot.queryParams;\n    if (params.code) {\n      this.authService.connect(type, params).subscribe(\n        () => {\n          this.router.navigateByUrl('/');\n        },\n        ({ error }) => {\n          this.error = error?.message ?? 'Unknown error. Try again.';\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    {{ error }}\n  \n\n\n    \n\n    \n                \n                    ./connect-account-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ error }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConnectAccountFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeTasksService.html":{"url":"injectables/FakeTasksService.html","title":"injectable - FakeTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FakeTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/fake-tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                            \n                                genId\n                            \n                            \n                                get\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/fake-tasks.service.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDb\n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { task: {}; list: {}; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genId\n                        \n                    \n                \n            \n            \n                \ngenId(tasks: TaskList[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                            TaskList[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(request: RequestInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/fake-tasks.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RequestInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/fake-tasks.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\nimport { Observable } from 'rxjs';\nimport { Logger } from '../logger/logger';\nimport { TaskList } from './shared/task-list.model';\nimport { Task } from './shared/task.model';\n\n@Injectable()\nexport class FakeTasksService implements InMemoryDbService {\n  private tasks: (Task & { list: number })[] = [\n    {\n      id: 0,\n      title: 'Task 0',\n      description: '',\n      isDone: false,\n      createdDate: 4000,\n      list: 0,\n    },\n    {\n      id: 1,\n      title: 'Task 1',\n      description: 'Has description',\n      isDone: false,\n      createdDate: 300,\n      list: 0,\n    },\n    {\n      id: 2,\n      title: 'Task 2',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 1,\n    },\n    {\n      id: 3,\n      title:\n        'Task 3 with a very very very very very very very very very very very very very very long name',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 1,\n    },\n    {\n      id: 4,\n      title: 'Task 4',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 3,\n    },\n    {\n      id: 5,\n      title: 'Task 5',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 3,\n    },\n    {\n      id: 6,\n      title: 'Task 6',\n      description: '',\n      isDone: false,\n      createdDate: 200,\n      list: 4,\n    },\n    {\n      id: 7,\n      title: 'Task 7',\n      description: 'Has description',\n      isDone: true,\n      createdDate: 100,\n      list: 4,\n    },\n  ];\n\n  private lists: TaskList[] = [\n    {\n      id: 0,\n      title: 'List 0',\n      tasks: [this.tasks[0], this.tasks[1]],\n    },\n    {\n      id: 1,\n      title: 'List 1',\n      tasks: [this.tasks[2], this.tasks[3]],\n    },\n    {\n      id: 2,\n      title:\n        'List 2 with a very very very very very very very very very very very very very very long name',\n      tasks: [],\n    },\n    {\n      id: 3,\n      title: 'List 3',\n      tasks: [this.tasks[4], this.tasks[5]],\n    },\n    {\n      id: 4,\n      title: 'List 4',\n      tasks: [this.tasks[6], this.tasks[7]],\n    },\n  ];\n\n  constructor(private logger: Logger) {}\n\n  createDb() {\n    return { task: this.tasks, list: this.lists };\n  }\n\n  genId(tasks: TaskList[]): number {\n    return tasks.length > 0 ? Math.max(...tasks.map((list) => list.id)) + 1 : 1;\n  }\n\n  get(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  post(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n\n  put(request: RequestInfo): Observable | undefined {\n    this.logger.log(`${request.method.toUpperCase()} ${request.url}`, request);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngular\n                            \n                            \n                                faNestJs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngular\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngular\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faNestJs\n                    \n                \n                    \n                        \n                                Defined in src/app/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faAngular } from '@fortawesome/free-brands-svg-icons';\nimport { faNestJs } from './fontawesome-svg-nestjs';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  faAngular = faAngular;\n  faNestJs = faNestJs;\n\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faAngular, faNestJs);\n  }\n}\n\n    \n\n    \n        \n  \n    Made with\n    \n      \n    \n    and\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Made with                  and                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                collapsed\n                            \n                            \n                                isAuthorized\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport {\n  faCheck,\n  faSignInAlt,\n  faSquare,\n  faUser,\n  faUserPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  collapsed = true;\n\n  isAuthorized = false;\n\n  name?: string;\n\n  constructor(private authService: AuthService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faCheck, faUser, faUserPlus, faSignInAlt);\n  }\n\n  ngOnInit(): void {\n    console.log('Add header subscription');\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      console.log('Update header subscription: ', isAuthorized);\n      this.updateAuthStatus(isAuthorized);\n    });\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n    if (isAuthorized) {\n      this.name = this.authService.getName();\n    } else {\n      this.name = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    console.log('Remove header subscription');\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n        \n          ToDo\n          \n            Alpha\n          \n        \n      \n\n      \n        \n      \n\n      \n        \n          \n            \n              \n                \n                {{ name }}\n              \n              \n                Profile\n                \n                Log out\n              \n            \n          \n          \n            \n              \n              Sign Up\n            \n            \n              \n              Log In\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .dropdown-menu-right {\n  right: 0;\n  left: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  ToDo                      Alpha                                                                                                                              {{ name }}                                            Profile                                Log out                                                                                      Sign Up                                                    Log In                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HttpStatusComponent.html":{"url":"components/HttpStatusComponent.html","title":"component - HttpStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HttpStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/http-status/http-status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-http-status\n            \n\n            \n                styleUrls\n                ./http-status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./http-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                description\n                            \n                            \n                                isBackAvailable\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpStatus: HttpStatusService, route: ActivatedRoute, location: Location, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpStatus\n                                                  \n                                                        \n                                                                        HttpStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBackAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Server Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/http-status/http-status.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { HttpStatusService } from './http-status.service';\n\n@Component({\n  selector: 'app-http-status',\n  templateUrl: './http-status.component.html',\n  styleUrls: ['./http-status.component.scss'],\n})\nexport class HttpStatusComponent implements OnInit {\n  code = 500;\n  message = 'Internal Server Error';\n  description = '';\n  isBackAvailable = true;\n\n  constructor(\n    private httpStatus: HttpStatusService,\n    private route: ActivatedRoute,\n    private location: Location,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faArrowLeft, faHome);\n  }\n\n  ngOnInit(): void {\n    this.httpStatus.setStatus(this.code);\n    this.route.data.subscribe((data) => {\n      this.code = data.code ?? this.code;\n      this.message = data.message ?? this.message;\n      this.httpStatus.setStatus(this.code);\n    });\n    // if (isPlatformBrowser(this.platformId)) {\n    //   this.isBackAvailable = !!(document.referrer);\n    // } else if (isPlatformServer(this.platformId)) {\n    //   const { req, res } = this;\n    //   if (req) {\n    //     this.isBackAvailable = !!(req.headers.referrer);\n    //   }\n    // }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ code || 500 }}\n      {{ message || 'Internal Server Error' }}\n      {{ description }}\n      \n      \n        \n           Back\n        \n        \n           Homepage\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./http-status.component.scss\n                \n                @import '~bootstrap/scss/functions', '~bootstrap/scss/variables';\n\n.error-bg-gray {\n  background-color: $gray-200;\n}\n\n.error-code {\n  font-size: 10rem;\n  line-height: 0.9;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ code || 500 }}      {{ message || \\'Internal Server Error\\' }}      {{ description }}                               Back                           Homepage                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'HttpStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusModule.html":{"url":"modules/HttpStatusModule.html","title":"module - HttpStatusModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HttpStatusComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HttpStatusRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpStatusComponent } from './http-status.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpStatusRoutingModule } from './http-status-routing.module';\n\n@NgModule({\n  // eslint-disable-next-line prettier/prettier\n  declarations: [\n    HttpStatusComponent\n  ],\n  // eslint-disable-next-line prettier/prettier\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    HttpStatusRoutingModule,\n  ]\n})\nexport class HttpStatusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpStatusRoutingModule.html":{"url":"modules/HttpStatusRoutingModule.html","title":"module - HttpStatusRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpStatusRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/http-status/http-status-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpStatusComponent } from './http-status.component';\n\nconst routes: Routes = [\n  { path: '', component: HttpStatusComponent, data: { code: 404, message: 'Not Found' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HttpStatusRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpStatusService.html":{"url":"injectables/HttpStatusService.html","title":"injectable - HttpStatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpStatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-status/http-status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(res: Response)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-status/http-status.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                  \n                                                        \n                                                                    Response\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStatus(code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-status/http-status.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { Response } from 'express';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpStatusService {\n  constructor(@Optional() @Inject(RESPONSE) private res: Response) {}\n\n  public setStatus(code: number): void {\n    if (this.res) {\n      this.res.status(code);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/index/index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                styleUrls\n                ./index.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authSubscription\n                            \n                            \n                                isAuthorized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, titleService: Title, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/index/index.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthStatus\n                        \n                    \n                \n            \n            \n                \nupdateAuthStatus(isAuthorized: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/index/index.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAuthorized\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthorized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/index/index.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from '@app/auth/auth.service';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faCodeBranch, faCubes, faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent implements OnInit, OnDestroy {\n  authSubscription?: Subscription;\n\n  isAuthorized = false;\n\n  constructor(\n    private authService: AuthService,\n    private titleService: Title,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faCubes, faCodeBranch, faTerminal);\n  }\n\n  ngOnInit(): void {\n    this.authSubscription = this.authService.authStatus$.subscribe((isAuthorized) => {\n      this.updateAuthStatus(isAuthorized);\n    });\n    this.titleService.setTitle('ToDo');\n  }\n\n  updateAuthStatus(isAuthorized: boolean) {\n    this.isAuthorized = isAuthorized;\n  }\n\n  ngOnDestroy() {\n    this.authSubscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Organize it all\n    \n      \n        Free up your mental space. Regain clarity and calmness by getting all those tasks out of\n        your head and onto your to-do list no matter where you are or what device you use.\n      \n      \n        \n          \n            Launch\n          \n        \n        \n          \n            Sign Up\n          \n          \n            Log In\n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        \n          Modern Technologies\n          This application is developed using Angular 12 and NestJS 8.\n        \n      \n      \n        \n          \n        \n        \n          Open Source\n          This application is free software hosted on GitHub.\n          Source\n        \n      \n      \n        \n          \n        \n        \n          REST API\n          Develop awesome applications and services with our REST API.\n          Documentation\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./index.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organize it all                  Free up your mental space. Regain clarity and calmness by getting all those tasks out of        your head and onto your to-do list no matter where you are or what device you use.                                          Launch                                                Sign Up                                Log In                                                                                                                  Modern Technologies          This application is developed using Angular 12 and NestJS 8.                                                                Open Source          This application is free software hosted on GitHub.          Source                                                                REST API          Develop awesome applications and services with our REST API.          Documentation                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInDto.html":{"url":"interfaces/LogInDto.html","title":"interface - LogInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logger/logger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/logger/logger.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class Logger {\n  log(...args: any[]) {\n    console.log(...args);\n  }\n\n  warn(...args: any[]) {\n    console.warn(...args);\n  }\n\n  error(...args: any[]) {\n    console.error(...args);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, logger: Logger, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-form/login-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login-form/login-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Logger } from '@app/logger/logger';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private logger: Logger,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): Record {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isReady = false;\n      this.authService.logIn(this.loginForm.value).subscribe(\n        () => {\n          this.logger.log('User is logged in');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          this.logger.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to log in'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Log in with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Username or Email\n        \n          Username is required.\n        \n      \n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Log In\n      \n         Loading\n      \n    \n    \n      Create an account\n    \n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Log in with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Username or Email                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Log In               Loading                    Create an account      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutFormComponent.html":{"url":"components/LogoutFormComponent.html","title":"component - LogoutFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/logout-form/logout-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-form\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/logout-form/logout-form.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/logout-form/logout-form.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logout-form',\n  template: ``,\n})\nexport class LogoutFormComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.logOut();\n    this.router.navigateByUrl('/');\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bindInputs\n                            \n                            \n                                    Private\n                                bindOutputs\n                            \n                            \n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentType\n                            \n                            \n                                inputs\n                            \n                            \n                                outputs\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputs\n                    \n                \n                \n                    \n                        Type :         UserInputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputs\n                    \n                \n                \n                    \n                        Type :         UserOutputs\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/modal/modal.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindInputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindInputs(componentInstance: T, componentInputs: ComponentInputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInputs\n                                    \n                                                ComponentInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        bindOutputs\n                        \n                    \n                \n            \n            \n                \n                    \n                    bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentInstance\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentOutputs\n                                    \n                                                ComponentOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbActiveModal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ModalDirective, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Type,\n  ViewChild,\n} from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDirective } from './modal.directive';\nimport { UserInputs, UserOutputs } from './modal.service';\n\ntype ComponentInputs = ComponentFactory['inputs'];\ntype ComponentOutputs = ComponentFactory['outputs'];\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() title = '';\n  @Input() componentType?: Type;\n  @Input() inputs: UserInputs = {};\n  @Input() outputs: UserOutputs = {};\n\n  @ViewChild(ModalDirective, { static: true }) modal!: ModalDirective;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {}\n\n  ngOnInit(): void {\n    console.log('modal onInit');\n  }\n\n  ngOnDestroy(): void {\n    console.log('modal onDestroy');\n    // this.subscription.next(void 0);\n    // this.subscription.complete();\n  }\n\n  // See https://dev.to/this-is-angular/advance-angular-dynamic-component-12e\n\n  initialize(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs,\n    outputs: UserOutputs,\n  ) {\n    this.title = title;\n    this.componentType = componentType;\n    this.inputs = inputs;\n    this.outputs = outputs;\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      this.componentType,\n    );\n    const viewContainerRef = this.modal.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    console.log(`Binding inputs:`, this.inputs);\n    this.bindInputs(componentRef.instance, componentFactory.inputs);\n    console.log(`Binding outputs:`, this.outputs);\n    this.bindOutputs(componentRef.instance, componentFactory.outputs);\n  }\n\n  private bindInputs(componentInstance: T, componentInputs: ComponentInputs) {\n    const userInputs = this.inputs as Record; // FIXME: TypeScript compiler bug\n\n    Object.keys(userInputs).forEach((userInputKey) => {\n      if (!componentInputs.some(({ templateName }) => templateName === userInputKey)) {\n        throw new Error(\n          `Input ${userInputKey} is not a ${this.componentType?.name ?? 'dynamic component'} input`,\n        );\n      }\n    });\n\n    componentInputs.forEach(({ propName, templateName }) => {\n      const value = userInputs[templateName];\n      if (value) {\n        componentInstance[propName as keyof T] = value;\n      }\n    });\n  }\n\n  private bindOutputs(componentInstance: T, componentOutputs: ComponentOutputs) {\n    const userOutputs = this.outputs as Record void>; // FIXME: TypeScript compiler bug\n\n    componentOutputs.forEach(({ propName }) => {\n      if (!(componentInstance[propName as keyof T] instanceof EventEmitter)) {\n        throw new Error(`Output ${propName} must be an instance of EventEmitter`);\n      }\n    });\n\n    Object.keys(userOutputs).forEach((userOutputKey) => {\n      if (!componentOutputs.some(({ templateName }) => templateName === userOutputKey)) {\n        throw new Error(\n          `Output ${userOutputKey} is not a ${\n            this.componentType?.name ?? 'dynamic component'\n          } output.`,\n        );\n      }\n      if (!(userOutputs[userOutputKey] instanceof Function)) {\n        throw new Error(`Output ${userOutputKey} must be a function`);\n      }\n    });\n\n    componentOutputs.forEach(({ propName, templateName }) => {\n      const handler = userOutputs[templateName];\n      if (handler) {\n        (componentInstance[propName as keyof T] as unknown as EventEmitter)\n          // .pipe(takeUntil(this.subscription))\n          .subscribe((event) => {\n            handler(event);\n          });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n\n\n  \n  \n\n\n    \n\n    \n                \n                    ./modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModalDirective.html":{"url":"directives/ModalDirective.html","title":"directive - ModalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [modal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/modal/modal.directive.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[modal]',\n})\nexport class ModalDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalService.html":{"url":"injectables/ModalService.html","title":"injectable - ModalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/modal/modal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeAll\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngbModalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/modal/modal.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngbModalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(title: string, componentType: Type, inputs: UserInputs, outputs: UserOutputs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/modal/modal.service.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    componentType\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputs\n                                    \n                                                UserInputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    outputs\n                                    \n                                                UserOutputs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, Type } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalComponent } from './modal.component';\n\nexport type UserInputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? never : T[P];\n};\n\nexport type UserOutputs = {\n  [P in keyof T as string]?: T[P] extends EventEmitter ? (event: E) => any : never;\n};\n\n@Injectable()\nexport class ModalService {\n  constructor(private ngbModalService: NgbModal) {}\n\n  open(\n    title: string,\n    componentType: Type,\n    inputs: UserInputs = {},\n    outputs: UserOutputs = {},\n  ) {\n    const modalRef = this.ngbModalService.open(ModalComponent, {\n      centered: true,\n      scrollable: true,\n    });\n    (modalRef.componentInstance as ModalComponent).initialize(\n      title,\n      componentType,\n      inputs,\n      outputs,\n    );\n    return modalRef;\n  }\n\n  closeAll() {\n    this.ngbModalService.dismissAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NoAuthGuard.html":{"url":"guards/NoAuthGuard.html","title":"guard - NoAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    NoAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/no-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/no-auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/no-auth.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NoAuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot) {\n    const isLoggedOut = this.authService.isLoggedOut();\n    return isLoggedOut;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/profile/profile.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/profile/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/profile/profile.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSpinner, faSquare, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private usersService: UsersService, library: FaIconLibrary) {\n    library.addIcons(faSquare, faUser, faSpinner);\n  }\n\n  ngOnInit(): void {\n    this.usersService.getProfile().subscribe((user) => {\n      this.user = user;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n\n    User #{{ user.id }}: {{ user.name }}\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          User #{{ user.id }}: {{ user.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpDto.html":{"url":"interfaces/SignUpDto.html","title":"interface - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        LogInDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { API_PREFIX } from '@app/api';\nimport { Logger } from '@app/logger/logger';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface LogInDto {\n  username: string;\n  password: string;\n}\n\nexport interface SignUpDto extends LogInDto {\n  name: string;\n  email: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n}\n\nexport interface JwtPayload {\n  name: string;\n  username: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private authStatusSource = new BehaviorSubject(false);\n\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    @Inject(API_PREFIX) private api: string,\n    @Inject(LOCAL_STORAGE) private localStorage: Storage,\n    private jwtService: JwtHelperService,\n    private logger: Logger,\n    private http: HttpClient,\n  ) {\n    const isLoggedIn = this.isLoggedIn();\n    this.authStatusSource.next(isLoggedIn);\n  }\n\n  setToken(token: string | null): void {\n    if (token === null) {\n      this.localStorage.removeItem('access_token');\n      this.authStatusSource.next(false);\n    } else {\n      this.localStorage.setItem('access_token', token);\n      this.authStatusSource.next(true);\n    }\n  }\n\n  logIn(data: LogInDto): Observable {\n    const url = `${this.api}/auth/login`;\n    return this.http.post(url, data).pipe(\n      // retry(2), // FIXME: Do not retry on response\n      tap((value) => {\n        this.logger.log(`Logging in: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(), // FIXME: Do not retry on response\n    );\n  }\n\n  signUp(data: SignUpDto): Observable {\n    const url = `${this.api}/auth/signup`;\n    return this.http.post(url, data).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Signed up: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  getAuthUrl(type: string) {\n    const url = `${this.api}/auth/${type}`;\n    return this.http.head(url, { observe: 'events' });\n  }\n\n  connect(type: string, parameters: Record) {\n    const url = `${this.api}/auth/${type}`;\n    const params = new HttpParams().appendAll(parameters);\n    return this.http.get(url, { params }).pipe(\n      // retry(2),\n      tap((value) => {\n        this.logger.log(`Connected: `, value);\n        this.setToken(value['access_token']);\n      }),\n      // shareReplay(),\n    );\n  }\n\n  logOut(): void {\n    this.setToken(null);\n  }\n\n  isLoggedIn(): boolean {\n    return !this.jwtService.isTokenExpired();\n  }\n\n  isLoggedOut(): boolean {\n    return !this.isLoggedIn();\n  }\n\n  getUsername() {\n    const payload = this.jwtService.decodeToken();\n    return payload.username;\n  }\n\n  getName() {\n    const payload = this.jwtService.decodeToken();\n    return payload.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpFormComponent.html":{"url":"components/SignUpFormComponent.html","title":"component - SignUpFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup-form/signup-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup-form\n            \n\n            \n                styleUrls\n                ./signup-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                    Optional\n                                redirectTo\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router, route: ActivatedRoute, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup-form/signup-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup-form/signup-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup-form/signup-form.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSquare, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.scss'],\n})\nexport class SignUpFormComponent implements OnInit {\n  signUpForm = this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    username: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  redirectTo?: string;\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSquare, faUserPlus);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectTo = params['to'];\n    });\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.signUpForm.controls;\n  }\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      this.isReady = false;\n      this.authService.signUp(this.signUpForm.value).subscribe(\n        () => {\n          console.log('User is signed up');\n          this.isReady = true;\n          this.router.navigateByUrl(this.redirectTo ?? '/');\n        },\n        ({ error }) => {\n          console.log(error);\n          this.isReady = true;\n          if (Array.isArray(error?.message)) {\n            this.errors = error.message;\n          } else {\n            this.errors = [error?.message ?? 'Failed to sign up'];\n          }\n        },\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n    Sign up with\n    \n  \n  \n    \n  \n  \n    \n    or\n    \n  \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n\n    \n      \n        \n        Name\n        \n          Name is required.\n        \n      \n\n      \n        \n        Email address\n        \n          Email address is required.\n          Please provide a valid email address.\n        \n      \n\n      \n        \n        Username\n        \n          Username is required.\n        \n      \n\n      \n        \n        Password\n        \n          Password is required.\n          \n            Password must be at least 8 characters long.\n          \n        \n      \n    \n  \n  \n    \n      Sign Up\n      \n         Loading\n      \n    \n    \n      \n        Log in with existing account\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signup-form.component.scss\n                \n                form {\n  max-width: 350px;\n  min-width: 200px;\n}\n\n.form-floating {\n  &:focus-within {\n    z-index: 1;\n  }\n\n  & > .invalid-tooltip {\n    display: none !important;\n  }\n\n  & > .form-control:focus ~ .invalid-tooltip {\n    display: block !important;\n  }\n\n  & > label {\n    opacity: 0.85;\n  }\n\n  & > .form-control {\n    border-radius: 0;\n    border-left-width: 2px;\n    border-right-width: 2px;\n  }\n\n  &:first-of-type > .form-control {\n    border-top-width: 2px;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n  }\n\n  &:last-of-type > .form-control {\n    border-bottom-width: 2px;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign up with                        or             0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Name                  Name is required.                                    Email address                  Email address is required.          Please provide a valid email address.                                    Username                  Username is required.                                    Password                  Password is required.                      Password must be at least 8 characters long.                                          Sign Up               Loading                            Log in with existing account            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SocialComponent.html":{"url":"components/SocialComponent.html","title":"component - SocialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SocialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/social/social.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-social\n            \n\n            \n                styleUrls\n                ./social.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./social.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/social/social.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(type: SocialServiceType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/social/social.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SocialServiceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : services\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/social/social.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { SocialServiceType, services } from './social.model';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.scss'],\n})\nexport class SocialComponent {\n  services = services;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logIn(type: SocialServiceType) {\n    window.location.href = `/api/auth/${type}`;\n  }\n}\n\n    \n\n    \n        \n  \n  {{ service.title }}\n\n\n    \n\n    \n                \n                    ./social.component.scss\n                \n                // TODO: Rewrite with SCSS functions\n\n.twitter {\n  background-color: #00acee;\n  border-color: #00acee;\n}\n\n.twitter:hover {\n  background-color: #08b2f5;\n  border-color: #08b2f5;\n}\n\n.facebook {\n  background-color: #3b5998;\n  border-color: #3b5998;\n}\n\n.facebook:hover {\n  background-color: #4966a5;\n  border-color: #4966a5;\n}\n\n.vk {\n  background-color: #4d7198;\n  border-color: #4d7198;\n}\n\n.vk:hover {\n  background-color: #577ea7;\n  border-color: #577ea7;\n}\n\n.google {\n  background-color: #db4a39;\n  border-color: #db4a39;\n}\n\n.google:hover {\n  background-color: #e95343;\n  border-color: #e95343;\n}\n\n.linkedin {\n  background-color: #0e76a8;\n  border-color: #0e76a8;\n}\n\n.youtube {\n  background-color: #c4302b;\n  border-color: #c4302b;\n}\n\n.github {\n  background-color: #171515;\n  border-color: #171515;\n}\n\n.android {\n  background-color: #a4c639;\n  border-color: #a4c639;\n}\n\n.skype {\n  background-color: #00aff0;\n  border-color: #00aff0;\n}\n\n.dropbox {\n  background-color: #3d9ae8;\n  border-color: #3d9ae8;\n}\n\n.foursquare {\n  background-color: #25a0ca;\n  border-color: #25a0ca;\n}\n\n.apple {\n  background-color: #cdcdcd;\n  border-color: #cdcdcd;\n}\n\n.dribbble {\n  background-color: #ea4c89;\n  border-color: #ea4c89;\n}\n\n.instagram {\n  background-color: #3f729b;\n  border-color: #3f729b;\n}\n\n.pinterest {\n  background-color: #c8232c;\n  border-color: #c8232c;\n}\n\n.stackexchange {\n  background-color: #ef8236;\n  border-color: #ef8236;\n}\n\n.flickr {\n  background-color: #ff0084;\n  border-color: #ff0084;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ service.title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'SocialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialService.html":{"url":"interfaces/SocialService.html","title":"interface - SocialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SocialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/social/social.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            isEnabled\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SocialServiceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SocialServiceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition, faFacebookF, faGoogle, faVk } from '@fortawesome/free-brands-svg-icons';\n\nexport type SocialServiceType = 'facebook' | 'vkontakte' | 'google';\n\nexport interface SocialService {\n  type: SocialServiceType;\n  title: string;\n  icon: IconDefinition;\n  isEnabled: boolean;\n}\n\nexport const services: SocialService[] = [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDone\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: number;\n  title: string;\n  description: string;\n  isDone: boolean;\n  createdDate: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                styleUrls\n                ./task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task/task.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task/task.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { Task } from '../shared/task.model';\nimport { TaskEditorComponent } from '../task-editor/task-editor.component';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash);\n  }\n\n  ngOnInit(): void {}\n\n  editTask(task: Task) {\n    this.modalService.open('Edit task', TaskEditorComponent, { task });\n  }\n\n  deleteTask(task: Task) {\n    this.modalService.open('Delete task', TaskEditorComponent, { task });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ task.title }}\n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./task.component.scss\n                \n                .task {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ task.title }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskEditorComponent.html":{"url":"components/TaskEditorComponent.html","title":"component - TaskEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-editor/task-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-editor\n            \n\n            \n                styleUrls\n                ./task-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-editor/task-editor.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-editor/task-editor.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from '../shared/task.model';\n\n@Component({\n  selector: 'app-task-editor',\n  templateUrl: './task-editor.component.html',\n  styleUrls: ['./task-editor.component.scss'],\n})\nexport class TaskEditorComponent implements OnInit {\n  @Input() task!: Task;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Title\n    \n    Please use up to 255 characters.\n  \n  \n    Description\n    {{ task.description }}\n  \n  Save\n\n\n    \n\n    \n                \n                    ./task-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title        Please use up to 255 characters.        Description    {{ task.description }}    Save'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskList.html":{"url":"interfaces/TaskList.html","title":"interface - TaskList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/shared/task-list.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from './task.model';\n\nexport interface TaskList {\n  id: number;\n  title: string;\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list/task-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTaskList\n                            \n                            \n                                editTaskList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteTaskList\n                            \n                            \n                                onEditTaskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskList\n                        \n                    \n                \n            \n            \n                \ndeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTaskList\n                        \n                    \n                \n            \n            \n                \neditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditTaskList\n                        \n                    \n                \n            \n            \n                \nonEditTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list/task-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faPencilAlt, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from '../modal/modal.service';\nimport { TaskList } from '../shared/task-list.model';\nimport { TaskListEditorComponent } from '../task-list-editor/task-list-editor.component';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss'],\n})\nexport class TaskListComponent implements OnInit {\n  @Input() taskList!: TaskList;\n\n  @Output() onDelete = new EventEmitter();\n\n  constructor(private modalService: ModalService, library: FaIconLibrary) {\n    library.addIcons(faPencilAlt, faTrash, faPlus);\n  }\n\n  ngOnInit(): void {}\n\n  editTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Edit task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: this.onEditTaskList,\n      },\n    );\n  }\n\n  onEditTaskList(taskList: TaskList) {\n    console.log('Edited task list:', taskList);\n    this.taskList = taskList;\n    this.modalService.closeAll();\n  }\n\n  deleteTaskList(taskList: TaskList) {\n    this.modalService.open(\n      'Delete task list',\n      TaskListEditorComponent,\n      { taskList },\n      {\n        onSave: (taskList: any) => {\n          this.onEditTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    console.log('Deleted task list:', taskList);\n    this.onDelete.emit();\n    this.modalService.closeAll();\n  }\n\n  addTask(taskList: TaskList) {}\n}\n\n    \n\n    \n        \n  \n    {{ taskList.title }}\n    \n      \n    \n    \n      \n    \n  \n  \n     0\" [ngIfElse]=\"noTasks\">\n      \n        \n      \n    \n\n    \n      No tasks\n    \n  \n  \n    \n       Add task\n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.component.scss\n                \n                @import '~bootstrap/scss/functions',\n        '~bootstrap/scss/variables';\n\n.card-header, .card-footer {\n  background-color: $gray-200;\n}\n\n.card-header {\n  button {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s linear 0.33s, opacity 0.33s linear;\n  }\n\n  &:hover button {\n    visibility: inherit;\n    opacity: 1;\n    transition-delay: 0s;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ taskList.title }}                                     0\" [ngIfElse]=\"noTasks\">                                  No tasks                   Add task      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListEditorComponent.html":{"url":"components/TaskListEditorComponent.html","title":"component - TaskListEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list-editor/task-list-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list-editor\n            \n\n            \n                styleUrls\n                ./task-list-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                isReady\n                            \n                            \n                                taskListForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, tasksService: TasksService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskList\n                    \n                \n                \n                    \n                        Type :         TaskList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskListForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/task-list-editor/task-list-editor.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSave, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { TaskList } from '../shared/task-list.model';\nimport { TasksService } from '../tasks.service';\n\n@Component({\n  selector: 'app-task-list-editor',\n  templateUrl: './task-list-editor.component.html',\n  styleUrls: ['./task-list-editor.component.scss'],\n})\nexport class TaskListEditorComponent implements OnInit {\n  @Input()\n  taskList?: TaskList;\n\n  @Output()\n  onSave = new EventEmitter();\n\n  taskListForm = this.fb.group({\n    title: ['', Validators.required],\n  });\n\n  errors?: string[];\n\n  isReady = false;\n\n  constructor(private fb: FormBuilder, private tasksService: TasksService, library: FaIconLibrary) {\n    library.addIcons(faSave, faSpinner);\n  }\n\n  ngOnInit(): void {\n    if (this.taskList) {\n      const title = this.taskList.title;\n      this.taskListForm.controls.title.setValue(title);\n      this.taskListForm.controls.title.addValidators((control) => {\n        return title == control.value ? { sameValue: { value: control.value } } : null;\n      });\n    }\n    this.isReady = true;\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.taskListForm.controls;\n  }\n\n  onSubmit(): void {\n    if (this.taskListForm.valid) {\n      this.isReady = false;\n      const title = this.taskListForm.controls.title.value;\n      const observer = {\n        next: (list: TaskList | null) => {\n          this.isReady = true;\n          if (list) {\n            console.log('Saved task list: ', list);\n            this.onSave.emit(list);\n          } else {\n            console.error('Saved null task list');\n          }\n        },\n        error: (error: any) => {\n          this.isReady = true;\n          console.error('Failed to save list: ', error);\n        },\n      };\n      if (this.taskList) {\n        this.tasksService.updateTaskList({ ...this.taskList, title }).subscribe(observer);\n      } else {\n        this.tasksService.addTaskList(title).subscribe(observer);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     0\"\n      class=\"text-start\"\n      type=\"danger\"\n      (closed)=\"errors = []\">\n      \n        {{ error }}\n        \n      \n    \n    \n      \n        \n        Title\n        \n          Title is required.\n        \n      \n    \n  \n  \n    \n      \n         Save\n      \n      \n         Loading\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list-editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       0\"      class=\"text-start\"      type=\"danger\"      (closed)=\"errors = []\">              {{ error }}                                            Title                  Title is required.                                         Save                     Loading            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/tasks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isReady\n                            \n                            \n                                taskLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddTaskList\n                            \n                            \n                                onDeleteTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, modalService: ModalService, library: FaIconLibrary)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                        ModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        library\n                                                  \n                                                        \n                                                                    FaIconLibrary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddTaskList\n                        \n                    \n                \n            \n            \n                \nonAddTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteTaskList\n                        \n                    \n                \n            \n            \n                \nonDeleteTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskLists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskList[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faArrowLeft, faPlus, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { ModalService } from './modal/modal.service';\nimport { TaskList } from './shared/task-list.model';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { TasksService } from './tasks.service';\n// import * as Masonry from 'masonry-layout';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\nexport class TasksComponent implements OnInit {\n  taskLists: TaskList[] = [];\n\n  isReady = false;\n\n  constructor(\n    private tasksService: TasksService,\n    private modalService: ModalService,\n    library: FaIconLibrary,\n  ) {\n    library.addIcons(faSpinner, faPlus, faArrowLeft);\n  }\n\n  ngOnInit(): void {\n    this.getTaskLists();\n  }\n\n  getTaskLists(): void {\n    this.isReady = false;\n    this.tasksService.getTaskLists().subscribe(\n      (taskLists) => {\n        this.taskLists = taskLists;\n        this.isReady = true;\n      },\n      (error) => {\n        console.log(error);\n        this.isReady = true;\n      },\n    );\n  }\n\n  addTaskList(): void {\n    this.modalService.open(\n      'Add task list',\n      TaskListEditorComponent,\n      {},\n      {\n        onSave: (taskList) => {\n          this.onAddTaskList(taskList);\n        },\n      },\n    );\n  }\n\n  onAddTaskList(taskList: TaskList) {\n    if (taskList) {\n      console.log('Adding new task list:', taskList);\n      this.taskLists.push(taskList);\n    } else {\n      console.error('Adding null task list');\n    }\n    this.modalService.closeAll();\n  }\n\n  onDeleteTaskList(taskList: TaskList) {\n    this.taskLists = this.taskLists.filter((l) => l !== taskList);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      Back\n    \n    \n      \n      Add list\n    \n  \n\n  \n     0\" [ngIfElse]=\"noLists\">\n      \n        \n      \n    \n\n    \n      \n        No task lists\n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Back                    Add list             0\" [ngIfElse]=\"noLists\">                                          No task lists                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            ModalDirective\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskListEditorComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ModalService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskComponent } from './task/task.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TaskListEditorComponent } from './task-list-editor/task-list-editor.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ModalDirective } from './modal/modal.directive';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TasksService } from './tasks.service';\nimport { ModalService } from './modal/modal.service';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    TaskListComponent,\n    TaskListEditorComponent,\n    TaskComponent,\n    ModalComponent,\n    ModalDirective,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FontAwesomeModule,\n    TasksRoutingModule,\n    // HttpClientInMemoryWebApiModule.forFeature(\n    //   FakeTasksService, {\n    //     apiBase: tasksApiUrl,\n    //     dataEncapsulation: false,\n    //     delay: 1000\n    //   }\n    // ),\n  ],\n  providers: [ModalService, TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [{ path: '', component: TasksComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTaskList\n                            \n                            \n                                getTaskList\n                            \n                            \n                                getTaskLists\n                            \n                            \n                                updateTaskList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/tasks.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskList\n                        \n                    \n                \n            \n            \n                \naddTaskList(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskList\n                        \n                    \n                \n            \n            \n                \ngetTaskList(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskLists\n                        \n                    \n                \n            \n            \n                \ngetTaskLists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskList\n                        \n                    \n                \n            \n            \n                \nupdateTaskList(taskList: TaskList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/tasks.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                TaskList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TaskList } from './shared/task-list.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Logger } from '../logger/logger';\nimport { Task } from './shared/task.model';\n\nexport const apiPrefix = '/api';\n\n@Injectable()\nexport class TasksService {\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  addTaskList(title: string): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    const tasks: Task[] = [];\n    const taskList = { title, tasks } as TaskList;\n    return this.http\n      .post(url, taskList)\n      .pipe(\n        tap((list: TaskList) =>\n          this.logger.log(`Added task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n\n  getTaskLists(): Observable {\n    const url = `${apiPrefix}/tasks/list`;\n    return this.http.get(url).pipe(\n      tap((lists: TaskList[]) => this.logger.log(`Fetched ${lists.length} task lists`)),\n      // catchError(error => of([]))\n    );\n  }\n\n  getTaskList(id: number): Observable {\n    const url = `${apiPrefix}/tasks/list/${id}`;\n    return this.http.get(url).pipe(\n      tap((list: TaskList) =>\n        this.logger.log(`Fetched task list \"${list.title}\" with id: ${list.id}`),\n      ),\n      // catchError(error => of(null))\n    );\n  }\n\n  updateTaskList(taskList: TaskList): Observable {\n    const url = `${apiPrefix}/tasks/list/${taskList.id}`;\n    return this.http\n      .patch(url, taskList)\n      .pipe(\n        tap((list: any) =>\n          this.logger.log(`Updated task list \"${list.title}\" with id: ${list.id}`),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  template: `\n    \n      \n    \n  `,\n})\nexport class UsersComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConnectAccountFormComponent', 'selector': 'app-connect-account-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpStatusComponent', 'selector': 'app-http-status'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutFormComponent', 'selector': 'app-logout-form'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpFormComponent', 'selector': 'app-signup-form'},{'name': 'SocialComponent', 'selector': 'app-social'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskEditorComponent', 'selector': 'app-task-editor'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskListEditorComponent', 'selector': 'app-task-list-editor'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'ModalDirective', 'selector': '[modal]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [UsersComponent, ProfileComponent],\n  imports: [CommonModule, UsersRoutingModule, FontAwesomeModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersRoutingModule.html":{"url":"modules/UsersRoutingModule.html","title":"module - UsersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@app/auth/auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [{ path: '@me', component: ProfileComponent, canActivate: [AuthGuard] }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nexport const apiPrefix = '/api';\n\n@Injectable({ providedIn: 'root' })\nexport class UsersService {\n  constructor(private http: HttpClient) {}\n\n  getProfile() {\n    const url = `${apiPrefix}/users/@me`;\n    return this.http.get(url).pipe(\n      tap((value) => {\n        console.debug(UsersService.name, value);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api.ts\n            \n            variable\n            API_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            authModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            httpStatusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            tasksModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            usersModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            jwtOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            LogInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignUpDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/connect-account-form/connect-account-form.component.ts\n            \n            component\n            ConnectAccountFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/logout-form/logout-form.component.ts\n            \n            component\n            LogoutFormComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/no-auth.guard.ts\n            \n            guard\n            NoAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/signup-form/signup-form.component.ts\n            \n            component\n            SignUpFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.component.ts\n            \n            component\n            SocialComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            interface\n            SocialService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/social/social.model.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/fontawesome-svg-nestjs.ts\n            \n            variable\n            faNestJs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.component.ts\n            \n            component\n            HttpStatusComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/http-status/http-status.service.ts\n            \n            injectable\n            HttpStatusService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/logger/logger.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/fake-tasks.service.ts\n            \n            injectable\n            FakeTasksService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.directive.ts\n            \n            directive\n            ModalDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/modal/modal.service.ts\n            \n            injectable\n            ModalService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task-list.model.ts\n            \n            interface\n            TaskList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/shared/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/task-editor/task-editor.component.ts\n            \n            component\n            TaskEditorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list-editor/task-list-editor.component.ts\n            \n            component\n            TaskListEditorComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/tasks.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/users/users.service.ts\n            \n            variable\n            apiPrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            fillInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/utilities.ts\n            \n            function\n            getPropertyDescriptor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/platform-server : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.35\n        \n            @fortawesome/free-brands-svg-icons : ^5.15.3\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.3\n        \n            @ng-bootstrap/ng-bootstrap : ^11.0.0-beta.2\n        \n            @ng-web-apis/common : ^1.12.1\n        \n            @ng-web-apis/universal : ^1.12.0\n        \n            @nguniversal/express-engine : ^12.1.1\n        \n            bootstrap : ^5.1.3\n        \n            express : ^4.15.2\n        \n            rxjs : ^6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            fillInput   (src/.../utilities.ts)\n                        \n                        \n                            getElement   (src/.../utilities.ts)\n                        \n                        \n                            getPropertyDescriptor   (src/.../utilities.ts)\n                        \n                        \n                            jwtOptionsFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/testing/utilities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fillInput\n                        \n                    \n                \n            \n            \n                \nfillInput(fixture: ComponentFixture, name: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(fixture: ComponentFixture, selector: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n                                    \n                                                ComponentFixture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropertyDescriptor\n                        \n                    \n                \n            \n            \n                \ngetPropertyDescriptor(spyObj, prop)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spyObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsFactory\n                        \n                    \n                \n            \n            \n                \njwtOptionsFactory(storage: Storage)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storage\n                                    \n                                            Storage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 12.2.10.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpStatusRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HttpStatusModule\n\n\n\ncluster_HttpStatusModule_declarations\n\n\n\ncluster_HttpStatusModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIndexComponent\n\nIndexComponent\n\nAppModule -->\n\nIndexComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConnectAccountFormComponent\n\nConnectAccountFormComponent\n\nAuthModule -->\n\nConnectAccountFormComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nLogoutFormComponent\n\nLogoutFormComponent\n\nAuthModule -->\n\nLogoutFormComponent->AuthModule\n\n\n\n\n\nSignUpFormComponent\n\nSignUpFormComponent\n\nAuthModule -->\n\nSignUpFormComponent->AuthModule\n\n\n\n\n\nSocialComponent\n\nSocialComponent\n\nAuthModule -->\n\nSocialComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHttpStatusComponent\n\nHttpStatusComponent\n\n\n\nHttpStatusModule\n\nHttpStatusModule\n\nHttpStatusModule -->\n\nHttpStatusComponent->HttpStatusModule\n\n\n\n\n\nHttpStatusRoutingModule\n\nHttpStatusRoutingModule\n\nHttpStatusModule -->\n\nHttpStatusRoutingModule->HttpStatusModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nModalComponent->TasksModule\n\n\n\n\n\nModalDirective\n\nModalDirective\n\nTasksModule -->\n\nModalDirective->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskListEditorComponent\n\nTaskListEditorComponent\n\nTasksModule -->\n\nTaskListEditorComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nModalService\n\nModalService\n\nTasksModule -->\n\nModalService->TasksModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nProfileComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ComponentInputs   (src/.../modal.component.ts)\n                        \n                        \n                            ComponentOutputs   (src/.../modal.component.ts)\n                        \n                        \n                            SocialServiceType   (src/.../social.model.ts)\n                        \n                        \n                            UserInputs   (src/.../modal.service.ts)\n                        \n                        \n                            UserOutputs   (src/.../modal.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/modal/modal.component.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/auth/social/social.model.ts\n    \n    \n        \n            \n                \n                    \n                    SocialServiceType\n                \n            \n            \n                \n                        \"facebook\" | \"vkontakte\" | \"google\"\n\n                \n            \n        \n    \n    src/app/tasks/modal/modal.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserInputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserOutputs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PREFIX   (src/.../api.ts)\n                        \n                        \n                            apiPrefix   (src/.../tasks.service.ts)\n                        \n                        \n                            apiPrefix   (src/.../users.service.ts)\n                        \n                        \n                            authModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            faNestJs   (src/.../fontawesome-svg-nestjs.ts)\n                        \n                        \n                            httpStatusModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            jwtOptionsProvider   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../social.model.ts)\n                        \n                        \n                            tasksModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            usersModule   (src/.../app-routing.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Prefix of API url', {\n  providedIn: 'root',\n  factory() {\n    return environment.apiPrefix;\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/tasks/tasks.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./auth/auth.module').then((m) => m.AuthModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpStatusModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  import('./http-status/http-status.module').then((m) => m.HttpStatusModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./tasks/tasks.module').then((m) => m.TasksModule)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => import('./users/users.module').then((m) => m.UsersModule)\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiPrefix: '/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/footer/fontawesome-svg-nestjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        faNestJs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  prefix: 'fac' as IconPrefix,\n  iconName: 'nestjs' as IconName,\n  icon: [\n    448, // width\n    448, // height\n    [], // ligatures\n    null as unknown as string, // unicode\n    'm263.7 0.719c-19.46-1.006 12.72 18.27 0.9988 31.26-12.27 9.077 1.416 48.88-0.1754 18.49 3.394-17.79 40.65-30.13 12.84-45.82-4.085-2.519-8.849-3.982-13.66-3.937zm36.82 6.6c2.612 21.62-22.83 25.37-30.1 41.57-7.03 10.09 7.383 30.46-10.16 19.39-43.53-18.22-93.79-20.75-138.8-6.832-19.24 7.155-35.65 19.74-48.85 35.29-15.63 19.33-42.43 17.06-61.63 28.8-12.65 9.918-16.46 32.73 0.3332 40.86 11.2 6.288 11.17 26.13 28.04 27.23-6.202 26.14 10.74 3.74 11.45 4.435-2.931 11.82 1.25 25.68 9.903 8.13 15.14-17.54 46-10.09 67.36-7.207 54.73 12.15 97.61 62.21 102.1 118-2.552-17.41-28.58-25.75-31.15-3.865-7.939 13.05-13.94 14.28-11.56-1.939-2.561-22.18-7.91 35.32-27.75 19.01-21.13-4.086-18.92-24.7-15.15-39.36-14.87-14.09-40.67 1.287-41.67 20.28-2.139 18.45 6.539 37.96 21.44 48.94-12.53 0.754-22.63 5.863-4.617 10.56 44.54 20.83 101.9 6.692 131.2-33.15 12.31-11.68 19.47-42.85 22.48-48.39 8.823 43.34-11.13 90.62-48.64 114.3 16.94 1.43 46.45-12.7 54.99-12.36-18.28 24.18-42.63 43.69-70.16 56.36 61.42-3.345 119.4-40.38 148.9-94.25-4.725 26.71-15.46 52.33-31.15 74.45 42.49-27.7 72-74.04 79.66-124.1 5.656 15.42 2.235 47.41 5.288 53.08 37.7-51.71 45.79-121.8 23.49-181.5-11.05-31.38-28.36-62.08-51-85.69-0.6852 46.85-49.77 83.93-95.06 73.29-19.79-3.334 18.03-3.495 22.35-10.31 40.9-18.81 56.67-75.35 30.92-112.4-9.929-15.05-25.53-26.42-42.38-32.54z', // svgPathData\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtOptionsProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: JWT_OPTIONS,\n  useFactory: jwtOptionsFactory,\n  deps: [LOCAL_STORAGE],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/social/social.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialService[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    type: 'facebook',\n    title: 'Facebook',\n    icon: faFacebookF,\n    isEnabled: false,\n  },\n  {\n    type: 'vkontakte',\n    title: 'Vkontakte',\n    icon: faVk,\n    isEnabled: false,\n  },\n  {\n    type: 'google',\n    title: 'Google',\n    icon: faGoogle,\n    isEnabled: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
